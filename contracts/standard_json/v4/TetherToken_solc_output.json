{
  "contracts": {
    "TetherToken.sol": {
      "BasicToken": {
        "abi": [
          {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "name": "balances",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "maximumFee",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "_totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "name": "balance",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "basisPointsRate",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          }
        ],
        "devdoc": {
          "methods": {
            "balanceOf(address)": {
              "details": "Gets the balance of the specified address.",
              "params": {
                "_owner": "The address to query the the balance of."
              },
              "return": "An uint representing the amount owned by the passed address."
            },
            "transfer(address,uint256)": {
              "details": "transfer token for a specified address",
              "params": {
                "_to": "The address to transfer to.",
                "_value": "The amount to be transferred."
              }
            },
            "transferOwnership(address)": {
              "details": "Allows the current owner to transfer control of the contract to a newOwner.",
              "params": {
                "newOwner": "The address to transfer ownership to."
              }
            }
          },
          "title": "Basic token"
        },
        "evm": {
          "assembly": "",
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "gasEstimates": null,
          "legacyAssembly": null,
          "methodIdentifiers": {
            "_totalSupply()": "3eaaf86b",
            "balanceOf(address)": "70a08231",
            "balances(address)": "27e235e3",
            "basisPointsRate()": "dd644f72",
            "maximumFee()": "35390714",
            "owner()": "8da5cb5b",
            "totalSupply()": "18160ddd",
            "transfer(address,uint256)": "a9059cbb",
            "transferOwnership(address)": "f2fde38b"
          }
        },
        "metadata": "",
        "userdoc": {
          "methods": {}
        }
      },
      "BlackList": {
        "abi": [
          {
            "constant": false,
            "inputs": [
              {
                "name": "_evilUser",
                "type": "address"
              }
            ],
            "name": "addBlackList",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "name": "balances",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "maximumFee",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "_totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_maker",
                "type": "address"
              }
            ],
            "name": "getBlackListStatus",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "name": "balance",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "getOwner",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "basisPointsRate",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "name": "isBlackListed",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_clearedUser",
                "type": "address"
              }
            ],
            "name": "removeBlackList",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_blackListedUser",
                "type": "address"
              }
            ],
            "name": "destroyBlackFunds",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "_blackListedUser",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_balance",
                "type": "uint256"
              }
            ],
            "name": "DestroyedBlackFunds",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "_user",
                "type": "address"
              }
            ],
            "name": "AddedBlackList",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "_user",
                "type": "address"
              }
            ],
            "name": "RemovedBlackList",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          }
        ],
        "devdoc": {
          "methods": {
            "balanceOf(address)": {
              "details": "Gets the balance of the specified address.",
              "params": {
                "_owner": "The address to query the the balance of."
              },
              "return": "An uint representing the amount owned by the passed address."
            },
            "transfer(address,uint256)": {
              "details": "transfer token for a specified address",
              "params": {
                "_to": "The address to transfer to.",
                "_value": "The amount to be transferred."
              }
            },
            "transferOwnership(address)": {
              "details": "Allows the current owner to transfer control of the contract to a newOwner.",
              "params": {
                "newOwner": "The address to transfer ownership to."
              }
            }
          }
        },
        "evm": {
          "assembly": "",
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "gasEstimates": null,
          "legacyAssembly": null,
          "methodIdentifiers": {
            "_totalSupply()": "3eaaf86b",
            "addBlackList(address)": "0ecb93c0",
            "balanceOf(address)": "70a08231",
            "balances(address)": "27e235e3",
            "basisPointsRate()": "dd644f72",
            "destroyBlackFunds(address)": "f3bdc228",
            "getBlackListStatus(address)": "59bf1abe",
            "getOwner()": "893d20e8",
            "isBlackListed(address)": "e47d6060",
            "maximumFee()": "35390714",
            "owner()": "8da5cb5b",
            "removeBlackList(address)": "e4997dc5",
            "totalSupply()": "18160ddd",
            "transfer(address,uint256)": "a9059cbb",
            "transferOwnership(address)": "f2fde38b"
          }
        },
        "metadata": "",
        "userdoc": {
          "methods": {
            "getBlackListStatus(address)": {
              "notice": "//// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////"
            }
          }
        }
      },
      "ERC20": {
        "abi": [
          {
            "constant": false,
            "inputs": [
              {
                "name": "spender",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "from",
                "type": "address"
              },
              {
                "name": "to",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "_totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "who",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "to",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "owner",
                "type": "address"
              },
              {
                "name": "spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          }
        ],
        "devdoc": {
          "methods": {},
          "title": "ERC20 interface"
        },
        "evm": {
          "assembly": "",
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "gasEstimates": null,
          "legacyAssembly": null,
          "methodIdentifiers": {
            "_totalSupply()": "3eaaf86b",
            "allowance(address,address)": "dd62ed3e",
            "approve(address,uint256)": "095ea7b3",
            "balanceOf(address)": "70a08231",
            "totalSupply()": "18160ddd",
            "transfer(address,uint256)": "a9059cbb",
            "transferFrom(address,address,uint256)": "23b872dd"
          }
        },
        "metadata": "",
        "userdoc": {
          "methods": {}
        }
      },
      "ERC20Basic": {
        "abi": [
          {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "_totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "who",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "to",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          }
        ],
        "devdoc": {
          "methods": {},
          "title": "ERC20Basic"
        },
        "evm": {
          "assembly": "",
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "gasEstimates": null,
          "legacyAssembly": null,
          "methodIdentifiers": {
            "_totalSupply()": "3eaaf86b",
            "balanceOf(address)": "70a08231",
            "totalSupply()": "18160ddd",
            "transfer(address,uint256)": "a9059cbb"
          }
        },
        "metadata": "",
        "userdoc": {
          "methods": {}
        }
      },
      "Ownable": {
        "abi": [
          {
            "constant": true,
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          }
        ],
        "devdoc": {
          "methods": {
            "transferOwnership(address)": {
              "details": "Allows the current owner to transfer control of the contract to a newOwner.",
              "params": {
                "newOwner": "The address to transfer ownership to."
              }
            }
          },
          "title": "Ownable"
        },
        "evm": {
          "assembly": "    /* \"TetherToken.sol\":1165:1888  contract Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"TetherToken.sol\":1342:1403  function Ownable() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n  pop\n    /* \"TetherToken.sol\":1378:1383  owner */\n  0x0\n    /* \"TetherToken.sol\":1378:1396  owner = msg.sender */\n  dup1\n  sload\n  not(sub(exp(0x2, 0xa0), 0x1))\n  and\n    /* \"TetherToken.sol\":1386:1396  msg.sender */\n  caller\n    /* \"TetherToken.sol\":1378:1396  owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"TetherToken.sol\":1165:1888  contract Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"TetherToken.sol\":1165:1888  contract Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      and(div(calldataload(0x0), 0x100000000000000000000000000000000000000000000000000000000), 0xffffffff)\n      0x8da5cb5b\n      dup2\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"TetherToken.sol\":1188:1208  address public owner */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_4\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_4:\n        /* \"TetherToken.sol\":1188:1208  address public owner */\n      pop\n      tag_5\n      jump(tag_6)\n    tag_5:\n      0x40\n      dup1\n      mload\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"TetherToken.sol\":1738:1885  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_7:\n      pop\n        /* \"TetherToken.sol\":1738:1885  function transferOwnership(address newOwner) public onlyOwner {... */\n      tag_8\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_9)\n    tag_8:\n      stop\n        /* \"TetherToken.sol\":1188:1208  address public owner */\n    tag_6:\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n      dup2\n      jump\t// out\n        /* \"TetherToken.sol\":1738:1885  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_9:\n        /* \"TetherToken.sol\":1546:1551  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n        /* \"TetherToken.sol\":1532:1542  msg.sender */\n      caller\n        /* \"TetherToken.sol\":1532:1551  msg.sender == owner */\n      eq\n        /* \"TetherToken.sol\":1524:1552  require(msg.sender == owner) */\n      tag_11\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_11:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"TetherToken.sol\":1814:1836  newOwner != address(0) */\n      dup2\n      and\n      iszero\n        /* \"TetherToken.sol\":1810:1879  if (newOwner != address(0)) {... */\n      tag_13\n      jumpi\n        /* \"TetherToken.sol\":1852:1857  owner */\n      0x0\n        /* \"TetherToken.sol\":1852:1868  owner = newOwner */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(exp(0x2, 0xa0), 0x1)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"TetherToken.sol\":1810:1879  if (newOwner != address(0)) {... */\n    tag_13:\n        /* \"TetherToken.sol\":1738:1885  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820c85a0109dfa7afc7f21a38a30b6e2bad2f99bf5907034c08f190fc4470896c8f0029\n}\n",
          "bytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b5060008054600160a060020a03191633179055610126806100326000396000f30060806040526004361060485763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416638da5cb5b8114604d578063f2fde38b14607b575b600080fd5b348015605857600080fd5b50605f609b565b60408051600160a060020a039092168252519081900360200190f35b348015608657600080fd5b506099600160a060020a036004351660aa565b005b600054600160a060020a031681565b600054600160a060020a0316331460c057600080fd5b600160a060020a0381161560f7576000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b505600a165627a7a72305820c85a0109dfa7afc7f21a38a30b6e2bad2f99bf5907034c08f190fc4470896c8f0029",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x126 DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x48 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x8DA5CB5B DUP2 EQ PUSH1 0x4D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH1 0x7B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5F PUSH1 0x9B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x99 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0xAA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH1 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO PUSH1 0xF7 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xc8 GAS ADD MULMOD 0xdf 0xa7 0xaf 0xc7 CALLCODE BYTE CODESIZE LOG3 SIGNEXTEND PUSH15 0x2BAD2F99BF5907034C08F190FC4470 DUP10 PUSH13 0x8F002900000000000000000000 ",
            "sourceMap": "1165:723:0:-;;;1342:61;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1378:5:0;:18;;-1:-1:-1;;;;;;1378:18:0;1386:10;1378:18;;;1165:723;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "60806040526004361060485763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416638da5cb5b8114604d578063f2fde38b14607b575b600080fd5b348015605857600080fd5b50605f609b565b60408051600160a060020a039092168252519081900360200190f35b348015608657600080fd5b506099600160a060020a036004351660aa565b005b600054600160a060020a031681565b600054600160a060020a0316331460c057600080fd5b600160a060020a0381161560f7576000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b505600a165627a7a72305820c85a0109dfa7afc7f21a38a30b6e2bad2f99bf5907034c08f190fc4470896c8f0029",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x48 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x8DA5CB5B DUP2 EQ PUSH1 0x4D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH1 0x7B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5F PUSH1 0x9B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x99 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0xAA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH1 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO PUSH1 0xF7 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xc8 GAS ADD MULMOD 0xdf 0xa7 0xaf 0xc7 CALLCODE BYTE CODESIZE LOG3 SIGNEXTEND PUSH15 0x2BAD2F99BF5907034C08F190FC4470 DUP10 PUSH13 0x8F002900000000000000000000 ",
            "sourceMap": "1165:723:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1188:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1188:20:0;;;;;;;;-1:-1:-1;;;;;1188:20:0;;;;;;;;;;;;;;1738:147;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1738:147:0;-1:-1:-1;;;;;1738:147:0;;;;;;;1188:20;;;-1:-1:-1;;;;;1188:20:0;;:::o;1738:147::-;1546:5;;-1:-1:-1;;;;;1546:5:0;1532:10;:19;1524:28;;;;;;-1:-1:-1;;;;;1814:22:0;;;1810:69;;1852:5;:16;;-1:-1:-1;;1852:16:0;-1:-1:-1;;;;;1852:16:0;;;;;1810:69;1738:147;:::o"
          },
          "gasEstimates": {
            "creation": {
              "codeDepositCost": "58800",
              "executionCost": "20403",
              "totalCost": "79203"
            },
            "external": {
              "owner()": "537",
              "transferOwnership(address)": "20926"
            }
          },
          "legacyAssembly": {
            ".code": [
              {
                "begin": 1165,
                "end": 1888,
                "name": "PUSH",
                "value": "80"
              },
              {
                "begin": 1165,
                "end": 1888,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 1165,
                "end": 1888,
                "name": "MSTORE"
              },
              {
                "begin": 1342,
                "end": 1403,
                "name": "CALLVALUE"
              },
              {
                "begin": 8,
                "end": 17,
                "name": "DUP1"
              },
              {
                "begin": 5,
                "end": 7,
                "name": "ISZERO"
              },
              {
                "begin": 5,
                "end": 7,
                "name": "PUSH [tag]",
                "value": "1"
              },
              {
                "begin": 5,
                "end": 7,
                "name": "JUMPI"
              },
              {
                "begin": 30,
                "end": 31,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 27,
                "end": 28,
                "name": "DUP1"
              },
              {
                "begin": 20,
                "end": 32,
                "name": "REVERT"
              },
              {
                "begin": 5,
                "end": 7,
                "name": "tag",
                "value": "1"
              },
              {
                "begin": 5,
                "end": 7,
                "name": "JUMPDEST"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "POP"
              },
              {
                "begin": 1378,
                "end": 1383,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 1378,
                "end": 1396,
                "name": "DUP1"
              },
              {
                "begin": 1378,
                "end": 1396,
                "name": "SLOAD"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "2"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "EXP"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "NOT"
              },
              {
                "begin": 1378,
                "end": 1396,
                "name": "AND"
              },
              {
                "begin": 1386,
                "end": 1396,
                "name": "CALLER"
              },
              {
                "begin": 1378,
                "end": 1396,
                "name": "OR"
              },
              {
                "begin": 1378,
                "end": 1396,
                "name": "SWAP1"
              },
              {
                "begin": 1378,
                "end": 1396,
                "name": "SSTORE"
              },
              {
                "begin": 1165,
                "end": 1888,
                "name": "PUSH #[$]",
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 1165,
                "end": 1888,
                "name": "DUP1"
              },
              {
                "begin": 1165,
                "end": 1888,
                "name": "PUSH [$]",
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 1165,
                "end": 1888,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 1165,
                "end": 1888,
                "name": "CODECOPY"
              },
              {
                "begin": 1165,
                "end": 1888,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 1165,
                "end": 1888,
                "name": "RETURN"
              }
            ],
            ".data": {
              "0": {
                ".auxdata": "a165627a7a72305820c85a0109dfa7afc7f21a38a30b6e2bad2f99bf5907034c08f190fc4470896c8f0029",
                ".code": [
                  {
                    "begin": 1165,
                    "end": 1888,
                    "name": "PUSH",
                    "value": "80"
                  },
                  {
                    "begin": 1165,
                    "end": 1888,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 1165,
                    "end": 1888,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1165,
                    "end": 1888,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 1165,
                    "end": 1888,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 1165,
                    "end": 1888,
                    "name": "LT"
                  },
                  {
                    "begin": 1165,
                    "end": 1888,
                    "name": "PUSH [tag]",
                    "value": "1"
                  },
                  {
                    "begin": 1165,
                    "end": 1888,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1165,
                    "end": 1888,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 1165,
                    "end": 1888,
                    "name": "PUSH",
                    "value": "100000000000000000000000000000000000000000000000000000000"
                  },
                  {
                    "begin": 1165,
                    "end": 1888,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1165,
                    "end": 1888,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 1165,
                    "end": 1888,
                    "name": "DIV"
                  },
                  {
                    "begin": 1165,
                    "end": 1888,
                    "name": "AND"
                  },
                  {
                    "begin": 1165,
                    "end": 1888,
                    "name": "PUSH",
                    "value": "8DA5CB5B"
                  },
                  {
                    "begin": 1165,
                    "end": 1888,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1165,
                    "end": 1888,
                    "name": "EQ"
                  },
                  {
                    "begin": 1165,
                    "end": 1888,
                    "name": "PUSH [tag]",
                    "value": "2"
                  },
                  {
                    "begin": 1165,
                    "end": 1888,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1165,
                    "end": 1888,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1165,
                    "end": 1888,
                    "name": "PUSH",
                    "value": "F2FDE38B"
                  },
                  {
                    "begin": 1165,
                    "end": 1888,
                    "name": "EQ"
                  },
                  {
                    "begin": 1165,
                    "end": 1888,
                    "name": "PUSH [tag]",
                    "value": "3"
                  },
                  {
                    "begin": 1165,
                    "end": 1888,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1165,
                    "end": 1888,
                    "name": "tag",
                    "value": "1"
                  },
                  {
                    "begin": 1165,
                    "end": 1888,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1165,
                    "end": 1888,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1165,
                    "end": 1888,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1165,
                    "end": 1888,
                    "name": "REVERT"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "tag",
                    "value": "2"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "4"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "4"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "POP"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "PUSH [tag]",
                    "value": "5"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "PUSH [tag]",
                    "value": "6"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "JUMP"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "tag",
                    "value": "5"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "MLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "AND"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "SUB"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "ADD"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "RETURN"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "tag",
                    "value": "3"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "7"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "7"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "PUSH [tag]",
                    "value": "8"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "AND"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "PUSH [tag]",
                    "value": "9"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "JUMP"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "tag",
                    "value": "8"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "STOP"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "tag",
                    "value": "6"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "AND"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "tag",
                    "value": "9"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "AND"
                  },
                  {
                    "begin": 1532,
                    "end": 1542,
                    "name": "CALLER"
                  },
                  {
                    "begin": 1532,
                    "end": 1551,
                    "name": "EQ"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "PUSH [tag]",
                    "value": "11"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "REVERT"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "tag",
                    "value": "11"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1814,
                    "end": 1836,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1814,
                    "end": 1836,
                    "name": "AND"
                  },
                  {
                    "begin": 1814,
                    "end": 1836,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 1810,
                    "end": 1879,
                    "name": "PUSH [tag]",
                    "value": "13"
                  },
                  {
                    "begin": 1810,
                    "end": 1879,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1852,
                    "end": 1857,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1852,
                    "end": 1868,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1852,
                    "end": 1868,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT"
                  },
                  {
                    "begin": 1852,
                    "end": 1868,
                    "name": "AND"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1852,
                    "end": 1868,
                    "name": "DUP4"
                  },
                  {
                    "begin": 1852,
                    "end": 1868,
                    "name": "AND"
                  },
                  {
                    "begin": 1852,
                    "end": 1868,
                    "name": "OR"
                  },
                  {
                    "begin": 1852,
                    "end": 1868,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1852,
                    "end": 1868,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 1810,
                    "end": 1879,
                    "name": "tag",
                    "value": "13"
                  },
                  {
                    "begin": 1810,
                    "end": 1879,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "POP"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "JUMP",
                    "value": "[out]"
                  }
                ]
              }
            }
          },
          "methodIdentifiers": {
            "owner()": "8da5cb5b",
            "transferOwnership(address)": "f2fde38b"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Ownable\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"TetherToken.sol\":\"Ownable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"TetherToken.sol\":{\"content\":\"/**\\n *Submitted for verification at Etherscan.io on 2017-11-28\\n*/\\n\\npragma solidity ^0.4.17;\\n\\n/**\\n * @title SafeMath\\n * @dev Math operations with safety checks that throw on error\\n */\\nlibrary SafeMath {\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n        uint256 c = a * b;\\n        assert(c / a == b);\\n        return c;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n        return c;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        assert(b <= a);\\n        return a - b;\\n    }\\n\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        assert(c >= a);\\n        return c;\\n    }\\n}\\n\\n/**\\n * @title Ownable\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\n * functions, this simplifies the implementation of \\\"user permissions\\\".\\n */\\ncontract Ownable {\\n    address public owner;\\n\\n    /**\\n      * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\n      * account.\\n      */\\n    function Ownable() public {\\n        owner = msg.sender;\\n    }\\n\\n    /**\\n      * @dev Throws if called by any account other than the owner.\\n      */\\n    modifier onlyOwner() {\\n        require(msg.sender == owner);\\n        _;\\n    }\\n\\n    /**\\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\\n    * @param newOwner The address to transfer ownership to.\\n    */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        if (newOwner != address(0)) {\\n            owner = newOwner;\\n        }\\n    }\\n\\n}\\n\\n/**\\n * @title ERC20Basic\\n * @dev Simpler version of ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20Basic {\\n    uint public _totalSupply;\\n    function totalSupply() public constant returns (uint);\\n    function balanceOf(address who) public constant returns (uint);\\n    function transfer(address to, uint value) public;\\n    event Transfer(address indexed from, address indexed to, uint value);\\n}\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20 is ERC20Basic {\\n    function allowance(address owner, address spender) public constant returns (uint);\\n    function transferFrom(address from, address to, uint value) public;\\n    function approve(address spender, uint value) public;\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n}\\n\\n/**\\n * @title Basic token\\n * @dev Basic version of StandardToken, with no allowances.\\n */\\ncontract BasicToken is Ownable, ERC20Basic {\\n    using SafeMath for uint;\\n\\n    mapping(address => uint) public balances;\\n\\n    // additional variables for use if transaction fees ever became necessary\\n    uint public basisPointsRate = 0;\\n    uint public maximumFee = 0;\\n\\n    /**\\n    * @dev Fix for the ERC20 short address attack.\\n    */\\n    modifier onlyPayloadSize(uint size) {\\n        require(!(msg.data.length < size + 4));\\n        _;\\n    }\\n\\n    /**\\n    * @dev transfer token for a specified address\\n    * @param _to The address to transfer to.\\n    * @param _value The amount to be transferred.\\n    */\\n    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[msg.sender] = balances[msg.sender].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(msg.sender, owner, fee);\\n        }\\n        Transfer(msg.sender, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Gets the balance of the specified address.\\n    * @param _owner The address to query the the balance of.\\n    * @return An uint representing the amount owned by the passed address.\\n    */\\n    function balanceOf(address _owner) public constant returns (uint balance) {\\n        return balances[_owner];\\n    }\\n\\n}\\n\\n/**\\n * @title Standard ERC20 token\\n *\\n * @dev Implementation of the basic standard token.\\n * @dev https://github.com/ethereum/EIPs/issues/20\\n * @dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\n */\\ncontract StandardToken is BasicToken, ERC20 {\\n\\n    mapping (address => mapping (address => uint)) public allowed;\\n\\n    uint public constant MAX_UINT = 2**256 - 1;\\n\\n    /**\\n    * @dev Transfer tokens from one address to another\\n    * @param _from address The address which you want to send tokens from\\n    * @param _to address The address which you want to transfer to\\n    * @param _value uint the amount of tokens to be transferred\\n    */\\n    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\\n        var _allowance = allowed[_from][msg.sender];\\n\\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\\n        // if (_value > _allowance) throw;\\n\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        if (_allowance < MAX_UINT) {\\n            allowed[_from][msg.sender] = _allowance.sub(_value);\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[_from] = balances[_from].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(_from, owner, fee);\\n        }\\n        Transfer(_from, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\n    * @param _spender The address which will spend the funds.\\n    * @param _value The amount of tokens to be spent.\\n    */\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n\\n        // To change the approve amount you first have to reduce the addresses`\\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\\n        //  already 0 to mitigate the race condition described here:\\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));\\n\\n        allowed[msg.sender][_spender] = _value;\\n        Approval(msg.sender, _spender, _value);\\n    }\\n\\n    /**\\n    * @dev Function to check the amount of tokens than an owner allowed to a spender.\\n    * @param _owner address The address which owns the funds.\\n    * @param _spender address The address which will spend the funds.\\n    * @return A uint specifying the amount of tokens still available for the spender.\\n    */\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        return allowed[_owner][_spender];\\n    }\\n\\n}\\n\\n\\n/**\\n * @title Pausable\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\n */\\ncontract Pausable is Ownable {\\n  event Pause();\\n  event Unpause();\\n\\n  bool public paused = false;\\n\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\n   */\\n  modifier whenNotPaused() {\\n    require(!paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is paused.\\n   */\\n  modifier whenPaused() {\\n    require(paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev called by the owner to pause, triggers stopped state\\n   */\\n  function pause() onlyOwner whenNotPaused public {\\n    paused = true;\\n    Pause();\\n  }\\n\\n  /**\\n   * @dev called by the owner to unpause, returns to normal state\\n   */\\n  function unpause() onlyOwner whenPaused public {\\n    paused = false;\\n    Unpause();\\n  }\\n}\\n\\ncontract BlackList is Ownable, BasicToken {\\n\\n    /////// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\\n    function getBlackListStatus(address _maker) external constant returns (bool) {\\n        return isBlackListed[_maker];\\n    }\\n\\n    function getOwner() external constant returns (address) {\\n        return owner;\\n    }\\n\\n    mapping (address => bool) public isBlackListed;\\n\\n    function addBlackList (address _evilUser) public onlyOwner {\\n        isBlackListed[_evilUser] = true;\\n        AddedBlackList(_evilUser);\\n    }\\n\\n    function removeBlackList (address _clearedUser) public onlyOwner {\\n        isBlackListed[_clearedUser] = false;\\n        RemovedBlackList(_clearedUser);\\n    }\\n\\n    function destroyBlackFunds (address _blackListedUser) public onlyOwner {\\n        require(isBlackListed[_blackListedUser]);\\n        uint dirtyFunds = balanceOf(_blackListedUser);\\n        balances[_blackListedUser] = 0;\\n        _totalSupply -= dirtyFunds;\\n        DestroyedBlackFunds(_blackListedUser, dirtyFunds);\\n    }\\n\\n    event DestroyedBlackFunds(address _blackListedUser, uint _balance);\\n\\n    event AddedBlackList(address _user);\\n\\n    event RemovedBlackList(address _user);\\n\\n}\\n\\ncontract UpgradedStandardToken is StandardToken{\\n    // those methods are called by the legacy contract\\n    // and they must ensure msg.sender to be the contract address\\n    function transferByLegacy(address from, address to, uint value) public;\\n    function transferFromByLegacy(address sender, address from, address spender, uint value) public;\\n    function approveByLegacy(address from, address spender, uint value) public;\\n}\\n\\ncontract TetherToken is Pausable, StandardToken, BlackList {\\n\\n    string public name;\\n    string public symbol;\\n    uint public decimals;\\n    address public upgradedAddress;\\n    bool public deprecated;\\n\\n    //  The contract can be initialized with a number of tokens\\n    //  All the tokens are deposited to the owner address\\n    //\\n    // @param _balance Initial supply of the contract\\n    // @param _name Token Name\\n    // @param _symbol Token symbol\\n    // @param _decimals Token decimals\\n    function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\\n        _totalSupply = _initialSupply;\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n        balances[owner] = _initialSupply;\\n        deprecated = false;\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transfer(address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[msg.sender]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);\\n        } else {\\n            return super.transfer(_to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[_from]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);\\n        } else {\\n            return super.transferFrom(_from, _to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function balanceOf(address who) public constant returns (uint) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).balanceOf(who);\\n        } else {\\n            return super.balanceOf(who);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);\\n        } else {\\n            return super.approve(_spender, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).allowance(_owner, _spender);\\n        } else {\\n            return super.allowance(_owner, _spender);\\n        }\\n    }\\n\\n    // deprecate current contract in favour of a new one\\n    function deprecate(address _upgradedAddress) public onlyOwner {\\n        deprecated = true;\\n        upgradedAddress = _upgradedAddress;\\n        Deprecate(_upgradedAddress);\\n    }\\n\\n    // deprecate current contract if favour of a new one\\n    function totalSupply() public constant returns (uint) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).totalSupply();\\n        } else {\\n            return _totalSupply;\\n        }\\n    }\\n\\n    // Issue a new amount of tokens\\n    // these tokens are deposited into the owner address\\n    //\\n    // @param _amount Number of tokens to be issued\\n    function issue(uint amount) public onlyOwner {\\n        require(_totalSupply + amount > _totalSupply);\\n        require(balances[owner] + amount > balances[owner]);\\n\\n        balances[owner] += amount;\\n        _totalSupply += amount;\\n        Issue(amount);\\n    }\\n\\n    // Redeem tokens.\\n    // These tokens are withdrawn from the owner address\\n    // if the balance must be enough to cover the redeem\\n    // or the call will fail.\\n    // @param _amount Number of tokens to be issued\\n    function redeem(uint amount) public onlyOwner {\\n        require(_totalSupply >= amount);\\n        require(balances[owner] >= amount);\\n\\n        _totalSupply -= amount;\\n        balances[owner] -= amount;\\n        Redeem(amount);\\n    }\\n\\n    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\\n        // Ensure transparency by hardcoding limit beyond which fees can never be added\\n        require(newBasisPoints < 20);\\n        require(newMaxFee < 50);\\n\\n        basisPointsRate = newBasisPoints;\\n        maximumFee = newMaxFee.mul(10**decimals);\\n\\n        Params(basisPointsRate, maximumFee);\\n    }\\n\\n    // Called when new token are issued\\n    event Issue(uint amount);\\n\\n    // Called when tokens are redeemed\\n    event Redeem(uint amount);\\n\\n    // Called when contract is deprecated\\n    event Deprecate(address newAddress);\\n\\n    // Called if contract ever adds fees\\n    event Params(uint feeBasisPoints, uint maxFee);\\n}\",\"keccak256\":\"0x51e9740650f230941b166a080db3f1b5fbe6872aea0d29ae883f230b1a20bb1c\"}},\"version\":1}",
        "userdoc": {
          "methods": {}
        }
      },
      "Pausable": {
        "abi": [
          {
            "constant": false,
            "inputs": [],
            "name": "unpause",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "paused",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "pause",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "Pause",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "Unpause",
            "type": "event"
          }
        ],
        "devdoc": {
          "methods": {
            "pause()": {
              "details": "called by the owner to pause, triggers stopped state"
            },
            "transferOwnership(address)": {
              "details": "Allows the current owner to transfer control of the contract to a newOwner.",
              "params": {
                "newOwner": "The address to transfer ownership to."
              }
            },
            "unpause()": {
              "details": "called by the owner to unpause, returns to normal state"
            }
          },
          "title": "Pausable"
        },
        "evm": {
          "assembly": "    /* \"TetherToken.sol\":7314:8059  contract Pausable is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"TetherToken.sol\":7405:7410  false */\n  0x0\n    /* \"TetherToken.sol\":7384:7410  bool public paused = false */\n  dup1\n  sload\n  not(sub(exp(0x2, 0xa8), 0x1))\n    /* \"TetherToken.sol\":1378:1396  owner = msg.sender */\n  and\n    /* \"TetherToken.sol\":1386:1396  msg.sender */\n  caller\n    /* \"TetherToken.sol\":1378:1396  owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"TetherToken.sol\":7314:8059  contract Pausable is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"TetherToken.sol\":7314:8059  contract Pausable is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      and(div(calldataload(0x0), 0x100000000000000000000000000000000000000000000000000000000), 0xffffffff)\n      0x3f4ba83a\n      dup2\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"TetherToken.sol\":7970:8057  function unpause() onlyOwner whenPaused public {... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_7:\n        /* \"TetherToken.sol\":7970:8057  function unpause() onlyOwner whenPaused public {... */\n      pop\n      tag_8\n      jump(tag_9)\n    tag_8:\n      stop\n        /* \"TetherToken.sol\":7384:7410  bool public paused = false */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_10:\n        /* \"TetherToken.sol\":7384:7410  bool public paused = false */\n      pop\n      tag_11\n      jump(tag_12)\n    tag_11:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"TetherToken.sol\":7803:7888  function pause() onlyOwner whenNotPaused public {... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_13:\n        /* \"TetherToken.sol\":7803:7888  function pause() onlyOwner whenNotPaused public {... */\n      pop\n      tag_8\n      jump(tag_15)\n        /* \"TetherToken.sol\":1188:1208  address public owner */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_16:\n        /* \"TetherToken.sol\":1188:1208  address public owner */\n      pop\n      tag_17\n      jump(tag_18)\n    tag_17:\n      0x40\n      dup1\n      mload\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"TetherToken.sol\":1738:1885  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_19:\n      pop\n        /* \"TetherToken.sol\":1738:1885  function transferOwnership(address newOwner) public onlyOwner {... */\n      tag_8\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_21)\n        /* \"TetherToken.sol\":7970:8057  function unpause() onlyOwner whenPaused public {... */\n    tag_9:\n        /* \"TetherToken.sol\":1546:1551  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n        /* \"TetherToken.sol\":1532:1542  msg.sender */\n      caller\n        /* \"TetherToken.sol\":1532:1551  msg.sender == owner */\n      eq\n        /* \"TetherToken.sol\":1524:1552  require(msg.sender == owner) */\n      tag_23\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_23:\n        /* \"TetherToken.sol\":7705:7711  paused */\n      sload(0x0)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n        /* \"TetherToken.sol\":7697:7712  require(paused) */\n      iszero\n      iszero\n      tag_25\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_25:\n        /* \"TetherToken.sol\":8032:8037  false */\n      0x0\n        /* \"TetherToken.sol\":8023:8037  paused = false */\n      dup1\n      sload\n      not(0xff0000000000000000000000000000000000000000)\n      and\n      dup2\n      sstore\n        /* \"TetherToken.sol\":8043:8052  Unpause() */\n      mload(0x40)\n      0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33\n      swap2\n        /* \"TetherToken.sol\":8032:8037  false */\n      swap1\n        /* \"TetherToken.sol\":8043:8052  Unpause() */\n      log1\n        /* \"TetherToken.sol\":7970:8057  function unpause() onlyOwner whenPaused public {... */\n      jump\t// out\n        /* \"TetherToken.sol\":7384:7410  bool public paused = false */\n    tag_12:\n      sload(0x0)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"TetherToken.sol\":7803:7888  function pause() onlyOwner whenNotPaused public {... */\n    tag_15:\n        /* \"TetherToken.sol\":1546:1551  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n        /* \"TetherToken.sol\":1532:1542  msg.sender */\n      caller\n        /* \"TetherToken.sol\":1532:1551  msg.sender == owner */\n      eq\n        /* \"TetherToken.sol\":1524:1552  require(msg.sender == owner) */\n      tag_28\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_28:\n        /* \"TetherToken.sol\":7553:7559  paused */\n      sload(0x0)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n        /* \"TetherToken.sol\":7552:7559  !paused */\n      iszero\n        /* \"TetherToken.sol\":7544:7560  require(!paused) */\n      tag_30\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_30:\n        /* \"TetherToken.sol\":7857:7863  paused */\n      0x0\n        /* \"TetherToken.sol\":7857:7870  paused = true */\n      dup1\n      sload\n      not(0xff0000000000000000000000000000000000000000)\n      and\n      exp(0x2, 0xa0)\n      or\n      dup2\n      sstore\n        /* \"TetherToken.sol\":7876:7883  Pause() */\n      mload(0x40)\n      0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625\n      swap2\n        /* \"TetherToken.sol\":7857:7863  paused */\n      swap1\n        /* \"TetherToken.sol\":7876:7883  Pause() */\n      log1\n        /* \"TetherToken.sol\":7803:7888  function pause() onlyOwner whenNotPaused public {... */\n      jump\t// out\n        /* \"TetherToken.sol\":1188:1208  address public owner */\n    tag_18:\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n      dup2\n      jump\t// out\n        /* \"TetherToken.sol\":1738:1885  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_21:\n        /* \"TetherToken.sol\":1546:1551  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n        /* \"TetherToken.sol\":1532:1542  msg.sender */\n      caller\n        /* \"TetherToken.sol\":1532:1551  msg.sender == owner */\n      eq\n        /* \"TetherToken.sol\":1524:1552  require(msg.sender == owner) */\n      tag_33\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_33:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"TetherToken.sol\":1814:1836  newOwner != address(0) */\n      dup2\n      and\n      iszero\n        /* \"TetherToken.sol\":1810:1879  if (newOwner != address(0)) {... */\n      tag_35\n      jumpi\n        /* \"TetherToken.sol\":1852:1857  owner */\n      0x0\n        /* \"TetherToken.sol\":1852:1868  owner = newOwner */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(exp(0x2, 0xa0), 0x1)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"TetherToken.sol\":1810:1879  if (newOwner != address(0)) {... */\n    tag_35:\n        /* \"TetherToken.sol\":1738:1885  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058204c7e82b49d6f6e061c08a2d88729f2f1fcdd274958d10223f7cd939ff81013ab0029\n}\n",
          "bytecode": {
            "linkReferences": {},
            "object": "608060405260008054600160a860020a031916331790556102a6806100256000396000f30060806040526004361061006c5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633f4ba83a81146100715780635c975abb146100885780638456cb59146100b15780638da5cb5b146100c6578063f2fde38b146100f7575b600080fd5b34801561007d57600080fd5b50610086610118565b005b34801561009457600080fd5b5061009d61018e565b604080519115158252519081900360200190f35b3480156100bd57600080fd5b5061008661019e565b3480156100d257600080fd5b506100db610219565b60408051600160a060020a039092168252519081900360200190f35b34801561010357600080fd5b50610086600160a060020a0360043516610228565b600054600160a060020a0316331461012f57600080fd5b60005460a060020a900460ff16151561014757600080fd5b6000805474ff0000000000000000000000000000000000000000191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a1565b60005460a060020a900460ff1681565b600054600160a060020a031633146101b557600080fd5b60005460a060020a900460ff16156101cc57600080fd5b6000805474ff0000000000000000000000000000000000000000191660a060020a1781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a1565b600054600160a060020a031681565b600054600160a060020a0316331461023f57600080fd5b600160a060020a03811615610277576000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b505600a165627a7a723058204c7e82b49d6f6e061c08a2d88729f2f1fcdd274958d10223f7cd939ff81013ab0029",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA8 PUSH1 0x2 EXP SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x2A6 DUP1 PUSH2 0x25 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6C JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x3F4BA83A DUP2 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xF7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x86 PUSH2 0x118 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH2 0x18E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x86 PUSH2 0x19E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDB PUSH2 0x219 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x86 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x228 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND PUSH1 0xA0 PUSH1 0x2 EXP OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x4c PUSH31 0x82B49D6F6E061C08A2D88729F2F1FCDD274958D10223F7CD939FF81013AB00 0x29 ",
            "sourceMap": "7314:745:0:-;;;7405:5;7384:26;;-1:-1:-1;;;;;;1378:18:0;1386:10;1378:18;;;7314:745;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "60806040526004361061006c5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633f4ba83a81146100715780635c975abb146100885780638456cb59146100b15780638da5cb5b146100c6578063f2fde38b146100f7575b600080fd5b34801561007d57600080fd5b50610086610118565b005b34801561009457600080fd5b5061009d61018e565b604080519115158252519081900360200190f35b3480156100bd57600080fd5b5061008661019e565b3480156100d257600080fd5b506100db610219565b60408051600160a060020a039092168252519081900360200190f35b34801561010357600080fd5b50610086600160a060020a0360043516610228565b600054600160a060020a0316331461012f57600080fd5b60005460a060020a900460ff16151561014757600080fd5b6000805474ff0000000000000000000000000000000000000000191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a1565b60005460a060020a900460ff1681565b600054600160a060020a031633146101b557600080fd5b60005460a060020a900460ff16156101cc57600080fd5b6000805474ff0000000000000000000000000000000000000000191660a060020a1781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a1565b600054600160a060020a031681565b600054600160a060020a0316331461023f57600080fd5b600160a060020a03811615610277576000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b505600a165627a7a723058204c7e82b49d6f6e061c08a2d88729f2f1fcdd274958d10223f7cd939ff81013ab0029",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6C JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x3F4BA83A DUP2 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xF7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x86 PUSH2 0x118 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH2 0x18E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x86 PUSH2 0x19E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDB PUSH2 0x219 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x86 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x228 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND PUSH1 0xA0 PUSH1 0x2 EXP OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x4c PUSH31 0x82B49D6F6E061C08A2D88729F2F1FCDD274958D10223F7CD939FF81013AB00 0x29 ",
            "sourceMap": "7314:745:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7970:87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7970:87:0;;;;;;7384:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7384:26:0;;;;;;;;;;;;;;;;;;;;;;7803:85;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7803:85:0;;;;1188:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1188:20:0;;;;;;;;-1:-1:-1;;;;;1188:20:0;;;;;;;;;;;;;;1738:147;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1738:147:0;-1:-1:-1;;;;;1738:147:0;;;;;7970:87;1546:5;;-1:-1:-1;;;;;1546:5:0;1532:10;:19;1524:28;;;;;;7705:6;;-1:-1:-1;;;7705:6:0;;;;7697:15;;;;;;;;8032:5;8023:14;;-1:-1:-1;;8023:14:0;;;8043:9;;;;8032:5;8043:9;7970:87::o;7384:26::-;;;-1:-1:-1;;;7384:26:0;;;;;:::o;7803:85::-;1546:5;;-1:-1:-1;;;;;1546:5:0;1532:10;:19;1524:28;;;;;;7553:6;;-1:-1:-1;;;7553:6:0;;;;7552:7;7544:16;;;;;;7857:6;:13;;-1:-1:-1;;7857:13:0;-1:-1:-1;;;7857:13:0;;;7876:7;;;;7857:6;7876:7;7803:85::o;1188:20::-;;;-1:-1:-1;;;;;1188:20:0;;:::o;1738:147::-;1546:5;;-1:-1:-1;;;;;1546:5:0;1532:10;:19;1524:28;;;;;;-1:-1:-1;;;;;1814:22:0;;;1810:69;;1852:5;:16;;-1:-1:-1;;1852:16:0;-1:-1:-1;;;;;1852:16:0;;;;;1810:69;1738:147;:::o"
          },
          "gasEstimates": {
            "creation": {
              "codeDepositCost": "135600",
              "executionCost": "20451",
              "totalCost": "156051"
            },
            "external": {
              "owner()": "603",
              "pause()": "21823",
              "paused()": "492",
              "transferOwnership(address)": "20992",
              "unpause()": "21713"
            }
          },
          "legacyAssembly": {
            ".code": [
              {
                "begin": 7314,
                "end": 8059,
                "name": "PUSH",
                "value": "80"
              },
              {
                "begin": 7314,
                "end": 8059,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 7314,
                "end": 8059,
                "name": "MSTORE"
              },
              {
                "begin": 7405,
                "end": 7410,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 7384,
                "end": 7410,
                "name": "DUP1"
              },
              {
                "begin": 7384,
                "end": 7410,
                "name": "SLOAD"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "A8"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "2"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "EXP"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "NOT"
              },
              {
                "begin": 1378,
                "end": 1396,
                "name": "AND"
              },
              {
                "begin": 1386,
                "end": 1396,
                "name": "CALLER"
              },
              {
                "begin": 1378,
                "end": 1396,
                "name": "OR"
              },
              {
                "begin": 1378,
                "end": 1396,
                "name": "SWAP1"
              },
              {
                "begin": 1378,
                "end": 1396,
                "name": "SSTORE"
              },
              {
                "begin": 7314,
                "end": 8059,
                "name": "PUSH #[$]",
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 7314,
                "end": 8059,
                "name": "DUP1"
              },
              {
                "begin": 7314,
                "end": 8059,
                "name": "PUSH [$]",
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 7314,
                "end": 8059,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 7314,
                "end": 8059,
                "name": "CODECOPY"
              },
              {
                "begin": 7314,
                "end": 8059,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 7314,
                "end": 8059,
                "name": "RETURN"
              }
            ],
            ".data": {
              "0": {
                ".auxdata": "a165627a7a723058204c7e82b49d6f6e061c08a2d88729f2f1fcdd274958d10223f7cd939ff81013ab0029",
                ".code": [
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "PUSH",
                    "value": "80"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "LT"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "PUSH [tag]",
                    "value": "1"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "PUSH",
                    "value": "100000000000000000000000000000000000000000000000000000000"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "DIV"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "AND"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "PUSH",
                    "value": "3F4BA83A"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "DUP2"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "EQ"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "PUSH [tag]",
                    "value": "2"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "DUP1"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "PUSH",
                    "value": "5C975ABB"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "EQ"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "PUSH [tag]",
                    "value": "3"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "DUP1"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "PUSH",
                    "value": "8456CB59"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "EQ"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "PUSH [tag]",
                    "value": "4"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "DUP1"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "PUSH",
                    "value": "8DA5CB5B"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "EQ"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "PUSH [tag]",
                    "value": "5"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "DUP1"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "PUSH",
                    "value": "F2FDE38B"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "EQ"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "PUSH [tag]",
                    "value": "6"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "tag",
                    "value": "1"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "DUP1"
                  },
                  {
                    "begin": 7314,
                    "end": 8059,
                    "name": "REVERT"
                  },
                  {
                    "begin": 7970,
                    "end": 8057,
                    "name": "tag",
                    "value": "2"
                  },
                  {
                    "begin": 7970,
                    "end": 8057,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 7970,
                    "end": 8057,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "7"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "7"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 7970,
                    "end": 8057,
                    "name": "POP"
                  },
                  {
                    "begin": 7970,
                    "end": 8057,
                    "name": "PUSH [tag]",
                    "value": "8"
                  },
                  {
                    "begin": 7970,
                    "end": 8057,
                    "name": "PUSH [tag]",
                    "value": "9"
                  },
                  {
                    "begin": 7970,
                    "end": 8057,
                    "name": "JUMP"
                  },
                  {
                    "begin": 7970,
                    "end": 8057,
                    "name": "tag",
                    "value": "8"
                  },
                  {
                    "begin": 7970,
                    "end": 8057,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 7970,
                    "end": 8057,
                    "name": "STOP"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "tag",
                    "value": "3"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "10"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "10"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "POP"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "PUSH [tag]",
                    "value": "11"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "PUSH [tag]",
                    "value": "12"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "JUMP"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "tag",
                    "value": "11"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "DUP1"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "DUP3"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "DUP2"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "SUB"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "ADD"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "RETURN"
                  },
                  {
                    "begin": 7803,
                    "end": 7888,
                    "name": "tag",
                    "value": "4"
                  },
                  {
                    "begin": 7803,
                    "end": 7888,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 7803,
                    "end": 7888,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "13"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "13"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 7803,
                    "end": 7888,
                    "name": "POP"
                  },
                  {
                    "begin": 7803,
                    "end": 7888,
                    "name": "PUSH [tag]",
                    "value": "8"
                  },
                  {
                    "begin": 7803,
                    "end": 7888,
                    "name": "PUSH [tag]",
                    "value": "15"
                  },
                  {
                    "begin": 7803,
                    "end": 7888,
                    "name": "JUMP"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "tag",
                    "value": "5"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "16"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "16"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "POP"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "PUSH [tag]",
                    "value": "17"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "PUSH [tag]",
                    "value": "18"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "JUMP"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "tag",
                    "value": "17"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "MLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "AND"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "DUP3"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "SUB"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "ADD"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "RETURN"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "tag",
                    "value": "6"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "19"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "19"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "PUSH [tag]",
                    "value": "8"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "AND"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "PUSH [tag]",
                    "value": "21"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "JUMP"
                  },
                  {
                    "begin": 7970,
                    "end": 8057,
                    "name": "tag",
                    "value": "9"
                  },
                  {
                    "begin": 7970,
                    "end": 8057,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "AND"
                  },
                  {
                    "begin": 1532,
                    "end": 1542,
                    "name": "CALLER"
                  },
                  {
                    "begin": 1532,
                    "end": 1551,
                    "name": "EQ"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "PUSH [tag]",
                    "value": "23"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "REVERT"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "tag",
                    "value": "23"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 7705,
                    "end": 7711,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 7705,
                    "end": 7711,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": 7705,
                    "end": 7711,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7705,
                    "end": 7711,
                    "name": "DIV"
                  },
                  {
                    "begin": 7705,
                    "end": 7711,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 7705,
                    "end": 7711,
                    "name": "AND"
                  },
                  {
                    "begin": 7697,
                    "end": 7712,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 7697,
                    "end": 7712,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 7697,
                    "end": 7712,
                    "name": "PUSH [tag]",
                    "value": "25"
                  },
                  {
                    "begin": 7697,
                    "end": 7712,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 7697,
                    "end": 7712,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 7697,
                    "end": 7712,
                    "name": "DUP1"
                  },
                  {
                    "begin": 7697,
                    "end": 7712,
                    "name": "REVERT"
                  },
                  {
                    "begin": 7697,
                    "end": 7712,
                    "name": "tag",
                    "value": "25"
                  },
                  {
                    "begin": 7697,
                    "end": 7712,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 8032,
                    "end": 8037,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 8023,
                    "end": 8037,
                    "name": "DUP1"
                  },
                  {
                    "begin": 8023,
                    "end": 8037,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "FF0000000000000000000000000000000000000000"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT"
                  },
                  {
                    "begin": 8023,
                    "end": 8037,
                    "name": "AND"
                  },
                  {
                    "begin": 8023,
                    "end": 8037,
                    "name": "DUP2"
                  },
                  {
                    "begin": 8023,
                    "end": 8037,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 8043,
                    "end": 8052,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8043,
                    "end": 8052,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 8043,
                    "end": 8052,
                    "name": "PUSH",
                    "value": "7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33"
                  },
                  {
                    "begin": 8043,
                    "end": 8052,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 8032,
                    "end": 8037,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 8043,
                    "end": 8052,
                    "name": "LOG1"
                  },
                  {
                    "begin": 7970,
                    "end": 8057,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "tag",
                    "value": "12"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "DIV"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "AND"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "DUP2"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 7803,
                    "end": 7888,
                    "name": "tag",
                    "value": "15"
                  },
                  {
                    "begin": 7803,
                    "end": 7888,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "AND"
                  },
                  {
                    "begin": 1532,
                    "end": 1542,
                    "name": "CALLER"
                  },
                  {
                    "begin": 1532,
                    "end": 1551,
                    "name": "EQ"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "PUSH [tag]",
                    "value": "28"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "REVERT"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "tag",
                    "value": "28"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 7553,
                    "end": 7559,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 7553,
                    "end": 7559,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": 7553,
                    "end": 7559,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7553,
                    "end": 7559,
                    "name": "DIV"
                  },
                  {
                    "begin": 7553,
                    "end": 7559,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 7553,
                    "end": 7559,
                    "name": "AND"
                  },
                  {
                    "begin": 7552,
                    "end": 7559,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 7544,
                    "end": 7560,
                    "name": "PUSH [tag]",
                    "value": "30"
                  },
                  {
                    "begin": 7544,
                    "end": 7560,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 7544,
                    "end": 7560,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 7544,
                    "end": 7560,
                    "name": "DUP1"
                  },
                  {
                    "begin": 7544,
                    "end": 7560,
                    "name": "REVERT"
                  },
                  {
                    "begin": 7544,
                    "end": 7560,
                    "name": "tag",
                    "value": "30"
                  },
                  {
                    "begin": 7544,
                    "end": 7560,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 7857,
                    "end": 7863,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 7857,
                    "end": 7870,
                    "name": "DUP1"
                  },
                  {
                    "begin": 7857,
                    "end": 7870,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "FF0000000000000000000000000000000000000000"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT"
                  },
                  {
                    "begin": 7857,
                    "end": 7870,
                    "name": "AND"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": 7857,
                    "end": 7870,
                    "name": "OR"
                  },
                  {
                    "begin": 7857,
                    "end": 7870,
                    "name": "DUP2"
                  },
                  {
                    "begin": 7857,
                    "end": 7870,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 7876,
                    "end": 7883,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 7876,
                    "end": 7883,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 7876,
                    "end": 7883,
                    "name": "PUSH",
                    "value": "6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625"
                  },
                  {
                    "begin": 7876,
                    "end": 7883,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 7857,
                    "end": 7863,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7876,
                    "end": 7883,
                    "name": "LOG1"
                  },
                  {
                    "begin": 7803,
                    "end": 7888,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "tag",
                    "value": "18"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "AND"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "tag",
                    "value": "21"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "AND"
                  },
                  {
                    "begin": 1532,
                    "end": 1542,
                    "name": "CALLER"
                  },
                  {
                    "begin": 1532,
                    "end": 1551,
                    "name": "EQ"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "PUSH [tag]",
                    "value": "33"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "REVERT"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "tag",
                    "value": "33"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1814,
                    "end": 1836,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1814,
                    "end": 1836,
                    "name": "AND"
                  },
                  {
                    "begin": 1814,
                    "end": 1836,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 1810,
                    "end": 1879,
                    "name": "PUSH [tag]",
                    "value": "35"
                  },
                  {
                    "begin": 1810,
                    "end": 1879,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1852,
                    "end": 1857,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1852,
                    "end": 1868,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1852,
                    "end": 1868,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT"
                  },
                  {
                    "begin": 1852,
                    "end": 1868,
                    "name": "AND"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1852,
                    "end": 1868,
                    "name": "DUP4"
                  },
                  {
                    "begin": 1852,
                    "end": 1868,
                    "name": "AND"
                  },
                  {
                    "begin": 1852,
                    "end": 1868,
                    "name": "OR"
                  },
                  {
                    "begin": 1852,
                    "end": 1868,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1852,
                    "end": 1868,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 1810,
                    "end": 1879,
                    "name": "tag",
                    "value": "35"
                  },
                  {
                    "begin": 1810,
                    "end": 1879,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "POP"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "JUMP",
                    "value": "[out]"
                  }
                ]
              }
            }
          },
          "methodIdentifiers": {
            "owner()": "8da5cb5b",
            "pause()": "8456cb59",
            "paused()": "5c975abb",
            "transferOwnership(address)": "f2fde38b",
            "unpause()": "3f4ba83a"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}},\"title\":\"Pausable\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"TetherToken.sol\":\"Pausable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"TetherToken.sol\":{\"content\":\"/**\\n *Submitted for verification at Etherscan.io on 2017-11-28\\n*/\\n\\npragma solidity ^0.4.17;\\n\\n/**\\n * @title SafeMath\\n * @dev Math operations with safety checks that throw on error\\n */\\nlibrary SafeMath {\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n        uint256 c = a * b;\\n        assert(c / a == b);\\n        return c;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n        return c;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        assert(b <= a);\\n        return a - b;\\n    }\\n\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        assert(c >= a);\\n        return c;\\n    }\\n}\\n\\n/**\\n * @title Ownable\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\n * functions, this simplifies the implementation of \\\"user permissions\\\".\\n */\\ncontract Ownable {\\n    address public owner;\\n\\n    /**\\n      * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\n      * account.\\n      */\\n    function Ownable() public {\\n        owner = msg.sender;\\n    }\\n\\n    /**\\n      * @dev Throws if called by any account other than the owner.\\n      */\\n    modifier onlyOwner() {\\n        require(msg.sender == owner);\\n        _;\\n    }\\n\\n    /**\\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\\n    * @param newOwner The address to transfer ownership to.\\n    */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        if (newOwner != address(0)) {\\n            owner = newOwner;\\n        }\\n    }\\n\\n}\\n\\n/**\\n * @title ERC20Basic\\n * @dev Simpler version of ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20Basic {\\n    uint public _totalSupply;\\n    function totalSupply() public constant returns (uint);\\n    function balanceOf(address who) public constant returns (uint);\\n    function transfer(address to, uint value) public;\\n    event Transfer(address indexed from, address indexed to, uint value);\\n}\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20 is ERC20Basic {\\n    function allowance(address owner, address spender) public constant returns (uint);\\n    function transferFrom(address from, address to, uint value) public;\\n    function approve(address spender, uint value) public;\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n}\\n\\n/**\\n * @title Basic token\\n * @dev Basic version of StandardToken, with no allowances.\\n */\\ncontract BasicToken is Ownable, ERC20Basic {\\n    using SafeMath for uint;\\n\\n    mapping(address => uint) public balances;\\n\\n    // additional variables for use if transaction fees ever became necessary\\n    uint public basisPointsRate = 0;\\n    uint public maximumFee = 0;\\n\\n    /**\\n    * @dev Fix for the ERC20 short address attack.\\n    */\\n    modifier onlyPayloadSize(uint size) {\\n        require(!(msg.data.length < size + 4));\\n        _;\\n    }\\n\\n    /**\\n    * @dev transfer token for a specified address\\n    * @param _to The address to transfer to.\\n    * @param _value The amount to be transferred.\\n    */\\n    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[msg.sender] = balances[msg.sender].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(msg.sender, owner, fee);\\n        }\\n        Transfer(msg.sender, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Gets the balance of the specified address.\\n    * @param _owner The address to query the the balance of.\\n    * @return An uint representing the amount owned by the passed address.\\n    */\\n    function balanceOf(address _owner) public constant returns (uint balance) {\\n        return balances[_owner];\\n    }\\n\\n}\\n\\n/**\\n * @title Standard ERC20 token\\n *\\n * @dev Implementation of the basic standard token.\\n * @dev https://github.com/ethereum/EIPs/issues/20\\n * @dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\n */\\ncontract StandardToken is BasicToken, ERC20 {\\n\\n    mapping (address => mapping (address => uint)) public allowed;\\n\\n    uint public constant MAX_UINT = 2**256 - 1;\\n\\n    /**\\n    * @dev Transfer tokens from one address to another\\n    * @param _from address The address which you want to send tokens from\\n    * @param _to address The address which you want to transfer to\\n    * @param _value uint the amount of tokens to be transferred\\n    */\\n    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\\n        var _allowance = allowed[_from][msg.sender];\\n\\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\\n        // if (_value > _allowance) throw;\\n\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        if (_allowance < MAX_UINT) {\\n            allowed[_from][msg.sender] = _allowance.sub(_value);\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[_from] = balances[_from].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(_from, owner, fee);\\n        }\\n        Transfer(_from, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\n    * @param _spender The address which will spend the funds.\\n    * @param _value The amount of tokens to be spent.\\n    */\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n\\n        // To change the approve amount you first have to reduce the addresses`\\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\\n        //  already 0 to mitigate the race condition described here:\\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));\\n\\n        allowed[msg.sender][_spender] = _value;\\n        Approval(msg.sender, _spender, _value);\\n    }\\n\\n    /**\\n    * @dev Function to check the amount of tokens than an owner allowed to a spender.\\n    * @param _owner address The address which owns the funds.\\n    * @param _spender address The address which will spend the funds.\\n    * @return A uint specifying the amount of tokens still available for the spender.\\n    */\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        return allowed[_owner][_spender];\\n    }\\n\\n}\\n\\n\\n/**\\n * @title Pausable\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\n */\\ncontract Pausable is Ownable {\\n  event Pause();\\n  event Unpause();\\n\\n  bool public paused = false;\\n\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\n   */\\n  modifier whenNotPaused() {\\n    require(!paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is paused.\\n   */\\n  modifier whenPaused() {\\n    require(paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev called by the owner to pause, triggers stopped state\\n   */\\n  function pause() onlyOwner whenNotPaused public {\\n    paused = true;\\n    Pause();\\n  }\\n\\n  /**\\n   * @dev called by the owner to unpause, returns to normal state\\n   */\\n  function unpause() onlyOwner whenPaused public {\\n    paused = false;\\n    Unpause();\\n  }\\n}\\n\\ncontract BlackList is Ownable, BasicToken {\\n\\n    /////// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\\n    function getBlackListStatus(address _maker) external constant returns (bool) {\\n        return isBlackListed[_maker];\\n    }\\n\\n    function getOwner() external constant returns (address) {\\n        return owner;\\n    }\\n\\n    mapping (address => bool) public isBlackListed;\\n\\n    function addBlackList (address _evilUser) public onlyOwner {\\n        isBlackListed[_evilUser] = true;\\n        AddedBlackList(_evilUser);\\n    }\\n\\n    function removeBlackList (address _clearedUser) public onlyOwner {\\n        isBlackListed[_clearedUser] = false;\\n        RemovedBlackList(_clearedUser);\\n    }\\n\\n    function destroyBlackFunds (address _blackListedUser) public onlyOwner {\\n        require(isBlackListed[_blackListedUser]);\\n        uint dirtyFunds = balanceOf(_blackListedUser);\\n        balances[_blackListedUser] = 0;\\n        _totalSupply -= dirtyFunds;\\n        DestroyedBlackFunds(_blackListedUser, dirtyFunds);\\n    }\\n\\n    event DestroyedBlackFunds(address _blackListedUser, uint _balance);\\n\\n    event AddedBlackList(address _user);\\n\\n    event RemovedBlackList(address _user);\\n\\n}\\n\\ncontract UpgradedStandardToken is StandardToken{\\n    // those methods are called by the legacy contract\\n    // and they must ensure msg.sender to be the contract address\\n    function transferByLegacy(address from, address to, uint value) public;\\n    function transferFromByLegacy(address sender, address from, address spender, uint value) public;\\n    function approveByLegacy(address from, address spender, uint value) public;\\n}\\n\\ncontract TetherToken is Pausable, StandardToken, BlackList {\\n\\n    string public name;\\n    string public symbol;\\n    uint public decimals;\\n    address public upgradedAddress;\\n    bool public deprecated;\\n\\n    //  The contract can be initialized with a number of tokens\\n    //  All the tokens are deposited to the owner address\\n    //\\n    // @param _balance Initial supply of the contract\\n    // @param _name Token Name\\n    // @param _symbol Token symbol\\n    // @param _decimals Token decimals\\n    function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\\n        _totalSupply = _initialSupply;\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n        balances[owner] = _initialSupply;\\n        deprecated = false;\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transfer(address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[msg.sender]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);\\n        } else {\\n            return super.transfer(_to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[_from]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);\\n        } else {\\n            return super.transferFrom(_from, _to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function balanceOf(address who) public constant returns (uint) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).balanceOf(who);\\n        } else {\\n            return super.balanceOf(who);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);\\n        } else {\\n            return super.approve(_spender, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).allowance(_owner, _spender);\\n        } else {\\n            return super.allowance(_owner, _spender);\\n        }\\n    }\\n\\n    // deprecate current contract in favour of a new one\\n    function deprecate(address _upgradedAddress) public onlyOwner {\\n        deprecated = true;\\n        upgradedAddress = _upgradedAddress;\\n        Deprecate(_upgradedAddress);\\n    }\\n\\n    // deprecate current contract if favour of a new one\\n    function totalSupply() public constant returns (uint) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).totalSupply();\\n        } else {\\n            return _totalSupply;\\n        }\\n    }\\n\\n    // Issue a new amount of tokens\\n    // these tokens are deposited into the owner address\\n    //\\n    // @param _amount Number of tokens to be issued\\n    function issue(uint amount) public onlyOwner {\\n        require(_totalSupply + amount > _totalSupply);\\n        require(balances[owner] + amount > balances[owner]);\\n\\n        balances[owner] += amount;\\n        _totalSupply += amount;\\n        Issue(amount);\\n    }\\n\\n    // Redeem tokens.\\n    // These tokens are withdrawn from the owner address\\n    // if the balance must be enough to cover the redeem\\n    // or the call will fail.\\n    // @param _amount Number of tokens to be issued\\n    function redeem(uint amount) public onlyOwner {\\n        require(_totalSupply >= amount);\\n        require(balances[owner] >= amount);\\n\\n        _totalSupply -= amount;\\n        balances[owner] -= amount;\\n        Redeem(amount);\\n    }\\n\\n    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\\n        // Ensure transparency by hardcoding limit beyond which fees can never be added\\n        require(newBasisPoints < 20);\\n        require(newMaxFee < 50);\\n\\n        basisPointsRate = newBasisPoints;\\n        maximumFee = newMaxFee.mul(10**decimals);\\n\\n        Params(basisPointsRate, maximumFee);\\n    }\\n\\n    // Called when new token are issued\\n    event Issue(uint amount);\\n\\n    // Called when tokens are redeemed\\n    event Redeem(uint amount);\\n\\n    // Called when contract is deprecated\\n    event Deprecate(address newAddress);\\n\\n    // Called if contract ever adds fees\\n    event Params(uint feeBasisPoints, uint maxFee);\\n}\",\"keccak256\":\"0x51e9740650f230941b166a080db3f1b5fbe6872aea0d29ae883f230b1a20bb1c\"}},\"version\":1}",
        "userdoc": {
          "methods": {}
        }
      },
      "SafeMath": {
        "abi": [],
        "devdoc": {
          "methods": {},
          "title": "SafeMath"
        },
        "evm": {
          "assembly": "    /* \"TetherToken.sol\":183:973  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0xb\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":252:259   */\n  dup1\n    /* \"--CODEGEN--\":246:260   */\n  mload\n    /* \"--CODEGEN--\":243:244   */\n  0x0\n    /* \"--CODEGEN--\":238:261   */\n  byte\n    /* \"--CODEGEN--\":232:236   */\n  0x73\n    /* \"--CODEGEN--\":229:262   */\n  eq\n    /* \"--CODEGEN--\":270:271   */\n  0x0\n    /* \"--CODEGEN--\":265:285   */\n  dup2\n  eq\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":222:285   */\n  jump(tag_1)\n    /* \"--CODEGEN--\":265:285   */\ntag_2:\n    /* \"--CODEGEN--\":274:283   */\n  invalid\n    /* \"--CODEGEN--\":222:285   */\ntag_1:\n  pop\n    /* \"--CODEGEN--\":298:307   */\n  address\n    /* \"--CODEGEN--\":295:296   */\n  0x0\n    /* \"--CODEGEN--\":288:308   */\n  mstore\n    /* \"--CODEGEN--\":328:332   */\n  0x73\n    /* \"--CODEGEN--\":319:326   */\n  dup2\n    /* \"--CODEGEN--\":311:333   */\n  mstore8\n    /* \"--CODEGEN--\":352:359   */\n  dup3\n    /* \"--CODEGEN--\":343:350   */\n  dup2\n    /* \"--CODEGEN--\":336:360   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"TetherToken.sol\":183:973  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a7230582067da153e7d0060d30fd386ff5851047766430d746b260f73a914a701875020f60029\n}\n",
          "bytecode": {
            "linkReferences": {},
            "object": "604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a7230582067da153e7d0060d30fd386ff5851047766430d746b260f73a914a701875020f60029",
            "opcodes": "PUSH1 0x4C PUSH1 0x2C PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x0 DUP2 EQ PUSH1 0x1C JUMPI PUSH1 0x1E JUMP JUMPDEST INVALID JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN STOP PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH8 0xDA153E7D0060D30F 0xd3 DUP7 SELFDESTRUCT PC MLOAD DIV PUSH24 0x66430D746B260F73A914A701875020F60029000000000000 ",
            "sourceMap": "183:790:0:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a7230582067da153e7d0060d30fd386ff5851047766430d746b260f73a914a701875020f60029",
            "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH8 0xDA153E7D0060D30F 0xd3 DUP7 SELFDESTRUCT PC MLOAD DIV PUSH24 0x66430D746B260F73A914A701875020F60029000000000000 ",
            "sourceMap": "183:790:0:-;;;;;;;;"
          },
          "gasEstimates": {
            "creation": {
              "codeDepositCost": "15200",
              "executionCost": "116",
              "totalCost": "15316"
            },
            "internal": {
              "add(uint256,uint256)": "infinite",
              "div(uint256,uint256)": "infinite",
              "mul(uint256,uint256)": "infinite",
              "sub(uint256,uint256)": "infinite"
            }
          },
          "legacyAssembly": {
            ".code": [
              {
                "begin": 183,
                "end": 973,
                "name": "PUSH #[$]",
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 183,
                "end": 973,
                "name": "PUSH [$]",
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 132,
                "end": 134,
                "name": "PUSH",
                "value": "B"
              },
              {
                "begin": 166,
                "end": 173,
                "name": "DUP3"
              },
              {
                "begin": 155,
                "end": 164,
                "name": "DUP3"
              },
              {
                "begin": 146,
                "end": 153,
                "name": "DUP3"
              },
              {
                "begin": 137,
                "end": 174,
                "name": "CODECOPY"
              },
              {
                "begin": 252,
                "end": 259,
                "name": "DUP1"
              },
              {
                "begin": 246,
                "end": 260,
                "name": "MLOAD"
              },
              {
                "begin": 243,
                "end": 244,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 238,
                "end": 261,
                "name": "BYTE"
              },
              {
                "begin": 232,
                "end": 236,
                "name": "PUSH",
                "value": "73"
              },
              {
                "begin": 229,
                "end": 262,
                "name": "EQ"
              },
              {
                "begin": 270,
                "end": 271,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 265,
                "end": 285,
                "name": "DUP2"
              },
              {
                "begin": 265,
                "end": 285,
                "name": "EQ"
              },
              {
                "begin": 265,
                "end": 285,
                "name": "PUSH [tag]",
                "value": "2"
              },
              {
                "begin": 265,
                "end": 285,
                "name": "JUMPI"
              },
              {
                "begin": 222,
                "end": 285,
                "name": "PUSH [tag]",
                "value": "1"
              },
              {
                "begin": 222,
                "end": 285,
                "name": "JUMP"
              },
              {
                "begin": 265,
                "end": 285,
                "name": "tag",
                "value": "2"
              },
              {
                "begin": 265,
                "end": 285,
                "name": "JUMPDEST"
              },
              {
                "begin": 274,
                "end": 283,
                "name": "INVALID"
              },
              {
                "begin": 222,
                "end": 285,
                "name": "tag",
                "value": "1"
              },
              {
                "begin": 222,
                "end": 285,
                "name": "JUMPDEST"
              },
              {
                "begin": 222,
                "end": 285,
                "name": "POP"
              },
              {
                "begin": 298,
                "end": 307,
                "name": "ADDRESS"
              },
              {
                "begin": 295,
                "end": 296,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 288,
                "end": 308,
                "name": "MSTORE"
              },
              {
                "begin": 328,
                "end": 332,
                "name": "PUSH",
                "value": "73"
              },
              {
                "begin": 319,
                "end": 326,
                "name": "DUP2"
              },
              {
                "begin": 311,
                "end": 333,
                "name": "MSTORE8"
              },
              {
                "begin": 352,
                "end": 359,
                "name": "DUP3"
              },
              {
                "begin": 343,
                "end": 350,
                "name": "DUP2"
              },
              {
                "begin": 336,
                "end": 360,
                "name": "RETURN"
              }
            ],
            ".data": {
              "0": {
                ".auxdata": "a165627a7a7230582067da153e7d0060d30fd386ff5851047766430d746b260f73a914a701875020f60029",
                ".code": [
                  {
                    "begin": 183,
                    "end": 973,
                    "name": "PUSHDEPLOYADDRESS"
                  },
                  {
                    "begin": 183,
                    "end": 973,
                    "name": "ADDRESS"
                  },
                  {
                    "begin": 183,
                    "end": 973,
                    "name": "EQ"
                  },
                  {
                    "begin": 183,
                    "end": 973,
                    "name": "PUSH",
                    "value": "80"
                  },
                  {
                    "begin": 183,
                    "end": 973,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 183,
                    "end": 973,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 183,
                    "end": 973,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 183,
                    "end": 973,
                    "name": "DUP1"
                  },
                  {
                    "begin": 183,
                    "end": 973,
                    "name": "REVERT"
                  }
                ]
              }
            }
          },
          "methodIdentifiers": {}
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{},\"title\":\"SafeMath\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"TetherToken.sol\":\"SafeMath\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"TetherToken.sol\":{\"content\":\"/**\\n *Submitted for verification at Etherscan.io on 2017-11-28\\n*/\\n\\npragma solidity ^0.4.17;\\n\\n/**\\n * @title SafeMath\\n * @dev Math operations with safety checks that throw on error\\n */\\nlibrary SafeMath {\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n        uint256 c = a * b;\\n        assert(c / a == b);\\n        return c;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n        return c;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        assert(b <= a);\\n        return a - b;\\n    }\\n\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        assert(c >= a);\\n        return c;\\n    }\\n}\\n\\n/**\\n * @title Ownable\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\n * functions, this simplifies the implementation of \\\"user permissions\\\".\\n */\\ncontract Ownable {\\n    address public owner;\\n\\n    /**\\n      * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\n      * account.\\n      */\\n    function Ownable() public {\\n        owner = msg.sender;\\n    }\\n\\n    /**\\n      * @dev Throws if called by any account other than the owner.\\n      */\\n    modifier onlyOwner() {\\n        require(msg.sender == owner);\\n        _;\\n    }\\n\\n    /**\\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\\n    * @param newOwner The address to transfer ownership to.\\n    */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        if (newOwner != address(0)) {\\n            owner = newOwner;\\n        }\\n    }\\n\\n}\\n\\n/**\\n * @title ERC20Basic\\n * @dev Simpler version of ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20Basic {\\n    uint public _totalSupply;\\n    function totalSupply() public constant returns (uint);\\n    function balanceOf(address who) public constant returns (uint);\\n    function transfer(address to, uint value) public;\\n    event Transfer(address indexed from, address indexed to, uint value);\\n}\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20 is ERC20Basic {\\n    function allowance(address owner, address spender) public constant returns (uint);\\n    function transferFrom(address from, address to, uint value) public;\\n    function approve(address spender, uint value) public;\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n}\\n\\n/**\\n * @title Basic token\\n * @dev Basic version of StandardToken, with no allowances.\\n */\\ncontract BasicToken is Ownable, ERC20Basic {\\n    using SafeMath for uint;\\n\\n    mapping(address => uint) public balances;\\n\\n    // additional variables for use if transaction fees ever became necessary\\n    uint public basisPointsRate = 0;\\n    uint public maximumFee = 0;\\n\\n    /**\\n    * @dev Fix for the ERC20 short address attack.\\n    */\\n    modifier onlyPayloadSize(uint size) {\\n        require(!(msg.data.length < size + 4));\\n        _;\\n    }\\n\\n    /**\\n    * @dev transfer token for a specified address\\n    * @param _to The address to transfer to.\\n    * @param _value The amount to be transferred.\\n    */\\n    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[msg.sender] = balances[msg.sender].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(msg.sender, owner, fee);\\n        }\\n        Transfer(msg.sender, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Gets the balance of the specified address.\\n    * @param _owner The address to query the the balance of.\\n    * @return An uint representing the amount owned by the passed address.\\n    */\\n    function balanceOf(address _owner) public constant returns (uint balance) {\\n        return balances[_owner];\\n    }\\n\\n}\\n\\n/**\\n * @title Standard ERC20 token\\n *\\n * @dev Implementation of the basic standard token.\\n * @dev https://github.com/ethereum/EIPs/issues/20\\n * @dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\n */\\ncontract StandardToken is BasicToken, ERC20 {\\n\\n    mapping (address => mapping (address => uint)) public allowed;\\n\\n    uint public constant MAX_UINT = 2**256 - 1;\\n\\n    /**\\n    * @dev Transfer tokens from one address to another\\n    * @param _from address The address which you want to send tokens from\\n    * @param _to address The address which you want to transfer to\\n    * @param _value uint the amount of tokens to be transferred\\n    */\\n    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\\n        var _allowance = allowed[_from][msg.sender];\\n\\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\\n        // if (_value > _allowance) throw;\\n\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        if (_allowance < MAX_UINT) {\\n            allowed[_from][msg.sender] = _allowance.sub(_value);\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[_from] = balances[_from].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(_from, owner, fee);\\n        }\\n        Transfer(_from, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\n    * @param _spender The address which will spend the funds.\\n    * @param _value The amount of tokens to be spent.\\n    */\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n\\n        // To change the approve amount you first have to reduce the addresses`\\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\\n        //  already 0 to mitigate the race condition described here:\\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));\\n\\n        allowed[msg.sender][_spender] = _value;\\n        Approval(msg.sender, _spender, _value);\\n    }\\n\\n    /**\\n    * @dev Function to check the amount of tokens than an owner allowed to a spender.\\n    * @param _owner address The address which owns the funds.\\n    * @param _spender address The address which will spend the funds.\\n    * @return A uint specifying the amount of tokens still available for the spender.\\n    */\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        return allowed[_owner][_spender];\\n    }\\n\\n}\\n\\n\\n/**\\n * @title Pausable\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\n */\\ncontract Pausable is Ownable {\\n  event Pause();\\n  event Unpause();\\n\\n  bool public paused = false;\\n\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\n   */\\n  modifier whenNotPaused() {\\n    require(!paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is paused.\\n   */\\n  modifier whenPaused() {\\n    require(paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev called by the owner to pause, triggers stopped state\\n   */\\n  function pause() onlyOwner whenNotPaused public {\\n    paused = true;\\n    Pause();\\n  }\\n\\n  /**\\n   * @dev called by the owner to unpause, returns to normal state\\n   */\\n  function unpause() onlyOwner whenPaused public {\\n    paused = false;\\n    Unpause();\\n  }\\n}\\n\\ncontract BlackList is Ownable, BasicToken {\\n\\n    /////// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\\n    function getBlackListStatus(address _maker) external constant returns (bool) {\\n        return isBlackListed[_maker];\\n    }\\n\\n    function getOwner() external constant returns (address) {\\n        return owner;\\n    }\\n\\n    mapping (address => bool) public isBlackListed;\\n\\n    function addBlackList (address _evilUser) public onlyOwner {\\n        isBlackListed[_evilUser] = true;\\n        AddedBlackList(_evilUser);\\n    }\\n\\n    function removeBlackList (address _clearedUser) public onlyOwner {\\n        isBlackListed[_clearedUser] = false;\\n        RemovedBlackList(_clearedUser);\\n    }\\n\\n    function destroyBlackFunds (address _blackListedUser) public onlyOwner {\\n        require(isBlackListed[_blackListedUser]);\\n        uint dirtyFunds = balanceOf(_blackListedUser);\\n        balances[_blackListedUser] = 0;\\n        _totalSupply -= dirtyFunds;\\n        DestroyedBlackFunds(_blackListedUser, dirtyFunds);\\n    }\\n\\n    event DestroyedBlackFunds(address _blackListedUser, uint _balance);\\n\\n    event AddedBlackList(address _user);\\n\\n    event RemovedBlackList(address _user);\\n\\n}\\n\\ncontract UpgradedStandardToken is StandardToken{\\n    // those methods are called by the legacy contract\\n    // and they must ensure msg.sender to be the contract address\\n    function transferByLegacy(address from, address to, uint value) public;\\n    function transferFromByLegacy(address sender, address from, address spender, uint value) public;\\n    function approveByLegacy(address from, address spender, uint value) public;\\n}\\n\\ncontract TetherToken is Pausable, StandardToken, BlackList {\\n\\n    string public name;\\n    string public symbol;\\n    uint public decimals;\\n    address public upgradedAddress;\\n    bool public deprecated;\\n\\n    //  The contract can be initialized with a number of tokens\\n    //  All the tokens are deposited to the owner address\\n    //\\n    // @param _balance Initial supply of the contract\\n    // @param _name Token Name\\n    // @param _symbol Token symbol\\n    // @param _decimals Token decimals\\n    function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\\n        _totalSupply = _initialSupply;\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n        balances[owner] = _initialSupply;\\n        deprecated = false;\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transfer(address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[msg.sender]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);\\n        } else {\\n            return super.transfer(_to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[_from]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);\\n        } else {\\n            return super.transferFrom(_from, _to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function balanceOf(address who) public constant returns (uint) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).balanceOf(who);\\n        } else {\\n            return super.balanceOf(who);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);\\n        } else {\\n            return super.approve(_spender, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).allowance(_owner, _spender);\\n        } else {\\n            return super.allowance(_owner, _spender);\\n        }\\n    }\\n\\n    // deprecate current contract in favour of a new one\\n    function deprecate(address _upgradedAddress) public onlyOwner {\\n        deprecated = true;\\n        upgradedAddress = _upgradedAddress;\\n        Deprecate(_upgradedAddress);\\n    }\\n\\n    // deprecate current contract if favour of a new one\\n    function totalSupply() public constant returns (uint) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).totalSupply();\\n        } else {\\n            return _totalSupply;\\n        }\\n    }\\n\\n    // Issue a new amount of tokens\\n    // these tokens are deposited into the owner address\\n    //\\n    // @param _amount Number of tokens to be issued\\n    function issue(uint amount) public onlyOwner {\\n        require(_totalSupply + amount > _totalSupply);\\n        require(balances[owner] + amount > balances[owner]);\\n\\n        balances[owner] += amount;\\n        _totalSupply += amount;\\n        Issue(amount);\\n    }\\n\\n    // Redeem tokens.\\n    // These tokens are withdrawn from the owner address\\n    // if the balance must be enough to cover the redeem\\n    // or the call will fail.\\n    // @param _amount Number of tokens to be issued\\n    function redeem(uint amount) public onlyOwner {\\n        require(_totalSupply >= amount);\\n        require(balances[owner] >= amount);\\n\\n        _totalSupply -= amount;\\n        balances[owner] -= amount;\\n        Redeem(amount);\\n    }\\n\\n    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\\n        // Ensure transparency by hardcoding limit beyond which fees can never be added\\n        require(newBasisPoints < 20);\\n        require(newMaxFee < 50);\\n\\n        basisPointsRate = newBasisPoints;\\n        maximumFee = newMaxFee.mul(10**decimals);\\n\\n        Params(basisPointsRate, maximumFee);\\n    }\\n\\n    // Called when new token are issued\\n    event Issue(uint amount);\\n\\n    // Called when tokens are redeemed\\n    event Redeem(uint amount);\\n\\n    // Called when contract is deprecated\\n    event Deprecate(address newAddress);\\n\\n    // Called if contract ever adds fees\\n    event Params(uint feeBasisPoints, uint maxFee);\\n}\",\"keccak256\":\"0x51e9740650f230941b166a080db3f1b5fbe6872aea0d29ae883f230b1a20bb1c\"}},\"version\":1}",
        "userdoc": {
          "methods": {}
        }
      },
      "StandardToken": {
        "abi": [
          {
            "constant": false,
            "inputs": [
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_from",
                "type": "address"
              },
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "name": "balances",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "maximumFee",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "_totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "",
                "type": "address"
              },
              {
                "name": "",
                "type": "address"
              }
            ],
            "name": "allowed",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "name": "balance",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "name": "remaining",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "basisPointsRate",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "MAX_UINT",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          }
        ],
        "devdoc": {
          "methods": {
            "allowance(address,address)": {
              "details": "Function to check the amount of tokens than an owner allowed to a spender.",
              "params": {
                "_owner": "address The address which owns the funds.",
                "_spender": "address The address which will spend the funds."
              },
              "return": "A uint specifying the amount of tokens still available for the spender."
            },
            "approve(address,uint256)": {
              "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.",
              "params": {
                "_spender": "The address which will spend the funds.",
                "_value": "The amount of tokens to be spent."
              }
            },
            "balanceOf(address)": {
              "details": "Gets the balance of the specified address.",
              "params": {
                "_owner": "The address to query the the balance of."
              },
              "return": "An uint representing the amount owned by the passed address."
            },
            "transfer(address,uint256)": {
              "details": "transfer token for a specified address",
              "params": {
                "_to": "The address to transfer to.",
                "_value": "The amount to be transferred."
              }
            },
            "transferFrom(address,address,uint256)": {
              "details": "Transfer tokens from one address to another",
              "params": {
                "_from": "address The address which you want to send tokens from",
                "_to": "address The address which you want to transfer to",
                "_value": "uint the amount of tokens to be transferred"
              }
            },
            "transferOwnership(address)": {
              "details": "Allows the current owner to transfer control of the contract to a newOwner.",
              "params": {
                "newOwner": "The address to transfer ownership to."
              }
            }
          },
          "title": "Standard ERC20 token"
        },
        "evm": {
          "assembly": "",
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "gasEstimates": null,
          "legacyAssembly": null,
          "methodIdentifiers": {
            "MAX_UINT()": "e5b5019a",
            "_totalSupply()": "3eaaf86b",
            "allowance(address,address)": "dd62ed3e",
            "allowed(address,address)": "5c658165",
            "approve(address,uint256)": "095ea7b3",
            "balanceOf(address)": "70a08231",
            "balances(address)": "27e235e3",
            "basisPointsRate()": "dd644f72",
            "maximumFee()": "35390714",
            "owner()": "8da5cb5b",
            "totalSupply()": "18160ddd",
            "transfer(address,uint256)": "a9059cbb",
            "transferFrom(address,address,uint256)": "23b872dd",
            "transferOwnership(address)": "f2fde38b"
          }
        },
        "metadata": "",
        "userdoc": {
          "methods": {}
        }
      },
      "TetherToken": {
        "abi": [
          {
            "constant": true,
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_upgradedAddress",
                "type": "address"
              }
            ],
            "name": "deprecate",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "deprecated",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_evilUser",
                "type": "address"
              }
            ],
            "name": "addBlackList",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_from",
                "type": "address"
              },
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "upgradedAddress",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "name": "balances",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "decimals",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "maximumFee",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "_totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "unpause",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_maker",
                "type": "address"
              }
            ],
            "name": "getBlackListStatus",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "",
                "type": "address"
              },
              {
                "name": "",
                "type": "address"
              }
            ],
            "name": "allowed",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "paused",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "who",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "pause",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "getOwner",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "newBasisPoints",
                "type": "uint256"
              },
              {
                "name": "newMaxFee",
                "type": "uint256"
              }
            ],
            "name": "setParams",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "issue",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "redeem",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "name": "remaining",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "basisPointsRate",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "name": "isBlackListed",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_clearedUser",
                "type": "address"
              }
            ],
            "name": "removeBlackList",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "MAX_UINT",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_blackListedUser",
                "type": "address"
              }
            ],
            "name": "destroyBlackFunds",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "name": "_initialSupply",
                "type": "uint256"
              },
              {
                "name": "_name",
                "type": "string"
              },
              {
                "name": "_symbol",
                "type": "string"
              },
              {
                "name": "_decimals",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "Issue",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "Redeem",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "newAddress",
                "type": "address"
              }
            ],
            "name": "Deprecate",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "feeBasisPoints",
                "type": "uint256"
              },
              {
                "indexed": false,
                "name": "maxFee",
                "type": "uint256"
              }
            ],
            "name": "Params",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "_blackListedUser",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_balance",
                "type": "uint256"
              }
            ],
            "name": "DestroyedBlackFunds",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "_user",
                "type": "address"
              }
            ],
            "name": "AddedBlackList",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "_user",
                "type": "address"
              }
            ],
            "name": "RemovedBlackList",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "Pause",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "Unpause",
            "type": "event"
          }
        ],
        "devdoc": {
          "methods": {
            "pause()": {
              "details": "called by the owner to pause, triggers stopped state"
            },
            "transferOwnership(address)": {
              "details": "Allows the current owner to transfer control of the contract to a newOwner.",
              "params": {
                "newOwner": "The address to transfer ownership to."
              }
            },
            "unpause()": {
              "details": "called by the owner to unpause, returns to normal state"
            }
          }
        },
        "evm": {
          "assembly": "    /* \"TetherToken.sol\":9724:14505  contract TetherToken is Pausable, StandardToken, BlackList {... */\n  mstore(0x40, 0x80)\n    /* \"TetherToken.sol\":7405:7410  false */\n  0x0\n    /* \"TetherToken.sol\":7384:7410  bool public paused = false */\n  dup1\n  sload\n  not(mul(0xff, exp(0x2, 0xa0)))\n  and\n  dup2\n  sstore\n    /* \"TetherToken.sol\":3041:3072  uint public basisPointsRate = 0 */\n  0x3\n  dup2\n  swap1\n  sstore\n    /* \"TetherToken.sol\":3078:3104  uint public maximumFee = 0 */\n  0x4\n  sstore\n    /* \"TetherToken.sol\":10219:10508  function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {... */\n  callvalue\n    /* \"--CODEGEN--\":5:7   */\n  dup1\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"TetherToken.sol\":10219:10508  function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  swap1\n  dup2\n  mstore\n  dup2\n  mload\n  0x20\n  dup1\n  dup5\n  add\n  mload\n  swap3\n  dup5\n  add\n  mload\n  0x60\n  dup6\n  add\n  mload\n    /* \"TetherToken.sol\":1378:1383  owner */\n  0x0\n    /* \"TetherToken.sol\":1378:1396  owner = msg.sender */\n  dup1\n  sload\n  not(sub(exp(0x2, 0xa0), 0x1))\n  and\n    /* \"TetherToken.sol\":1386:1396  msg.sender */\n  caller\n    /* \"TetherToken.sol\":1378:1396  owner = msg.sender */\n  or\n  swap1\n  sstore\n  0x1\n    /* \"TetherToken.sol\":10324:10353  _totalSupply = _initialSupply */\n  dup5\n  swap1\n  sstore\n    /* \"TetherToken.sol\":10219:10508  function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {... */\n  swap4\n  dup6\n  add\n    /* \"TetherToken.sol\":10363:10375  name = _name */\n  dup1\n  mload\n    /* \"TetherToken.sol\":10219:10508  function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {... */\n  swap4\n  swap6\n  swap1\n  swap5\n  swap2\n  add\n  swap3\n  swap1\n  swap2\n    /* \"TetherToken.sol\":10363:10375  name = _name */\n  tag_6\n  swap2\n    /* \"TetherToken.sol\":10363:10367  name */\n  0x7\n  swap2\n    /* \"TetherToken.sol\":10363:10375  name = _name */\n  dup7\n  add\n  swap1\n  jump\t// in(tag_7)\ntag_6:\n  pop\n    /* \"TetherToken.sol\":10385:10401  symbol = _symbol */\n  dup2\n  mload\n  tag_8\n  swap1\n    /* \"TetherToken.sol\":10385:10391  symbol */\n  0x8\n  swap1\n    /* \"TetherToken.sol\":10385:10401  symbol = _symbol */\n  0x20\n  dup6\n  add\n  swap1\n  jump\t// in(tag_7)\ntag_8:\n  pop\n    /* \"TetherToken.sol\":10411:10419  decimals */\n  0x9\n    /* \"TetherToken.sol\":10411:10431  decimals = _decimals */\n  sstore\n  pop\n  pop\n    /* \"TetherToken.sol\":10441:10456  balances[owner] */\n  0x0\n    /* \"TetherToken.sol\":10450:10455  owner */\n  dup1\n  sload\n  sub(exp(0x2, 0xa0), 0x1)\n  and\n    /* \"TetherToken.sol\":10441:10456  balances[owner] */\n  dup2\n  mstore\n    /* \"TetherToken.sol\":10441:10449  balances */\n  0x2\n    /* \"TetherToken.sol\":10441:10456  balances[owner] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"TetherToken.sol\":10441:10473  balances[owner] = _initialSupply */\n  sstore\n    /* \"TetherToken.sol\":10483:10493  deprecated */\n  0xa\n    /* \"TetherToken.sol\":10483:10501  deprecated = false */\n  dup1\n  sload\n  not(mul(0xff, exp(0x2, 0xa0)))\n  and\n  swap1\n  sstore\n    /* \"TetherToken.sol\":9724:14505  contract TetherToken is Pausable, StandardToken, BlackList {... */\n  jump(tag_9)\ntag_7:\n  dup3\n  dup1\n  sload\n  0x1\n  dup2\n  0x1\n  and\n  iszero\n  0x100\n  mul\n  sub\n  and\n  0x2\n  swap1\n  div\n  swap1\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_11\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_13)\ntag_11:\n  dup3\n  dup1\n  add\n  0x1\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_13\n  jumpi\n  swap2\n  dup3\n  add\ntag_12:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_13\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x1\n  add\n  swap1\n  jump(tag_12)\ntag_13:\n  pop\n  tag_14\n  swap3\n  swap2\n  pop\n  jump\t// in(tag_15)\ntag_14:\n  pop\n  swap1\n  jump\t// out\ntag_15:\n  tag_16\n  swap2\n  swap1\ntag_17:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_14\n  jumpi\n  0x0\n  dup2\n  sstore\n  0x1\n  add\n  jump(tag_17)\ntag_16:\n  swap1\n  jump\t// out\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"TetherToken.sol\":9724:14505  contract TetherToken is Pausable, StandardToken, BlackList {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      and(div(calldataload(0x0), exp(0x2, 0xe0)), 0xffffffff)\n      0x6fdde03\n      dup2\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x753c30c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x95ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe136b19\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xecb93c0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x26976e3f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x27e235e3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x35390714\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x3eaaf86b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x59bf1abe\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5c658165\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc0324c77\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xcc872b66\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xdb006a75\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xdd644f72\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xe47d6060\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe4997dc5\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xe5b5019a\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf3bdc228\n      eq\n      tag_33\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"TetherToken.sol\":9790:9808  string public name */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_34:\n        /* \"TetherToken.sol\":9790:9808  string public name */\n      pop\n      tag_35\n      jump(tag_36)\n    tag_35:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_37:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_37)\n    tag_38:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"TetherToken.sol\":9790:9808  string public name */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_40\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_40:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TetherToken.sol\":12476:12653  function deprecate(address _upgradedAddress) public onlyOwner {... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_41\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_41:\n      pop\n        /* \"TetherToken.sol\":12476:12653  function deprecate(address _upgradedAddress) public onlyOwner {... */\n      tag_42\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_43)\n    tag_42:\n      stop\n        /* \"TetherToken.sol\":11748:12044  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_44:\n      pop\n        /* \"TetherToken.sol\":11748:12044  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {... */\n      tag_42\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      calldataload(0x24)\n      jump(tag_46)\n        /* \"TetherToken.sol\":9902:9924  bool public deprecated */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_47\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_47:\n        /* \"TetherToken.sol\":9902:9924  bool public deprecated */\n      pop\n      tag_48\n      jump(tag_49)\n    tag_48:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"TetherToken.sol\":8501:8643  function addBlackList (address _evilUser) public onlyOwner {... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_50:\n      pop\n        /* \"TetherToken.sol\":8501:8643  function addBlackList (address _evilUser) public onlyOwner {... */\n      tag_42\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_52)\n        /* \"TetherToken.sol\":12716:12928  function totalSupply() public constant returns (uint) {... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_53\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_53:\n        /* \"TetherToken.sol\":12716:12928  function totalSupply() public constant returns (uint) {... */\n      pop\n      tag_54\n      jump(tag_55)\n    tag_54:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"TetherToken.sol\":10991:11346  function transferFrom(address _from, address _to, uint _value) public whenNotPaused {... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_56\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_56:\n      pop\n        /* \"TetherToken.sol\":10991:11346  function transferFrom(address _from, address _to, uint _value) public whenNotPaused {... */\n      tag_42\n      sub(exp(0x2, 0xa0), 0x1)\n      calldataload(0x4)\n      dup2\n      and\n      swap1\n      calldataload(0x24)\n      and\n      calldataload(0x44)\n      jump(tag_58)\n        /* \"TetherToken.sol\":9866:9896  address public upgradedAddress */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_59\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_59:\n        /* \"TetherToken.sol\":9866:9896  address public upgradedAddress */\n      pop\n      tag_60\n      jump(tag_61)\n    tag_60:\n      0x40\n      dup1\n      mload\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"TetherToken.sol\":2916:2956  mapping(address => uint) public balances */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_62\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_62:\n      pop\n        /* \"TetherToken.sol\":2916:2956  mapping(address => uint) public balances */\n      tag_54\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_64)\n        /* \"TetherToken.sol\":9840:9860  uint public decimals */\n    tag_11:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_65\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_65:\n        /* \"TetherToken.sol\":9840:9860  uint public decimals */\n      pop\n      tag_54\n      jump(tag_67)\n        /* \"TetherToken.sol\":3078:3104  uint public maximumFee = 0 */\n    tag_12:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_68\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_68:\n        /* \"TetherToken.sol\":3078:3104  uint public maximumFee = 0 */\n      pop\n      tag_54\n      jump(tag_70)\n        /* \"TetherToken.sol\":2043:2067  uint public _totalSupply */\n    tag_13:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_71\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_71:\n        /* \"TetherToken.sol\":2043:2067  uint public _totalSupply */\n      pop\n      tag_54\n      jump(tag_73)\n        /* \"TetherToken.sol\":7970:8057  function unpause() onlyOwner whenPaused public {... */\n    tag_14:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_74\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_74:\n        /* \"TetherToken.sol\":7970:8057  function unpause() onlyOwner whenPaused public {... */\n      pop\n      tag_42\n      jump(tag_76)\n        /* \"TetherToken.sol\":8229:8351  function getBlackListStatus(address _maker) external constant returns (bool) {... */\n    tag_15:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_77\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_77:\n      pop\n        /* \"TetherToken.sol\":8229:8351  function getBlackListStatus(address _maker) external constant returns (bool) {... */\n      tag_48\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_79)\n        /* \"TetherToken.sol\":4652:4713  mapping (address => mapping (address => uint)) public allowed */\n    tag_16:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_80\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_80:\n      pop\n        /* \"TetherToken.sol\":4652:4713  mapping (address => mapping (address => uint)) public allowed */\n      tag_54\n      sub(exp(0x2, 0xa0), 0x1)\n      calldataload(0x4)\n      dup2\n      and\n      swap1\n      calldataload(0x24)\n      and\n      jump(tag_82)\n        /* \"TetherToken.sol\":7384:7410  bool public paused = false */\n    tag_17:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_83\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_83:\n        /* \"TetherToken.sol\":7384:7410  bool public paused = false */\n      pop\n      tag_48\n      jump(tag_85)\n        /* \"TetherToken.sol\":11428:11666  function balanceOf(address who) public constant returns (uint) {... */\n    tag_18:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_86\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_86:\n      pop\n        /* \"TetherToken.sol\":11428:11666  function balanceOf(address who) public constant returns (uint) {... */\n      tag_54\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_88)\n        /* \"TetherToken.sol\":7803:7888  function pause() onlyOwner whenNotPaused public {... */\n    tag_19:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_89\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_89:\n        /* \"TetherToken.sol\":7803:7888  function pause() onlyOwner whenNotPaused public {... */\n      pop\n      tag_42\n      jump(tag_91)\n        /* \"TetherToken.sol\":8357:8442  function getOwner() external constant returns (address) {... */\n    tag_20:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_92\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_92:\n        /* \"TetherToken.sol\":8357:8442  function getOwner() external constant returns (address) {... */\n      pop\n      tag_60\n      jump(tag_94)\n        /* \"TetherToken.sol\":1188:1208  address public owner */\n    tag_21:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_95\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_95:\n        /* \"TetherToken.sol\":1188:1208  address public owner */\n      pop\n      tag_60\n      jump(tag_97)\n        /* \"TetherToken.sol\":9814:9834  string public symbol */\n    tag_22:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_98\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_98:\n        /* \"TetherToken.sol\":9814:9834  string public symbol */\n      pop\n      tag_35\n      jump(tag_100)\n        /* \"TetherToken.sol\":10590:10909  function transfer(address _to, uint _value) public whenNotPaused {... */\n    tag_23:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_105\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_105:\n      pop\n        /* \"TetherToken.sol\":10590:10909  function transfer(address _to, uint _value) public whenNotPaused {... */\n      tag_42\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      calldataload(0x24)\n      jump(tag_107)\n        /* \"TetherToken.sol\":13805:14183  function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {... */\n    tag_24:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_108\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_108:\n      pop\n        /* \"TetherToken.sol\":13805:14183  function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {... */\n      tag_42\n      calldataload(0x4)\n      calldataload(0x24)\n      jump(tag_110)\n        /* \"TetherToken.sol\":13086:13345  function issue(uint amount) public onlyOwner {... */\n    tag_25:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_111\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_111:\n      pop\n        /* \"TetherToken.sol\":13086:13345  function issue(uint amount) public onlyOwner {... */\n      tag_42\n      calldataload(0x4)\n      jump(tag_113)\n        /* \"TetherToken.sol\":13569:13799  function redeem(uint amount) public onlyOwner {... */\n    tag_26:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_114\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_114:\n      pop\n        /* \"TetherToken.sol\":13569:13799  function redeem(uint amount) public onlyOwner {... */\n      tag_42\n      calldataload(0x4)\n      jump(tag_116)\n        /* \"TetherToken.sol\":12126:12413  function allowance(address _owner, address _spender) public constant returns (uint remaining) {... */\n    tag_27:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_117\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_117:\n      pop\n        /* \"TetherToken.sol\":12126:12413  function allowance(address _owner, address _spender) public constant returns (uint remaining) {... */\n      tag_54\n      sub(exp(0x2, 0xa0), 0x1)\n      calldataload(0x4)\n      dup2\n      and\n      swap1\n      calldataload(0x24)\n      and\n      jump(tag_119)\n        /* \"TetherToken.sol\":3041:3072  uint public basisPointsRate = 0 */\n    tag_28:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_120\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_120:\n        /* \"TetherToken.sol\":3041:3072  uint public basisPointsRate = 0 */\n      pop\n      tag_54\n      jump(tag_122)\n        /* \"TetherToken.sol\":8448:8494  mapping (address => bool) public isBlackListed */\n    tag_29:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_123\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_123:\n      pop\n        /* \"TetherToken.sol\":8448:8494  mapping (address => bool) public isBlackListed */\n      tag_48\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_125)\n        /* \"TetherToken.sol\":8649:8806  function removeBlackList (address _clearedUser) public onlyOwner {... */\n    tag_30:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_126\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_126:\n      pop\n        /* \"TetherToken.sol\":8649:8806  function removeBlackList (address _clearedUser) public onlyOwner {... */\n      tag_42\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_128)\n        /* \"TetherToken.sol\":4720:4762  uint public constant MAX_UINT = 2**256 - 1 */\n    tag_31:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_129\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_129:\n        /* \"TetherToken.sol\":4720:4762  uint public constant MAX_UINT = 2**256 - 1 */\n      pop\n      tag_54\n      jump(tag_131)\n        /* \"TetherToken.sol\":1738:1885  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_32:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_132\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_132:\n      pop\n        /* \"TetherToken.sol\":1738:1885  function transferOwnership(address newOwner) public onlyOwner {... */\n      tag_42\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_134)\n        /* \"TetherToken.sol\":8812:9130  function destroyBlackFunds (address _blackListedUser) public onlyOwner {... */\n    tag_33:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_135\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_135:\n      pop\n        /* \"TetherToken.sol\":8812:9130  function destroyBlackFunds (address _blackListedUser) public onlyOwner {... */\n      tag_42\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_137)\n        /* \"TetherToken.sol\":9790:9808  string public name */\n    tag_36:\n      0x7\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x2\n      0x1\n      dup6\n      and\n      iszero\n      0x100\n      mul\n      not(0x0)\n      add\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      div\n      0x1f\n      dup2\n      add\n      dup5\n      swap1\n      div\n      dup5\n      mul\n      dup3\n      add\n      dup5\n      add\n      swap1\n      swap3\n      mstore\n      dup2\n      dup2\n      mstore\n      swap3\n      swap2\n      dup4\n      add\n      dup3\n      dup3\n      dup1\n      iszero\n      tag_138\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_139\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_138)\n    tag_139:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_140:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_140\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_138:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"TetherToken.sol\":12476:12653  function deprecate(address _upgradedAddress) public onlyOwner {... */\n    tag_43:\n        /* \"TetherToken.sol\":1546:1551  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n        /* \"TetherToken.sol\":1532:1542  msg.sender */\n      caller\n        /* \"TetherToken.sol\":1532:1551  msg.sender == owner */\n      eq\n        /* \"TetherToken.sol\":1524:1552  require(msg.sender == owner) */\n      tag_142\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_142:\n        /* \"TetherToken.sol\":12548:12558  deprecated */\n      0xa\n        /* \"TetherToken.sol\":12548:12565  deprecated = true */\n      dup1\n      sload\n      exp(0x2, 0xa0)\n      not(mul(0xff, exp(0x2, 0xa0)))\n      swap1\n      swap2\n      and\n      or\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n        /* \"TetherToken.sol\":12575:12609  upgradedAddress = _upgradedAddress */\n      and\n      sub(exp(0x2, 0xa0), 0x1)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"TetherToken.sol\":12619:12646  Deprecate(_upgradedAddress) */\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      0xcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e\n      swap2\n      0x20\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log1\n        /* \"TetherToken.sol\":12476:12653  function deprecate(address _upgradedAddress) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"TetherToken.sol\":11748:12044  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {... */\n    tag_46:\n        /* \"TetherToken.sol\":11819:11825  2 * 32 */\n      0x40\n        /* \"TetherToken.sol\":3251:3259  size + 4 */\n      0x44\n        /* \"TetherToken.sol\":3233:3241  msg.data */\n      calldatasize\n        /* \"TetherToken.sol\":3233:3259  msg.data.length < size + 4 */\n      lt\n        /* \"TetherToken.sol\":3231:3260  !(msg.data.length < size + 4) */\n      iszero\n        /* \"TetherToken.sol\":3223:3261  require(!(msg.data.length < size + 4)) */\n      tag_145\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_145:\n        /* \"TetherToken.sol\":11841:11851  deprecated */\n      sload(0xa)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n        /* \"TetherToken.sol\":11837:12038  if (deprecated) {... */\n      iszero\n      tag_147\n      jumpi\n        /* \"TetherToken.sol\":11896:11911  upgradedAddress */\n      sload(0xa)\n        /* \"TetherToken.sol\":11874:11958  UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value) */\n      0x40\n      dup1\n      mload\n      0xaee92d3300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"TetherToken.sol\":11929:11939  msg.sender */\n      caller\n        /* \"TetherToken.sol\":11874:11958  UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value) */\n      0x4\n      dup3\n      add\n      mstore\n      sub(exp(0x2, 0xa0), 0x1)\n      dup7\n      dup2\n      and\n      0x24\n      dup4\n      add\n      mstore\n      0x44\n      dup3\n      add\n      dup7\n      swap1\n      mstore\n      swap2\n      mload\n        /* \"TetherToken.sol\":11896:11911  upgradedAddress */\n      swap2\n      swap1\n      swap3\n      and\n      swap2\n        /* \"TetherToken.sol\":11874:11928  UpgradedStandardToken(upgradedAddress).approveByLegacy */\n      0xaee92d33\n      swap2\n        /* \"TetherToken.sol\":11874:11958  UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value) */\n      0x64\n      dup1\n      dup4\n      add\n      swap3\n        /* \"TetherToken.sol\":11896:11911  upgradedAddress */\n      0x0\n      swap3\n        /* \"TetherToken.sol\":11874:11958  UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value) */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"TetherToken.sol\":11896:11911  upgradedAddress */\n      dup4\n      dup8\n        /* \"TetherToken.sol\":11874:11958  UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_148\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_148:\n        /* \"TetherToken.sol\":11874:11958  UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_149\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_149:\n        /* \"TetherToken.sol\":11874:11958  UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value) */\n      pop\n      pop\n      pop\n      pop\n        /* \"TetherToken.sol\":11867:11958  return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value) */\n      jump(tag_151)\n        /* \"TetherToken.sol\":11837:12038  if (deprecated) {... */\n    tag_147:\n        /* \"TetherToken.sol\":11996:12027  super.approve(_spender, _value) */\n      tag_151\n        /* \"TetherToken.sol\":12010:12018  _spender */\n      dup4\n        /* \"TetherToken.sol\":12020:12026  _value */\n      dup4\n        /* \"TetherToken.sol\":11996:12009  super.approve */\n      tag_152\n        /* \"TetherToken.sol\":11996:12027  super.approve(_spender, _value) */\n      jump\t// in\n    tag_151:\n        /* \"TetherToken.sol\":11748:12044  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TetherToken.sol\":9902:9924  bool public deprecated */\n    tag_49:\n      sload(0xa)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"TetherToken.sol\":8501:8643  function addBlackList (address _evilUser) public onlyOwner {... */\n    tag_52:\n        /* \"TetherToken.sol\":1546:1551  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n        /* \"TetherToken.sol\":1532:1542  msg.sender */\n      caller\n        /* \"TetherToken.sol\":1532:1551  msg.sender == owner */\n      eq\n        /* \"TetherToken.sol\":1524:1552  require(msg.sender == owner) */\n      tag_154\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_154:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"TetherToken.sol\":8570:8594  isBlackListed[_evilUser] */\n      dup2\n      and\n      0x0\n      dup2\n      dup2\n      mstore\n        /* \"TetherToken.sol\":8570:8583  isBlackListed */\n      0x6\n        /* \"TetherToken.sol\":8570:8594  isBlackListed[_evilUser] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"TetherToken.sol\":8570:8601  isBlackListed[_evilUser] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"TetherToken.sol\":8597:8601  true */\n      0x1\n        /* \"TetherToken.sol\":8570:8601  isBlackListed[_evilUser] = true */\n      or\n      swap1\n      sstore\n        /* \"TetherToken.sol\":8611:8636  AddedBlackList(_evilUser) */\n      dup2\n      mload\n      swap3\n      dup4\n      mstore\n      swap1\n      mload\n      0x42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log1\n        /* \"TetherToken.sol\":8501:8643  function addBlackList (address _evilUser) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"TetherToken.sol\":12716:12928  function totalSupply() public constant returns (uint) {... */\n    tag_55:\n        /* \"TetherToken.sol\":12784:12794  deprecated */\n      sload(0xa)\n        /* \"TetherToken.sol\":12764:12768  uint */\n      0x0\n      swap1\n      exp(0x2, 0xa0)\n        /* \"TetherToken.sol\":12784:12794  deprecated */\n      swap1\n      div\n      0xff\n      and\n        /* \"TetherToken.sol\":12780:12922  if (deprecated) {... */\n      iszero\n      tag_157\n      jumpi\n        /* \"TetherToken.sol\":12831:12846  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"TetherToken.sol\":12817:12859  StandardToken(upgradedAddress).totalSupply */\n      and\n      0x18160ddd\n        /* \"TetherToken.sol\":12817:12861  StandardToken(upgradedAddress).totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      exp(0x2, 0xe0)\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_158\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_158:\n        /* \"TetherToken.sol\":12817:12861  StandardToken(upgradedAddress).totalSupply() */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_159\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_159:\n        /* \"TetherToken.sol\":12817:12861  StandardToken(upgradedAddress).totalSupply() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_160\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_160:\n      pop\n        /* \"TetherToken.sol\":12817:12861  StandardToken(upgradedAddress).totalSupply() */\n      mload\n      swap1\n      pop\n        /* \"TetherToken.sol\":12810:12861  return StandardToken(upgradedAddress).totalSupply() */\n      jump(tag_161)\n        /* \"TetherToken.sol\":12780:12922  if (deprecated) {... */\n    tag_157:\n      pop\n        /* \"TetherToken.sol\":12899:12911  _totalSupply */\n      sload(0x1)\n        /* \"TetherToken.sol\":12780:12922  if (deprecated) {... */\n    tag_161:\n        /* \"TetherToken.sol\":12716:12928  function totalSupply() public constant returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"TetherToken.sol\":10991:11346  function transferFrom(address _from, address _to, uint _value) public whenNotPaused {... */\n    tag_58:\n        /* \"TetherToken.sol\":7553:7559  paused */\n      sload(0x0)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n        /* \"TetherToken.sol\":7552:7559  !paused */\n      iszero\n        /* \"TetherToken.sol\":7544:7560  require(!paused) */\n      tag_163\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_163:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"TetherToken.sol\":11094:11114  isBlackListed[_from] */\n      dup4\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"TetherToken.sol\":11094:11107  isBlackListed */\n      0x6\n        /* \"TetherToken.sol\":11094:11114  isBlackListed[_from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"TetherToken.sol\":11093:11114  !isBlackListed[_from] */\n      iszero\n        /* \"TetherToken.sol\":11085:11115  require(!isBlackListed[_from]) */\n      tag_165\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_165:\n        /* \"TetherToken.sol\":11129:11139  deprecated */\n      sload(0xa)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n        /* \"TetherToken.sol\":11125:11340  if (deprecated) {... */\n      iszero\n      tag_166\n      jumpi\n        /* \"TetherToken.sol\":11184:11199  upgradedAddress */\n      sload(0xa)\n        /* \"TetherToken.sol\":11162:11253  UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value) */\n      0x40\n      dup1\n      mload\n      0x8b477adb00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"TetherToken.sol\":11222:11232  msg.sender */\n      caller\n        /* \"TetherToken.sol\":11162:11253  UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value) */\n      0x4\n      dup3\n      add\n      mstore\n      sub(exp(0x2, 0xa0), 0x1)\n      dup7\n      dup2\n      and\n      0x24\n      dup4\n      add\n      mstore\n      dup6\n      dup2\n      and\n      0x44\n      dup4\n      add\n      mstore\n      0x64\n      dup3\n      add\n      dup6\n      swap1\n      mstore\n      swap2\n      mload\n        /* \"TetherToken.sol\":11184:11199  upgradedAddress */\n      swap2\n      swap1\n      swap3\n      and\n      swap2\n        /* \"TetherToken.sol\":11162:11221  UpgradedStandardToken(upgradedAddress).transferFromByLegacy */\n      0x8b477adb\n      swap2\n        /* \"TetherToken.sol\":11162:11253  UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value) */\n      0x84\n      dup1\n      dup4\n      add\n      swap3\n        /* \"TetherToken.sol\":11184:11199  upgradedAddress */\n      0x0\n      swap3\n        /* \"TetherToken.sol\":11162:11253  UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value) */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"TetherToken.sol\":11184:11199  upgradedAddress */\n      dup4\n      dup8\n        /* \"TetherToken.sol\":11162:11253  UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_148\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"TetherToken.sol\":11125:11340  if (deprecated) {... */\n    tag_166:\n        /* \"TetherToken.sol\":11291:11329  super.transferFrom(_from, _to, _value) */\n      tag_151\n        /* \"TetherToken.sol\":11310:11315  _from */\n      dup4\n        /* \"TetherToken.sol\":11317:11320  _to */\n      dup4\n        /* \"TetherToken.sol\":11322:11328  _value */\n      dup4\n        /* \"TetherToken.sol\":11291:11309  super.transferFrom */\n      tag_171\n        /* \"TetherToken.sol\":11291:11329  super.transferFrom(_from, _to, _value) */\n      jump\t// in\n        /* \"TetherToken.sol\":9866:9896  address public upgradedAddress */\n    tag_61:\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0xa))\n      dup2\n      jump\t// out\n        /* \"TetherToken.sol\":2916:2956  mapping(address => uint) public balances */\n    tag_64:\n      mstore(0x20, 0x2)\n      0x0\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"TetherToken.sol\":9840:9860  uint public decimals */\n    tag_67:\n      sload(0x9)\n      dup2\n      jump\t// out\n        /* \"TetherToken.sol\":3078:3104  uint public maximumFee = 0 */\n    tag_70:\n      sload(0x4)\n      dup2\n      jump\t// out\n        /* \"TetherToken.sol\":2043:2067  uint public _totalSupply */\n    tag_73:\n      sload(0x1)\n      dup2\n      jump\t// out\n        /* \"TetherToken.sol\":7970:8057  function unpause() onlyOwner whenPaused public {... */\n    tag_76:\n        /* \"TetherToken.sol\":1546:1551  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n        /* \"TetherToken.sol\":1532:1542  msg.sender */\n      caller\n        /* \"TetherToken.sol\":1532:1551  msg.sender == owner */\n      eq\n        /* \"TetherToken.sol\":1524:1552  require(msg.sender == owner) */\n      tag_173\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_173:\n        /* \"TetherToken.sol\":7705:7711  paused */\n      sload(0x0)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n        /* \"TetherToken.sol\":7697:7712  require(paused) */\n      iszero\n      iszero\n      tag_175\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_175:\n        /* \"TetherToken.sol\":8032:8037  false */\n      0x0\n        /* \"TetherToken.sol\":8023:8037  paused = false */\n      dup1\n      sload\n      not(mul(0xff, exp(0x2, 0xa0)))\n      and\n      dup2\n      sstore\n        /* \"TetherToken.sol\":8043:8052  Unpause() */\n      mload(0x40)\n      0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33\n      swap2\n        /* \"TetherToken.sol\":8032:8037  false */\n      swap1\n        /* \"TetherToken.sol\":8043:8052  Unpause() */\n      log1\n        /* \"TetherToken.sol\":7970:8057  function unpause() onlyOwner whenPaused public {... */\n      jump\t// out\n        /* \"TetherToken.sol\":8229:8351  function getBlackListStatus(address _maker) external constant returns (bool) {... */\n    tag_79:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"TetherToken.sol\":8323:8344  isBlackListed[_maker] */\n      dup2\n      and\n        /* \"TetherToken.sol\":8300:8304  bool */\n      0x0\n        /* \"TetherToken.sol\":8323:8344  isBlackListed[_maker] */\n      swap1\n      dup2\n      mstore\n        /* \"TetherToken.sol\":8323:8336  isBlackListed */\n      0x6\n        /* \"TetherToken.sol\":8323:8344  isBlackListed[_maker] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"TetherToken.sol\":8229:8351  function getBlackListStatus(address _maker) external constant returns (bool) {... */\n    tag_177:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"TetherToken.sol\":4652:4713  mapping (address => mapping (address => uint)) public allowed */\n    tag_82:\n      0x5\n      0x20\n      swap1\n      dup2\n      mstore\n      0x0\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"TetherToken.sol\":7384:7410  bool public paused = false */\n    tag_85:\n      sload(0x0)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"TetherToken.sol\":11428:11666  function balanceOf(address who) public constant returns (uint) {... */\n    tag_88:\n        /* \"TetherToken.sol\":11505:11515  deprecated */\n      sload(0xa)\n        /* \"TetherToken.sol\":11485:11489  uint */\n      0x0\n      swap1\n      exp(0x2, 0xa0)\n        /* \"TetherToken.sol\":11505:11515  deprecated */\n      swap1\n      div\n      0xff\n      and\n        /* \"TetherToken.sol\":11501:11660  if (deprecated) {... */\n      iszero\n      tag_179\n      jumpi\n        /* \"TetherToken.sol\":11560:11575  upgradedAddress */\n      sload(0xa)\n        /* \"TetherToken.sol\":11538:11591  UpgradedStandardToken(upgradedAddress).balanceOf(who) */\n      0x40\n      dup1\n      mload\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(exp(0x2, 0xa0), 0x1)\n      dup6\n      dup2\n      and\n      0x4\n      dup4\n      add\n      mstore\n      swap2\n      mload\n        /* \"TetherToken.sol\":11560:11575  upgradedAddress */\n      swap2\n      swap1\n      swap3\n      and\n      swap2\n        /* \"TetherToken.sol\":11538:11586  UpgradedStandardToken(upgradedAddress).balanceOf */\n      0x70a08231\n      swap2\n        /* \"TetherToken.sol\":11538:11591  UpgradedStandardToken(upgradedAddress).balanceOf(who) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"TetherToken.sol\":11560:11575  upgradedAddress */\n      0x0\n      dup8\n        /* \"TetherToken.sol\":11538:11591  UpgradedStandardToken(upgradedAddress).balanceOf(who) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_180\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_180:\n        /* \"TetherToken.sol\":11538:11591  UpgradedStandardToken(upgradedAddress).balanceOf(who) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_181\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_181:\n        /* \"TetherToken.sol\":11538:11591  UpgradedStandardToken(upgradedAddress).balanceOf(who) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_182\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_182:\n      pop\n        /* \"TetherToken.sol\":11538:11591  UpgradedStandardToken(upgradedAddress).balanceOf(who) */\n      mload\n      swap1\n      pop\n        /* \"TetherToken.sol\":11531:11591  return UpgradedStandardToken(upgradedAddress).balanceOf(who) */\n      jump(tag_177)\n        /* \"TetherToken.sol\":11501:11660  if (deprecated) {... */\n    tag_179:\n        /* \"TetherToken.sol\":11629:11649  super.balanceOf(who) */\n      tag_184\n        /* \"TetherToken.sol\":11645:11648  who */\n      dup3\n        /* \"TetherToken.sol\":11629:11644  super.balanceOf */\n      tag_185\n        /* \"TetherToken.sol\":11629:11649  super.balanceOf(who) */\n      jump\t// in\n    tag_184:\n        /* \"TetherToken.sol\":11622:11649  return super.balanceOf(who) */\n      swap1\n      pop\n      jump(tag_177)\n        /* \"TetherToken.sol\":7803:7888  function pause() onlyOwner whenNotPaused public {... */\n    tag_91:\n        /* \"TetherToken.sol\":1546:1551  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n        /* \"TetherToken.sol\":1532:1542  msg.sender */\n      caller\n        /* \"TetherToken.sol\":1532:1551  msg.sender == owner */\n      eq\n        /* \"TetherToken.sol\":1524:1552  require(msg.sender == owner) */\n      tag_187\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_187:\n        /* \"TetherToken.sol\":7553:7559  paused */\n      sload(0x0)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n        /* \"TetherToken.sol\":7552:7559  !paused */\n      iszero\n        /* \"TetherToken.sol\":7544:7560  require(!paused) */\n      tag_189\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_189:\n        /* \"TetherToken.sol\":7857:7863  paused */\n      0x0\n        /* \"TetherToken.sol\":7857:7870  paused = true */\n      dup1\n      sload\n      not(mul(0xff, exp(0x2, 0xa0)))\n      and\n      exp(0x2, 0xa0)\n      or\n      dup2\n      sstore\n        /* \"TetherToken.sol\":7876:7883  Pause() */\n      mload(0x40)\n      0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625\n      swap2\n        /* \"TetherToken.sol\":7857:7863  paused */\n      swap1\n        /* \"TetherToken.sol\":7876:7883  Pause() */\n      log1\n        /* \"TetherToken.sol\":7803:7888  function pause() onlyOwner whenNotPaused public {... */\n      jump\t// out\n        /* \"TetherToken.sol\":8357:8442  function getOwner() external constant returns (address) {... */\n    tag_94:\n        /* \"TetherToken.sol\":8404:8411  address */\n      0x0\n        /* \"TetherToken.sol\":8430:8435  owner */\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n        /* \"TetherToken.sol\":8357:8442  function getOwner() external constant returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"TetherToken.sol\":1188:1208  address public owner */\n    tag_97:\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n      dup2\n      jump\t// out\n        /* \"TetherToken.sol\":9814:9834  string public symbol */\n    tag_100:\n      0x8\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x2\n      0x1\n      dup6\n      and\n      iszero\n      0x100\n      mul\n      not(0x0)\n      add\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      div\n      0x1f\n      dup2\n      add\n      dup5\n      swap1\n      div\n      dup5\n      mul\n      dup3\n      add\n      dup5\n      add\n      swap1\n      swap3\n      mstore\n      dup2\n      dup2\n      mstore\n      swap3\n      swap2\n      dup4\n      add\n      dup3\n      dup3\n      dup1\n      iszero\n      tag_138\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_139\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_138)\n        /* \"TetherToken.sol\":10590:10909  function transfer(address _to, uint _value) public whenNotPaused {... */\n    tag_107:\n        /* \"TetherToken.sol\":7553:7559  paused */\n      sload(0x0)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n        /* \"TetherToken.sol\":7552:7559  !paused */\n      iszero\n        /* \"TetherToken.sol\":7544:7560  require(!paused) */\n      tag_196\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_196:\n        /* \"TetherToken.sol\":10688:10698  msg.sender */\n      caller\n        /* \"TetherToken.sol\":10674:10699  isBlackListed[msg.sender] */\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"TetherToken.sol\":10674:10687  isBlackListed */\n      0x6\n        /* \"TetherToken.sol\":10674:10699  isBlackListed[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"TetherToken.sol\":10673:10699  !isBlackListed[msg.sender] */\n      iszero\n        /* \"TetherToken.sol\":10665:10700  require(!isBlackListed[msg.sender]) */\n      tag_198\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_198:\n        /* \"TetherToken.sol\":10714:10724  deprecated */\n      sload(0xa)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n        /* \"TetherToken.sol\":10710:10903  if (deprecated) {... */\n      iszero\n      tag_199\n      jumpi\n        /* \"TetherToken.sol\":10769:10784  upgradedAddress */\n      sload(0xa)\n        /* \"TetherToken.sol\":10747:10827  UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value) */\n      0x40\n      dup1\n      mload\n      0x6e18980a00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"TetherToken.sol\":10803:10813  msg.sender */\n      caller\n        /* \"TetherToken.sol\":10747:10827  UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value) */\n      0x4\n      dup3\n      add\n      mstore\n      sub(exp(0x2, 0xa0), 0x1)\n      dup6\n      dup2\n      and\n      0x24\n      dup4\n      add\n      mstore\n      0x44\n      dup3\n      add\n      dup6\n      swap1\n      mstore\n      swap2\n      mload\n        /* \"TetherToken.sol\":10769:10784  upgradedAddress */\n      swap2\n      swap1\n      swap3\n      and\n      swap2\n        /* \"TetherToken.sol\":10747:10802  UpgradedStandardToken(upgradedAddress).transferByLegacy */\n      0x6e18980a\n      swap2\n        /* \"TetherToken.sol\":10747:10827  UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value) */\n      0x64\n      dup1\n      dup4\n      add\n      swap3\n        /* \"TetherToken.sol\":10769:10784  upgradedAddress */\n      0x0\n      swap3\n        /* \"TetherToken.sol\":10747:10827  UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value) */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"TetherToken.sol\":10769:10784  upgradedAddress */\n      dup4\n      dup8\n        /* \"TetherToken.sol\":10747:10827  UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_200\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_200:\n        /* \"TetherToken.sol\":10747:10827  UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_201\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_201:\n        /* \"TetherToken.sol\":10747:10827  UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value) */\n      pop\n      pop\n      pop\n      pop\n        /* \"TetherToken.sol\":10740:10827  return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value) */\n      jump(tag_203)\n        /* \"TetherToken.sol\":10710:10903  if (deprecated) {... */\n    tag_199:\n        /* \"TetherToken.sol\":10865:10892  super.transfer(_to, _value) */\n      tag_203\n        /* \"TetherToken.sol\":10880:10883  _to */\n      dup3\n        /* \"TetherToken.sol\":10885:10891  _value */\n      dup3\n        /* \"TetherToken.sol\":10865:10879  super.transfer */\n      tag_204\n        /* \"TetherToken.sol\":10865:10892  super.transfer(_to, _value) */\n      jump\t// in\n    tag_203:\n        /* \"TetherToken.sol\":10590:10909  function transfer(address _to, uint _value) public whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"TetherToken.sol\":13805:14183  function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {... */\n    tag_110:\n        /* \"TetherToken.sol\":1546:1551  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n        /* \"TetherToken.sol\":1532:1542  msg.sender */\n      caller\n        /* \"TetherToken.sol\":1532:1551  msg.sender == owner */\n      eq\n        /* \"TetherToken.sol\":1524:1552  require(msg.sender == owner) */\n      tag_206\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_206:\n        /* \"TetherToken.sol\":14001:14003  20 */\n      0x14\n        /* \"TetherToken.sol\":13984:14003  newBasisPoints < 20 */\n      dup3\n      lt\n        /* \"TetherToken.sol\":13976:14004  require(newBasisPoints < 20) */\n      tag_208\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_208:\n        /* \"TetherToken.sol\":14034:14036  50 */\n      0x32\n        /* \"TetherToken.sol\":14022:14036  newMaxFee < 50 */\n      dup2\n      lt\n        /* \"TetherToken.sol\":14014:14037  require(newMaxFee < 50) */\n      tag_209\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_209:\n        /* \"TetherToken.sol\":14048:14063  basisPointsRate */\n      0x3\n        /* \"TetherToken.sol\":14048:14080  basisPointsRate = newBasisPoints */\n      dup3\n      swap1\n      sstore\n        /* \"TetherToken.sol\":14121:14129  decimals */\n      sload(0x9)\n        /* \"TetherToken.sol\":14103:14130  newMaxFee.mul(10**decimals) */\n      tag_210\n      swap1\n        /* \"TetherToken.sol\":14103:14112  newMaxFee */\n      dup3\n      swap1\n        /* \"TetherToken.sol\":14117:14119  10 */\n      0xa\n        /* \"TetherToken.sol\":14117:14129  10**decimals */\n      exp\n        /* \"TetherToken.sol\":14103:14130  newMaxFee.mul(10**decimals) */\n      0xffffffff\n        /* \"TetherToken.sol\":14103:14116  newMaxFee.mul */\n      tag_211\n        /* \"TetherToken.sol\":14103:14130  newMaxFee.mul(10**decimals) */\n      and\n      jump\t// in\n    tag_210:\n        /* \"TetherToken.sol\":14090:14100  maximumFee */\n      0x4\n        /* \"TetherToken.sol\":14090:14130  maximumFee = newMaxFee.mul(10**decimals) */\n      dup2\n      swap1\n      sstore\n        /* \"TetherToken.sol\":14148:14163  basisPointsRate */\n      sload(0x3)\n        /* \"TetherToken.sol\":14141:14176  Params(basisPointsRate, maximumFee) */\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      dup2\n      mload\n      0xb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e\n      swap3\n      swap2\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log1\n        /* \"TetherToken.sol\":13805:14183  function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"TetherToken.sol\":13086:13345  function issue(uint amount) public onlyOwner {... */\n    tag_113:\n        /* \"TetherToken.sol\":1546:1551  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n        /* \"TetherToken.sol\":1532:1542  msg.sender */\n      caller\n        /* \"TetherToken.sol\":1532:1551  msg.sender == owner */\n      eq\n        /* \"TetherToken.sol\":1524:1552  require(msg.sender == owner) */\n      tag_213\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_213:\n        /* \"TetherToken.sol\":13173:13185  _totalSupply */\n      sload(0x1)\n        /* \"TetherToken.sol\":13149:13170  _totalSupply + amount */\n      dup2\n      dup2\n      add\n        /* \"TetherToken.sol\":13149:13185  _totalSupply + amount > _totalSupply */\n      gt\n        /* \"TetherToken.sol\":13141:13186  require(_totalSupply + amount > _totalSupply) */\n      tag_215\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_215:\n        /* \"TetherToken.sol\":13231:13246  balances[owner] */\n      0x0\n        /* \"TetherToken.sol\":13240:13245  owner */\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n        /* \"TetherToken.sol\":13231:13246  balances[owner] */\n      dup2\n      mstore\n        /* \"TetherToken.sol\":13231:13239  balances */\n      0x2\n        /* \"TetherToken.sol\":13231:13246  balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"TetherToken.sol\":13204:13228  balances[owner] + amount */\n      dup2\n      dup2\n      add\n        /* \"TetherToken.sol\":13204:13246  balances[owner] + amount > balances[owner] */\n      gt\n        /* \"TetherToken.sol\":13196:13247  require(balances[owner] + amount > balances[owner]) */\n      tag_216\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_216:\n        /* \"TetherToken.sol\":13258:13273  balances[owner] */\n      0x0\n        /* \"TetherToken.sol\":13267:13272  owner */\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n        /* \"TetherToken.sol\":13258:13273  balances[owner] */\n      dup2\n      mstore\n        /* \"TetherToken.sol\":13258:13266  balances */\n      0x2\n        /* \"TetherToken.sol\":13258:13273  balances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"TetherToken.sol\":13258:13283  balances[owner] += amount */\n      dup1\n      sload\n      dup5\n      add\n      swap1\n      sstore\n        /* \"TetherToken.sol\":13267:13272  owner */\n      0x1\n        /* \"TetherToken.sol\":13293:13315  _totalSupply += amount */\n      dup1\n      sload\n      dup5\n      add\n      swap1\n      sstore\n        /* \"TetherToken.sol\":13325:13338  Issue(amount) */\n      dup2\n      mload\n      dup4\n      dup2\n      mstore\n      swap2\n      mload\n      0xcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log1\n        /* \"TetherToken.sol\":13086:13345  function issue(uint amount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"TetherToken.sol\":13569:13799  function redeem(uint amount) public onlyOwner {... */\n    tag_116:\n        /* \"TetherToken.sol\":1546:1551  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n        /* \"TetherToken.sol\":1532:1542  msg.sender */\n      caller\n        /* \"TetherToken.sol\":1532:1551  msg.sender == owner */\n      eq\n        /* \"TetherToken.sol\":1524:1552  require(msg.sender == owner) */\n      tag_218\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_218:\n        /* \"TetherToken.sol\":13633:13645  _totalSupply */\n      sload(0x1)\n        /* \"TetherToken.sol\":13633:13655  _totalSupply >= amount */\n      dup2\n      gt\n      iszero\n        /* \"TetherToken.sol\":13625:13656  require(_totalSupply >= amount) */\n      tag_220\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_220:\n        /* \"TetherToken.sol\":13674:13689  balances[owner] */\n      0x0\n        /* \"TetherToken.sol\":13683:13688  owner */\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n        /* \"TetherToken.sol\":13674:13689  balances[owner] */\n      dup2\n      mstore\n        /* \"TetherToken.sol\":13674:13682  balances */\n      0x2\n        /* \"TetherToken.sol\":13674:13689  balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"TetherToken.sol\":13674:13699  balances[owner] >= amount */\n      dup2\n      gt\n      iszero\n        /* \"TetherToken.sol\":13666:13700  require(balances[owner] >= amount) */\n      tag_221\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_221:\n        /* \"TetherToken.sol\":13711:13723  _totalSupply */\n      0x1\n        /* \"TetherToken.sol\":13711:13733  _totalSupply -= amount */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"TetherToken.sol\":13711:13723  _totalSupply */\n      0x0\n        /* \"TetherToken.sol\":13752:13757  owner */\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n        /* \"TetherToken.sol\":13743:13758  balances[owner] */\n      dup2\n      mstore\n        /* \"TetherToken.sol\":13743:13751  balances */\n      0x2\n        /* \"TetherToken.sol\":13743:13758  balances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"TetherToken.sol\":13743:13768  balances[owner] -= amount */\n      dup1\n      sload\n      dup5\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"TetherToken.sol\":13778:13792  Redeem(amount) */\n      dup2\n      mload\n      dup4\n      dup2\n      mstore\n      swap2\n      mload\n      0x702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a44\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log1\n        /* \"TetherToken.sol\":13569:13799  function redeem(uint amount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"TetherToken.sol\":12126:12413  function allowance(address _owner, address _spender) public constant returns (uint remaining) {... */\n    tag_119:\n        /* \"TetherToken.sol\":12234:12244  deprecated */\n      sload(0xa)\n        /* \"TetherToken.sol\":12204:12218  uint remaining */\n      0x0\n      swap1\n      exp(0x2, 0xa0)\n        /* \"TetherToken.sol\":12234:12244  deprecated */\n      swap1\n      div\n      0xff\n      and\n        /* \"TetherToken.sol\":12230:12407  if (deprecated) {... */\n      iszero\n      tag_223\n      jumpi\n        /* \"TetherToken.sol\":12281:12296  upgradedAddress */\n      sload(0xa)\n        /* \"TetherToken.sol\":12267:12325  StandardToken(upgradedAddress).allowance(_owner, _spender) */\n      0x40\n      dup1\n      mload\n      0xdd62ed3e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(exp(0x2, 0xa0), 0x1)\n      dup7\n      dup2\n      and\n      0x4\n      dup4\n      add\n      mstore\n      dup6\n      dup2\n      and\n      0x24\n      dup4\n      add\n      mstore\n      swap2\n      mload\n        /* \"TetherToken.sol\":12281:12296  upgradedAddress */\n      swap2\n      swap1\n      swap3\n      and\n      swap2\n        /* \"TetherToken.sol\":12267:12307  StandardToken(upgradedAddress).allowance */\n      0xdd62ed3e\n      swap2\n        /* \"TetherToken.sol\":12267:12325  StandardToken(upgradedAddress).allowance(_owner, _spender) */\n      0x44\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"TetherToken.sol\":12281:12296  upgradedAddress */\n      0x0\n      dup8\n        /* \"TetherToken.sol\":12267:12325  StandardToken(upgradedAddress).allowance(_owner, _spender) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_224\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_224:\n        /* \"TetherToken.sol\":12267:12325  StandardToken(upgradedAddress).allowance(_owner, _spender) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_225\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_225:\n        /* \"TetherToken.sol\":12267:12325  StandardToken(upgradedAddress).allowance(_owner, _spender) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_226\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_226:\n      pop\n        /* \"TetherToken.sol\":12267:12325  StandardToken(upgradedAddress).allowance(_owner, _spender) */\n      mload\n      swap1\n      pop\n        /* \"TetherToken.sol\":12260:12325  return StandardToken(upgradedAddress).allowance(_owner, _spender) */\n      jump(tag_227)\n        /* \"TetherToken.sol\":12230:12407  if (deprecated) {... */\n    tag_223:\n        /* \"TetherToken.sol\":12363:12396  super.allowance(_owner, _spender) */\n      tag_228\n        /* \"TetherToken.sol\":12379:12385  _owner */\n      dup4\n        /* \"TetherToken.sol\":12387:12395  _spender */\n      dup4\n        /* \"TetherToken.sol\":12363:12378  super.allowance */\n      tag_229\n        /* \"TetherToken.sol\":12363:12396  super.allowance(_owner, _spender) */\n      jump\t// in\n    tag_228:\n        /* \"TetherToken.sol\":12356:12396  return super.allowance(_owner, _spender) */\n      swap1\n      pop\n        /* \"TetherToken.sol\":12230:12407  if (deprecated) {... */\n    tag_227:\n        /* \"TetherToken.sol\":12126:12413  function allowance(address _owner, address _spender) public constant returns (uint remaining) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"TetherToken.sol\":3041:3072  uint public basisPointsRate = 0 */\n    tag_122:\n      sload(0x3)\n      dup2\n      jump\t// out\n        /* \"TetherToken.sol\":8448:8494  mapping (address => bool) public isBlackListed */\n    tag_125:\n      mstore(0x20, 0x6)\n      0x0\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"TetherToken.sol\":8649:8806  function removeBlackList (address _clearedUser) public onlyOwner {... */\n    tag_128:\n        /* \"TetherToken.sol\":1546:1551  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n        /* \"TetherToken.sol\":1532:1542  msg.sender */\n      caller\n        /* \"TetherToken.sol\":1532:1551  msg.sender == owner */\n      eq\n        /* \"TetherToken.sol\":1524:1552  require(msg.sender == owner) */\n      tag_231\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_231:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"TetherToken.sol\":8724:8751  isBlackListed[_clearedUser] */\n      dup2\n      and\n        /* \"TetherToken.sol\":8754:8759  false */\n      0x0\n        /* \"TetherToken.sol\":8724:8751  isBlackListed[_clearedUser] */\n      dup2\n      dup2\n      mstore\n        /* \"TetherToken.sol\":8724:8737  isBlackListed */\n      0x6\n        /* \"TetherToken.sol\":8724:8751  isBlackListed[_clearedUser] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"TetherToken.sol\":8724:8759  isBlackListed[_clearedUser] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"TetherToken.sol\":8769:8799  RemovedBlackList(_clearedUser) */\n      dup2\n      mload\n      swap3\n      dup4\n      mstore\n      swap1\n      mload\n      0xd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log1\n        /* \"TetherToken.sol\":8649:8806  function removeBlackList (address _clearedUser) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"TetherToken.sol\":4720:4762  uint public constant MAX_UINT = 2**256 - 1 */\n    tag_131:\n      not(0x0)\n      dup2\n      jump\t// out\n        /* \"TetherToken.sol\":1738:1885  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_134:\n        /* \"TetherToken.sol\":1546:1551  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n        /* \"TetherToken.sol\":1532:1542  msg.sender */\n      caller\n        /* \"TetherToken.sol\":1532:1551  msg.sender == owner */\n      eq\n        /* \"TetherToken.sol\":1524:1552  require(msg.sender == owner) */\n      tag_234\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_234:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"TetherToken.sol\":1814:1836  newOwner != address(0) */\n      dup2\n      and\n      iszero\n        /* \"TetherToken.sol\":1810:1879  if (newOwner != address(0)) {... */\n      tag_236\n      jumpi\n        /* \"TetherToken.sol\":1852:1857  owner */\n      0x0\n        /* \"TetherToken.sol\":1852:1868  owner = newOwner */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(exp(0x2, 0xa0), 0x1)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"TetherToken.sol\":1810:1879  if (newOwner != address(0)) {... */\n    tag_236:\n        /* \"TetherToken.sol\":1738:1885  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"TetherToken.sol\":8812:9130  function destroyBlackFunds (address _blackListedUser) public onlyOwner {... */\n    tag_137:\n        /* \"TetherToken.sol\":8943:8958  uint dirtyFunds */\n      0x0\n        /* \"TetherToken.sol\":1546:1551  owner */\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n        /* \"TetherToken.sol\":1532:1542  msg.sender */\n      caller\n        /* \"TetherToken.sol\":1532:1551  msg.sender == owner */\n      eq\n        /* \"TetherToken.sol\":1524:1552  require(msg.sender == owner) */\n      tag_238\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_238:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"TetherToken.sol\":8901:8932  isBlackListed[_blackListedUser] */\n      dup3\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"TetherToken.sol\":8901:8914  isBlackListed */\n      0x6\n        /* \"TetherToken.sol\":8901:8932  isBlackListed[_blackListedUser] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"TetherToken.sol\":8893:8933  require(isBlackListed[_blackListedUser]) */\n      iszero\n      iszero\n      tag_240\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_240:\n        /* \"TetherToken.sol\":8961:8988  balanceOf(_blackListedUser) */\n      tag_241\n        /* \"TetherToken.sol\":8971:8987  _blackListedUser */\n      dup3\n        /* \"TetherToken.sol\":8961:8970  balanceOf */\n      tag_88\n        /* \"TetherToken.sol\":8961:8988  balanceOf(_blackListedUser) */\n      jump\t// in\n    tag_241:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"TetherToken.sol\":8998:9024  balances[_blackListedUser] */\n      dup4\n      and\n        /* \"TetherToken.sol\":9027:9028  0 */\n      0x0\n        /* \"TetherToken.sol\":8998:9024  balances[_blackListedUser] */\n      dup2\n      dup2\n      mstore\n        /* \"TetherToken.sol\":8998:9006  balances */\n      0x2\n        /* \"TetherToken.sol\":8998:9024  balances[_blackListedUser] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"TetherToken.sol\":8998:9028  balances[_blackListedUser] = 0 */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"TetherToken.sol\":9038:9050  _totalSupply */\n      0x1\n        /* \"TetherToken.sol\":9038:9064  _totalSupply -= dirtyFunds */\n      dup1\n      sload\n      dup6\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"TetherToken.sol\":9074:9123  DestroyedBlackFunds(_blackListedUser, dirtyFunds) */\n      dup2\n      mload\n      swap3\n      dup4\n      mstore\n      dup3\n      add\n      dup4\n      swap1\n      mstore\n      dup1\n      mload\n        /* \"TetherToken.sol\":8943:8988  uint dirtyFunds = balanceOf(_blackListedUser) */\n      swap3\n      swap4\n      pop\n        /* \"TetherToken.sol\":9074:9123  DestroyedBlackFunds(_blackListedUser, dirtyFunds) */\n      0x61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c6\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log1\n        /* \"TetherToken.sol\":8812:9130  function destroyBlackFunds (address _blackListedUser) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"TetherToken.sol\":6164:6727  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {... */\n    tag_152:\n        /* \"TetherToken.sol\":6235:6241  2 * 32 */\n      0x40\n        /* \"TetherToken.sol\":3251:3259  size + 4 */\n      0x44\n        /* \"TetherToken.sol\":3233:3241  msg.data */\n      calldatasize\n        /* \"TetherToken.sol\":3233:3259  msg.data.length < size + 4 */\n      lt\n        /* \"TetherToken.sol\":3231:3260  !(msg.data.length < size + 4) */\n      iszero\n        /* \"TetherToken.sol\":3223:3261  require(!(msg.data.length < size + 4)) */\n      tag_243\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_243:\n        /* \"TetherToken.sol\":6569:6580  _value != 0 */\n      dup2\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"TetherToken.sol\":6568:6621  (_value != 0) && (allowed[msg.sender][_spender] != 0) */\n      tag_245\n      jumpi\n      pop\n        /* \"TetherToken.sol\":6594:6604  msg.sender */\n      caller\n        /* \"TetherToken.sol\":6586:6605  allowed[msg.sender] */\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"TetherToken.sol\":6586:6593  allowed */\n      0x5\n        /* \"TetherToken.sol\":6586:6605  allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"TetherToken.sol\":6586:6615  allowed[msg.sender][_spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"TetherToken.sol\":6586:6620  allowed[msg.sender][_spender] != 0 */\n      iszero\n      iszero\n        /* \"TetherToken.sol\":6568:6621  (_value != 0) && (allowed[msg.sender][_spender] != 0) */\n    tag_245:\n        /* \"TetherToken.sol\":6566:6622  !((_value != 0) && (allowed[msg.sender][_spender] != 0)) */\n      iszero\n        /* \"TetherToken.sol\":6558:6623  require(!((_value != 0) && (allowed[msg.sender][_spender] != 0))) */\n      tag_246\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_246:\n        /* \"TetherToken.sol\":6642:6652  msg.sender */\n      caller\n        /* \"TetherToken.sol\":6634:6653  allowed[msg.sender] */\n      0x0\n      dup2\n      dup2\n      mstore\n        /* \"TetherToken.sol\":6634:6641  allowed */\n      0x5\n        /* \"TetherToken.sol\":6634:6653  allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"TetherToken.sol\":6634:6663  allowed[msg.sender][_spender] */\n      dup9\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"TetherToken.sol\":6634:6672  allowed[msg.sender][_spender] = _value */\n      dup7\n      swap1\n      sstore\n        /* \"TetherToken.sol\":6682:6720  Approval(msg.sender, _spender, _value) */\n      dup1\n      mload\n      dup7\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"TetherToken.sol\":6634:6663  allowed[msg.sender][_spender] */\n      swap3\n      swap4\n        /* \"TetherToken.sol\":6642:6652  msg.sender */\n      swap3\n        /* \"TetherToken.sol\":6682:6720  Approval(msg.sender, _spender, _value) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      swap2\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"TetherToken.sol\":6164:6727  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TetherToken.sol\":5044:5924  function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {... */\n    tag_171:\n        /* \"TetherToken.sol\":5148:5162  var _allowance */\n      0x0\n      dup1\n      dup1\n        /* \"TetherToken.sol\":5130:5136  3 * 32 */\n      0x60\n        /* \"TetherToken.sol\":3251:3259  size + 4 */\n      0x64\n        /* \"TetherToken.sol\":3233:3241  msg.data */\n      calldatasize\n        /* \"TetherToken.sol\":3233:3259  msg.data.length < size + 4 */\n      lt\n        /* \"TetherToken.sol\":3231:3260  !(msg.data.length < size + 4) */\n      iszero\n        /* \"TetherToken.sol\":3223:3261  require(!(msg.data.length < size + 4)) */\n      tag_248\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_248:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"TetherToken.sol\":5165:5179  allowed[_from] */\n      dup8\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"TetherToken.sol\":5165:5172  allowed */\n      0x5\n        /* \"TetherToken.sol\":5165:5179  allowed[_from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"TetherToken.sol\":5180:5190  msg.sender */\n      caller\n        /* \"TetherToken.sol\":5165:5191  allowed[_from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"TetherToken.sol\":5380:5395  basisPointsRate */\n      sload(0x3)\n        /* \"TetherToken.sol\":5165:5191  allowed[_from][msg.sender] */\n      swap1\n      swap5\n      pop\n        /* \"TetherToken.sol\":5368:5408  (_value.mul(basisPointsRate)).div(10000) */\n      tag_250\n      swap1\n        /* \"TetherToken.sol\":5402:5407  10000 */\n      0x2710\n      swap1\n        /* \"TetherToken.sol\":5369:5396  _value.mul(basisPointsRate) */\n      tag_251\n      swap1\n        /* \"TetherToken.sol\":5369:5375  _value */\n      dup9\n      swap1\n        /* \"TetherToken.sol\":5369:5396  _value.mul(basisPointsRate) */\n      0xffffffff\n        /* \"TetherToken.sol\":5369:5379  _value.mul */\n      tag_211\n        /* \"TetherToken.sol\":5369:5396  _value.mul(basisPointsRate) */\n      and\n      jump\t// in\n    tag_251:\n        /* \"TetherToken.sol\":5368:5401  (_value.mul(basisPointsRate)).div */\n      swap1\n        /* \"TetherToken.sol\":5368:5408  (_value.mul(basisPointsRate)).div(10000) */\n      0xffffffff\n        /* \"TetherToken.sol\":5368:5401  (_value.mul(basisPointsRate)).div */\n      tag_252\n        /* \"TetherToken.sol\":5368:5408  (_value.mul(basisPointsRate)).div(10000) */\n      and\n      jump\t// in\n    tag_250:\n        /* \"TetherToken.sol\":5357:5408  uint fee = (_value.mul(basisPointsRate)).div(10000) */\n      swap3\n      pop\n        /* \"TetherToken.sol\":5428:5438  maximumFee */\n      sload(0x4)\n        /* \"TetherToken.sol\":5422:5425  fee */\n      dup4\n        /* \"TetherToken.sol\":5422:5438  fee > maximumFee */\n      gt\n        /* \"TetherToken.sol\":5418:5481  if (fee > maximumFee) {... */\n      iszero\n      tag_253\n      jumpi\n        /* \"TetherToken.sol\":5460:5470  maximumFee */\n      sload(0x4)\n        /* \"TetherToken.sol\":5454:5470  fee = maximumFee */\n      swap3\n      pop\n        /* \"TetherToken.sol\":5418:5481  if (fee > maximumFee) {... */\n    tag_253:\n      not(0x0)\n        /* \"TetherToken.sol\":5494:5504  _allowance */\n      dup5\n        /* \"TetherToken.sol\":5494:5515  _allowance < MAX_UINT */\n      lt\n        /* \"TetherToken.sol\":5490:5593  if (_allowance < MAX_UINT) {... */\n      iszero\n      tag_254\n      jumpi\n        /* \"TetherToken.sol\":5560:5582  _allowance.sub(_value) */\n      tag_255\n        /* \"TetherToken.sol\":5560:5570  _allowance */\n      dup5\n        /* \"TetherToken.sol\":5575:5581  _value */\n      dup7\n        /* \"TetherToken.sol\":5560:5582  _allowance.sub(_value) */\n      0xffffffff\n        /* \"TetherToken.sol\":5560:5574  _allowance.sub */\n      tag_256\n        /* \"TetherToken.sol\":5560:5582  _allowance.sub(_value) */\n      and\n      jump\t// in\n    tag_255:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"TetherToken.sol\":5531:5545  allowed[_from] */\n      dup9\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"TetherToken.sol\":5531:5538  allowed */\n      0x5\n        /* \"TetherToken.sol\":5531:5545  allowed[_from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"TetherToken.sol\":5546:5556  msg.sender */\n      caller\n        /* \"TetherToken.sol\":5531:5557  allowed[_from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"TetherToken.sol\":5531:5582  allowed[_from][msg.sender] = _allowance.sub(_value) */\n      sstore\n        /* \"TetherToken.sol\":5490:5593  if (_allowance < MAX_UINT) {... */\n    tag_254:\n        /* \"TetherToken.sol\":5620:5635  _value.sub(fee) */\n      tag_257\n        /* \"TetherToken.sol\":5620:5626  _value */\n      dup6\n        /* \"TetherToken.sol\":5631:5634  fee */\n      dup5\n        /* \"TetherToken.sol\":5620:5635  _value.sub(fee) */\n      0xffffffff\n        /* \"TetherToken.sol\":5620:5630  _value.sub */\n      tag_256\n        /* \"TetherToken.sol\":5620:5635  _value.sub(fee) */\n      and\n      jump\t// in\n    tag_257:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"TetherToken.sol\":5663:5678  balances[_from] */\n      dup9\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"TetherToken.sol\":5663:5671  balances */\n      0x2\n        /* \"TetherToken.sol\":5663:5678  balances[_from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"TetherToken.sol\":5602:5635  uint sendAmount = _value.sub(fee) */\n      swap1\n      swap3\n      pop\n        /* \"TetherToken.sol\":5663:5690  balances[_from].sub(_value) */\n      tag_258\n      swap1\n        /* \"TetherToken.sol\":5683:5689  _value */\n      dup7\n        /* \"TetherToken.sol\":5663:5690  balances[_from].sub(_value) */\n      0xffffffff\n        /* \"TetherToken.sol\":5663:5682  balances[_from].sub */\n      tag_256\n        /* \"TetherToken.sol\":5663:5690  balances[_from].sub(_value) */\n      and\n      jump\t// in\n    tag_258:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"TetherToken.sol\":5645:5660  balances[_from] */\n      dup1\n      dup10\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"TetherToken.sol\":5645:5653  balances */\n      0x2\n        /* \"TetherToken.sol\":5645:5660  balances[_from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"TetherToken.sol\":5645:5690  balances[_from] = balances[_from].sub(_value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"TetherToken.sol\":5716:5729  balances[_to] */\n      swap1\n      dup9\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"TetherToken.sol\":5716:5745  balances[_to].add(sendAmount) */\n      tag_259\n      swap1\n        /* \"TetherToken.sol\":5734:5744  sendAmount */\n      dup4\n        /* \"TetherToken.sol\":5716:5745  balances[_to].add(sendAmount) */\n      0xffffffff\n        /* \"TetherToken.sol\":5716:5733  balances[_to].add */\n      tag_260\n        /* \"TetherToken.sol\":5716:5745  balances[_to].add(sendAmount) */\n      and\n      jump\t// in\n    tag_259:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"TetherToken.sol\":5700:5713  balances[_to] */\n      dup8\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"TetherToken.sol\":5700:5708  balances */\n      0x2\n        /* \"TetherToken.sol\":5700:5713  balances[_to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"TetherToken.sol\":5700:5745  balances[_to] = balances[_to].add(sendAmount) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"TetherToken.sol\":5759:5766  fee > 0 */\n      dup4\n      gt\n        /* \"TetherToken.sol\":5755:5876  if (fee > 0) {... */\n      iszero\n      tag_261\n      jumpi\n        /* \"TetherToken.sol\":5800:5815  balances[owner] */\n      0x0\n        /* \"TetherToken.sol\":5809:5814  owner */\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n        /* \"TetherToken.sol\":5800:5815  balances[owner] */\n      dup2\n      mstore\n        /* \"TetherToken.sol\":5800:5808  balances */\n      0x2\n        /* \"TetherToken.sol\":5800:5815  balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"TetherToken.sol\":5800:5824  balances[owner].add(fee) */\n      tag_262\n      swap1\n        /* \"TetherToken.sol\":5820:5823  fee */\n      dup5\n        /* \"TetherToken.sol\":5800:5824  balances[owner].add(fee) */\n      0xffffffff\n        /* \"TetherToken.sol\":5800:5819  balances[owner].add */\n      tag_260\n        /* \"TetherToken.sol\":5800:5824  balances[owner].add(fee) */\n      and\n      jump\t// in\n    tag_262:\n        /* \"TetherToken.sol\":5782:5797  balances[owner] */\n      0x0\n        /* \"TetherToken.sol\":5791:5796  owner */\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      dup2\n      and\n        /* \"TetherToken.sol\":5782:5797  balances[owner] */\n      dup3\n      mstore\n        /* \"TetherToken.sol\":5782:5790  balances */\n      0x2\n        /* \"TetherToken.sol\":5782:5797  balances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"TetherToken.sol\":5782:5824  balances[owner] = balances[owner].add(fee) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"TetherToken.sol\":5854:5859  owner */\n      swap2\n      sload\n        /* \"TetherToken.sol\":5838:5865  Transfer(_from, owner, fee) */\n      dup4\n      mload\n      dup8\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"TetherToken.sol\":5854:5859  owner */\n      swap1\n      dup3\n      and\n      swap4\n        /* \"TetherToken.sol\":5838:5865  Transfer(_from, owner, fee) */\n      swap2\n      dup12\n      and\n      swap3\n      0x0\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap3\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"TetherToken.sol\":5755:5876  if (fee > 0) {... */\n    tag_261:\n        /* \"TetherToken.sol\":5901:5904  _to */\n      dup6\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"TetherToken.sol\":5885:5917  Transfer(_from, _to, sendAmount) */\n      and\n        /* \"TetherToken.sol\":5894:5899  _from */\n      dup8\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"TetherToken.sol\":5885:5917  Transfer(_from, _to, sendAmount) */\n      and\n      0x0\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"TetherToken.sol\":5906:5916  sendAmount */\n      dup5\n        /* \"TetherToken.sol\":5885:5917  Transfer(_from, _to, sendAmount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"TetherToken.sol\":5044:5924  function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TetherToken.sol\":4216:4330  function balanceOf(address _owner) public constant returns (uint balance) {... */\n    tag_185:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"TetherToken.sol\":4307:4323  balances[_owner] */\n      and\n        /* \"TetherToken.sol\":4276:4288  uint balance */\n      0x0\n        /* \"TetherToken.sol\":4307:4323  balances[_owner] */\n      swap1\n      dup2\n      mstore\n        /* \"TetherToken.sol\":4307:4315  balances */\n      0x2\n        /* \"TetherToken.sol\":4307:4323  balances[_owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"TetherToken.sol\":4216:4330  function balanceOf(address _owner) public constant returns (uint balance) {... */\n      jump\t// out\n        /* \"TetherToken.sol\":3445:4005  function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {... */\n    tag_204:\n        /* \"TetherToken.sol\":3530:3538  uint fee */\n      0x0\n      dup1\n        /* \"TetherToken.sol\":3512:3518  2 * 32 */\n      0x40\n        /* \"TetherToken.sol\":3251:3259  size + 4 */\n      0x44\n        /* \"TetherToken.sol\":3233:3241  msg.data */\n      calldatasize\n        /* \"TetherToken.sol\":3233:3259  msg.data.length < size + 4 */\n      lt\n        /* \"TetherToken.sol\":3231:3260  !(msg.data.length < size + 4) */\n      iszero\n        /* \"TetherToken.sol\":3223:3261  require(!(msg.data.length < size + 4)) */\n      tag_265\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_265:\n        /* \"TetherToken.sol\":3541:3581  (_value.mul(basisPointsRate)).div(10000) */\n      tag_267\n        /* \"TetherToken.sol\":3575:3580  10000 */\n      0x2710\n        /* \"TetherToken.sol\":3542:3569  _value.mul(basisPointsRate) */\n      tag_251\n        /* \"TetherToken.sol\":3553:3568  basisPointsRate */\n      sload(0x3)\n        /* \"TetherToken.sol\":3542:3548  _value */\n      dup8\n        /* \"TetherToken.sol\":3542:3552  _value.mul */\n      tag_211\n      swap1\n        /* \"TetherToken.sol\":3542:3569  _value.mul(basisPointsRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"TetherToken.sol\":3541:3581  (_value.mul(basisPointsRate)).div(10000) */\n    tag_267:\n        /* \"TetherToken.sol\":3530:3581  uint fee = (_value.mul(basisPointsRate)).div(10000) */\n      swap3\n      pop\n        /* \"TetherToken.sol\":3601:3611  maximumFee */\n      sload(0x4)\n        /* \"TetherToken.sol\":3595:3598  fee */\n      dup4\n        /* \"TetherToken.sol\":3595:3611  fee > maximumFee */\n      gt\n        /* \"TetherToken.sol\":3591:3654  if (fee > maximumFee) {... */\n      iszero\n      tag_269\n      jumpi\n        /* \"TetherToken.sol\":3633:3643  maximumFee */\n      sload(0x4)\n        /* \"TetherToken.sol\":3627:3643  fee = maximumFee */\n      swap3\n      pop\n        /* \"TetherToken.sol\":3591:3654  if (fee > maximumFee) {... */\n    tag_269:\n        /* \"TetherToken.sol\":3681:3696  _value.sub(fee) */\n      tag_270\n        /* \"TetherToken.sol\":3681:3687  _value */\n      dup5\n        /* \"TetherToken.sol\":3692:3695  fee */\n      dup5\n        /* \"TetherToken.sol\":3681:3696  _value.sub(fee) */\n      0xffffffff\n        /* \"TetherToken.sol\":3681:3691  _value.sub */\n      tag_256\n        /* \"TetherToken.sol\":3681:3696  _value.sub(fee) */\n      and\n      jump\t// in\n    tag_270:\n        /* \"TetherToken.sol\":3738:3748  msg.sender */\n      caller\n        /* \"TetherToken.sol\":3729:3749  balances[msg.sender] */\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"TetherToken.sol\":3729:3737  balances */\n      0x2\n        /* \"TetherToken.sol\":3729:3749  balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"TetherToken.sol\":3663:3696  uint sendAmount = _value.sub(fee) */\n      swap1\n      swap3\n      pop\n        /* \"TetherToken.sol\":3729:3761  balances[msg.sender].sub(_value) */\n      tag_271\n      swap1\n        /* \"TetherToken.sol\":3754:3760  _value */\n      dup6\n        /* \"TetherToken.sol\":3729:3761  balances[msg.sender].sub(_value) */\n      0xffffffff\n        /* \"TetherToken.sol\":3729:3753  balances[msg.sender].sub */\n      tag_256\n        /* \"TetherToken.sol\":3729:3761  balances[msg.sender].sub(_value) */\n      and\n      jump\t// in\n    tag_271:\n        /* \"TetherToken.sol\":3715:3725  msg.sender */\n      caller\n        /* \"TetherToken.sol\":3706:3726  balances[msg.sender] */\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"TetherToken.sol\":3706:3714  balances */\n      0x2\n        /* \"TetherToken.sol\":3706:3726  balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"TetherToken.sol\":3706:3761  balances[msg.sender] = balances[msg.sender].sub(_value) */\n      swap3\n      swap1\n      swap3\n      sstore\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"TetherToken.sol\":3787:3800  balances[_to] */\n      dup8\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"TetherToken.sol\":3787:3816  balances[_to].add(sendAmount) */\n      tag_272\n      swap1\n        /* \"TetherToken.sol\":3805:3815  sendAmount */\n      dup4\n        /* \"TetherToken.sol\":3787:3816  balances[_to].add(sendAmount) */\n      0xffffffff\n        /* \"TetherToken.sol\":3787:3804  balances[_to].add */\n      tag_260\n        /* \"TetherToken.sol\":3787:3816  balances[_to].add(sendAmount) */\n      and\n      jump\t// in\n    tag_272:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"TetherToken.sol\":3771:3784  balances[_to] */\n      dup7\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"TetherToken.sol\":3771:3779  balances */\n      0x2\n        /* \"TetherToken.sol\":3771:3784  balances[_to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"TetherToken.sol\":3771:3816  balances[_to] = balances[_to].add(sendAmount) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"TetherToken.sol\":3830:3837  fee > 0 */\n      dup4\n      gt\n        /* \"TetherToken.sol\":3826:3952  if (fee > 0) {... */\n      iszero\n      tag_273\n      jumpi\n        /* \"TetherToken.sol\":3871:3886  balances[owner] */\n      0x0\n        /* \"TetherToken.sol\":3880:3885  owner */\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n        /* \"TetherToken.sol\":3871:3886  balances[owner] */\n      dup2\n      mstore\n        /* \"TetherToken.sol\":3871:3879  balances */\n      0x2\n        /* \"TetherToken.sol\":3871:3886  balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"TetherToken.sol\":3871:3895  balances[owner].add(fee) */\n      tag_274\n      swap1\n        /* \"TetherToken.sol\":3891:3894  fee */\n      dup5\n        /* \"TetherToken.sol\":3871:3895  balances[owner].add(fee) */\n      0xffffffff\n        /* \"TetherToken.sol\":3871:3890  balances[owner].add */\n      tag_260\n        /* \"TetherToken.sol\":3871:3895  balances[owner].add(fee) */\n      and\n      jump\t// in\n    tag_274:\n        /* \"TetherToken.sol\":3853:3868  balances[owner] */\n      0x0\n        /* \"TetherToken.sol\":3862:3867  owner */\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      dup2\n      and\n        /* \"TetherToken.sol\":3853:3868  balances[owner] */\n      dup3\n      mstore\n        /* \"TetherToken.sol\":3853:3861  balances */\n      0x2\n        /* \"TetherToken.sol\":3853:3868  balances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"TetherToken.sol\":3853:3895  balances[owner] = balances[owner].add(fee) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"TetherToken.sol\":3930:3935  owner */\n      swap2\n      sload\n        /* \"TetherToken.sol\":3909:3941  Transfer(msg.sender, owner, fee) */\n      dup4\n      mload\n      dup8\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"TetherToken.sol\":3930:3935  owner */\n      swap2\n      and\n      swap3\n        /* \"TetherToken.sol\":3918:3928  msg.sender */\n      caller\n      swap3\n      0x0\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"TetherToken.sol\":3909:3941  Transfer(msg.sender, owner, fee) */\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"TetherToken.sol\":3826:3952  if (fee > 0) {... */\n    tag_273:\n        /* \"TetherToken.sol\":3961:3998  Transfer(msg.sender, _to, sendAmount) */\n      0x40\n      dup1\n      mload\n      dup4\n      dup2\n      mstore\n      swap1\n      mload\n      sub(exp(0x2, 0xa0), 0x1)\n      dup8\n      and\n      swap2\n        /* \"TetherToken.sol\":3970:3980  msg.sender */\n      caller\n      swap2\n      0x0\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"TetherToken.sol\":3961:3998  Transfer(msg.sender, _to, sendAmount) */\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n        /* \"TetherToken.sol\":3445:4005  function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TetherToken.sol\":206:407  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_211:\n        /* \"TetherToken.sol\":264:271  uint256 */\n      0x0\n      dup1\n        /* \"TetherToken.sol\":287:293  a == 0 */\n      dup4\n      iszero\n        /* \"TetherToken.sol\":283:328  if (a == 0) {... */\n      iszero\n      tag_276\n      jumpi\n        /* \"TetherToken.sol\":316:317  0 */\n      0x0\n        /* \"TetherToken.sol\":309:317  return 0 */\n      swap2\n      pop\n      jump(tag_275)\n        /* \"TetherToken.sol\":283:328  if (a == 0) {... */\n    tag_276:\n      pop\n        /* \"TetherToken.sol\":349:354  a * b */\n      dup3\n      dup3\n      mul\n        /* \"TetherToken.sol\":353:354  b */\n      dup3\n        /* \"TetherToken.sol\":349:350  a */\n      dup5\n        /* \"TetherToken.sol\":349:354  a * b */\n      dup3\n        /* \"TetherToken.sol\":371:376  c / a */\n      dup2\n      iszero\n      iszero\n      tag_277\n      jumpi\n      invalid\n    tag_277:\n      div\n        /* \"TetherToken.sol\":371:381  c / a == b */\n      eq\n        /* \"TetherToken.sol\":364:382  assert(c / a == b) */\n      tag_278\n      jumpi\n      invalid\n    tag_278:\n        /* \"TetherToken.sol\":399:400  c */\n      dup1\n        /* \"TetherToken.sol\":392:400  return c */\n      swap2\n      pop\n        /* \"TetherToken.sol\":206:407  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_275:\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"TetherToken.sol\":7052:7195  function allowance(address _owner, address _spender) public constant returns (uint remaining) {... */\n    tag_229:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"TetherToken.sol\":7163:7178  allowed[_owner] */\n      swap2\n      dup3\n      and\n        /* \"TetherToken.sol\":7130:7144  uint remaining */\n      0x0\n        /* \"TetherToken.sol\":7163:7178  allowed[_owner] */\n      swap1\n      dup2\n      mstore\n        /* \"TetherToken.sol\":7163:7170  allowed */\n      0x5\n        /* \"TetherToken.sol\":7163:7178  allowed[_owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"TetherToken.sol\":7163:7188  allowed[_owner][_spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"TetherToken.sol\":7052:7195  function allowance(address _owner, address _spender) public constant returns (uint remaining) {... */\n      jump\t// out\n        /* \"TetherToken.sol\":413:696  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_252:\n        /* \"TetherToken.sol\":471:478  uint256 */\n      0x0\n        /* \"TetherToken.sol\":568:577  uint256 c */\n      dup1\n        /* \"TetherToken.sol\":584:585  b */\n      dup3\n        /* \"TetherToken.sol\":580:581  a */\n      dup5\n        /* \"TetherToken.sol\":580:585  a / b */\n      dup2\n      iszero\n      iszero\n      tag_281\n      jumpi\n      invalid\n    tag_281:\n      div\n      swap5\n        /* \"TetherToken.sol\":413:696  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TetherToken.sol\":702:822  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_256:\n        /* \"TetherToken.sol\":760:767  uint256 */\n      0x0\n        /* \"TetherToken.sol\":786:792  b <= a */\n      dup3\n      dup3\n      gt\n      iszero\n        /* \"TetherToken.sol\":779:793  assert(b <= a) */\n      tag_283\n      jumpi\n      invalid\n    tag_283:\n      pop\n        /* \"TetherToken.sol\":810:815  a - b */\n      swap1\n      sub\n      swap1\n        /* \"TetherToken.sol\":702:822  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"TetherToken.sol\":828:971  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_260:\n        /* \"TetherToken.sol\":886:893  uint256 */\n      0x0\n        /* \"TetherToken.sol\":917:922  a + b */\n      dup3\n      dup3\n      add\n        /* \"TetherToken.sol\":939:945  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"TetherToken.sol\":932:946  assert(c >= a) */\n      tag_278\n      jumpi\n      invalid\n    stop\n    data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n\n    auxdata: 0xa165627a7a72305820df0e3462839e361a28d5390111e7d660109185526f77f45e8556fd20bcd839c00029\n}\n",
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP PUSH1 0xFF MUL NOT AND DUP2 SSTORE PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x17D6 CODESIZE SUB DUP1 PUSH3 0x17D6 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 SWAP1 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD MLOAD SWAP3 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x1 DUP5 SWAP1 SSTORE SWAP4 DUP6 ADD DUP1 MLOAD SWAP4 SWAP6 SWAP1 SWAP5 SWAP2 ADD SWAP3 SWAP1 SWAP2 PUSH3 0x88 SWAP2 PUSH1 0x7 SWAP2 DUP7 ADD SWAP1 PUSH3 0xD3 JUMP JUMPDEST POP DUP2 MLOAD PUSH3 0x9E SWAP1 PUSH1 0x8 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0xD3 JUMP JUMPDEST POP PUSH1 0x9 SSTORE POP POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH3 0x178 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x116 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x146 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x146 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x146 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x129 JUMP JUMPDEST POP PUSH3 0x154 SWAP3 SWAP2 POP PUSH3 0x158 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x175 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x154 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x15F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x164E DUP1 PUSH3 0x188 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x17C JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x6FDDE03 DUP2 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x753C30C EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0xE136B19 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xECB93C0 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x26976E3F EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x35390714 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x59BF1ABE EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0x5C658165 EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x43B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0xC0324C77 EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0xCC872B66 EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4D4 JUMPI DUP1 PUSH4 0xDD644F72 EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0xE47D6060 EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0xE4997DC5 EQ PUSH2 0x531 JUMPI DUP1 PUSH4 0xE5B5019A EQ PUSH2 0x552 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x567 JUMPI DUP1 PUSH4 0xF3BDC228 EQ PUSH2 0x588 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x5A9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1FD JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x637 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x6C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x267 PUSH2 0x783 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x793 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH2 0x805 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH1 0x44 CALLDATALOAD PUSH2 0x8A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x302 PUSH2 0x97E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x98D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH2 0x99F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH2 0x9A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH2 0x9AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH2 0x9B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x267 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xA19 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0xA3B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x267 PUSH2 0xA58 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xA68 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH2 0xB28 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x302 PUSH2 0xB95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x447 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x302 PUSH2 0xBA4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0xBB3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0xC0E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0xCF3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH1 0x4 CALLDATALOAD PUSH2 0xD88 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH1 0x4 CALLDATALOAD PUSH2 0xE33 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0xEDE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH2 0xFA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x267 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xFAF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xFC4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH2 0x1033 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1039 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x594 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x108B JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x62F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x604 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x62F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x612 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x64E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP PUSH1 0xA0 PUSH1 0x2 EXP PUSH1 0xFF MUL NOT SWAP1 SWAP2 AND OR PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0xCC358699805E9A8B7F77B522628C7CB9ABD07D9EFB86B6FB616AF1609036A99E SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x44 CALLDATASIZE LT ISZERO PUSH2 0x6D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x774 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xAEE92D3300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xAEE92D33 SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x757 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x76B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x77E JUMP JUMPDEST PUSH2 0x77E DUP4 DUP4 PUSH2 0x1137 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x7AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE SWAP1 MLOAD PUSH32 0x42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8A0 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x881 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x897 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x8A5 JUMP JUMPDEST POP PUSH1 0x1 SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x973 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B477ADB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x8B477ADB SWAP2 PUSH1 0x84 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x757 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77E DUP4 DUP4 DUP4 PUSH2 0x11E5 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x9C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x9E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP PUSH1 0xFF MUL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB18 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAF9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0xA36 JUMP JUMPDEST PUSH2 0xB21 DUP3 PUSH2 0x13E1 JUMP JUMPDEST SWAP1 POP PUSH2 0xA36 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xB3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP PUSH1 0xFF MUL NOT AND PUSH1 0xA0 PUSH1 0x2 EXP OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x62F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x604 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x62F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCE5 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x6E18980A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x6E18980A SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCDC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xCEF JUMP JUMPDEST PUSH2 0xCEF DUP3 DUP3 PUSH2 0x13FC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xD0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x14 DUP3 LT PUSH2 0xD17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x32 DUP2 LT PUSH2 0xD24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP3 SWAP1 SSTORE PUSH1 0x9 SLOAD PUSH2 0xD40 SWAP1 DUP3 SWAP1 PUSH1 0xA EXP PUSH4 0xFFFFFFFF PUSH2 0x1569 AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP2 MLOAD PUSH32 0xB044A1E409EAC5C48E5AF22D4AF52670DD1A99059537A78B31B48C6500A6354E SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xD9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 DUP2 ADD GT PUSH2 0xDAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 ADD GT PUSH2 0xDD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP5 ADD SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD DUP5 ADD SWAP1 SSTORE DUP2 MLOAD DUP4 DUP2 MSTORE SWAP2 MLOAD PUSH32 0xCB8241ADB0C3FDB35B70C24CE35C5EB0C17AF7431C99F827D44A445CA624176A SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xE4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0xE59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0xE7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP5 SWAP1 SUB SWAP1 SSTORE DUP2 MLOAD DUP4 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x702D5967F45F6513A38FFC42D6BA9BF230BD40E8F53B16363C7EB4FD2DEB9A44 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF96 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF77 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0xFA3 JUMP JUMPDEST PUSH2 0xFA0 DUP4 DUP4 PUSH2 0x159F JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xFDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE SWAP1 MLOAD PUSH32 0xD7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 NOT DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1050 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO PUSH2 0x1088 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x10A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x10CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D3 DUP3 PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD DUP6 SWAP1 SUB SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD DUP4 SWAP1 MSTORE DUP1 MLOAD SWAP3 SWAP4 POP PUSH32 0x61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x44 CALLDATASIZE LT ISZERO PUSH2 0x1147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1178 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE DUP1 MLOAD DUP7 DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x60 PUSH1 0x64 CALLDATASIZE LT ISZERO PUSH2 0x11F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x3 SLOAD SWAP1 SWAP5 POP PUSH2 0x1248 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x123C SWAP1 DUP9 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1569 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x15CA AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x125A JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH1 0x0 NOT DUP5 LT ISZERO PUSH2 0x1299 JUMPI PUSH2 0x1274 DUP5 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x15E1 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x12A9 DUP6 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x15E1 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH2 0x12D5 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x15E1 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP9 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x130A SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x15F3 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP4 GT ISZERO PUSH2 0x139F JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1356 SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x15F3 AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 SLOAD DUP4 MLOAD DUP8 DUP2 MSTORE SWAP4 MLOAD SWAP1 DUP3 AND SWAP4 SWAP2 DUP12 AND SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1603 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 JUMPDEST DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1603 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 PUSH1 0x44 CALLDATASIZE LT ISZERO PUSH2 0x140F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x142A PUSH2 0x2710 PUSH2 0x123C PUSH1 0x3 SLOAD DUP8 PUSH2 0x1569 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x143C JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH2 0x144C DUP5 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x15E1 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH2 0x146F SWAP1 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x15E1 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x14A1 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x15F3 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP4 GT ISZERO PUSH2 0x1534 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x14ED SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x15F3 AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 SLOAD DUP4 MLOAD DUP8 DUP2 MSTORE SWAP4 MLOAD SWAP2 AND SWAP3 CALLER SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1603 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND SWAP2 CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1603 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 ISZERO ISZERO PUSH2 0x157C JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x1598 JUMP JUMPDEST POP DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x158C JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1594 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x15D8 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x15ED JUMPI INVALID JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1594 JUMPI INVALID STOP 0xdd CALLCODE MSTORE 0xad SHL 0xe2 0xc8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 0xf5 GAS 0x4d 0xf5 0x23 0xb3 0xef LOG1 PUSH6 0x627A7A723058 KECCAK256 0xdf 0xe CALLVALUE PUSH3 0x839E36 BYTE 0x28 0xd5 CODECOPY ADD GT 0xe7 0xd6 PUSH1 0x10 SWAP2 DUP6 MSTORE PUSH16 0x77F45E8556FD20BCD839C00029000000 ",
            "sourceMap": "9724:4781:0:-;;;7405:5;7384:26;;-1:-1:-1;;;;;;7384:26:0;;;3041:31;;;;3078:26;;10219:289;5:2:-1;;;;30:1;27;20:12;5:2;10219:289:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1378:5;:18;;-1:-1:-1;;;;;;1378:18:0;1386:10;1378:18;;;;10324:29;;;10219:289;;;10363:12;;10219:289;;;;;;;;;10363:12;;:4;;:12;;;;:::i;:::-;-1:-1:-1;10385:16:0;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;10411:8:0;:20;-1:-1:-1;;10441:15:0;10450:5;;-1:-1:-1;;;;;10450:5:0;10441:15;;:8;:15;;;;;:32;10483:10;:18;;-1:-1:-1;;;;;;10483:18:0;;;9724:4781;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9724:4781:0;;;-1:-1:-1;9724:4781:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "60806040526004361061017c5763ffffffff60e060020a60003504166306fdde0381146101815780630753c30c1461020b578063095ea7b31461022e5780630e136b19146102525780630ecb93c01461027b57806318160ddd1461029c57806323b872dd146102c357806326976e3f146102ed57806327e235e31461031e578063313ce5671461033f57806335390714146103545780633eaaf86b146103695780633f4ba83a1461037e57806359bf1abe146103935780635c658165146103b45780635c975abb146103db57806370a08231146103f05780638456cb5914610411578063893d20e8146104265780638da5cb5b1461043b57806395d89b4114610450578063a9059cbb14610465578063c0324c7714610489578063cc872b66146104a4578063db006a75146104bc578063dd62ed3e146104d4578063dd644f72146104fb578063e47d606014610510578063e4997dc514610531578063e5b5019a14610552578063f2fde38b14610567578063f3bdc22814610588575b600080fd5b34801561018d57600080fd5b506101966105a9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101d05781810151838201526020016101b8565b50505050905090810190601f1680156101fd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561021757600080fd5b5061022c600160a060020a0360043516610637565b005b34801561023a57600080fd5b5061022c600160a060020a03600435166024356106c1565b34801561025e57600080fd5b50610267610783565b604080519115158252519081900360200190f35b34801561028757600080fd5b5061022c600160a060020a0360043516610793565b3480156102a857600080fd5b506102b1610805565b60408051918252519081900360200190f35b3480156102cf57600080fd5b5061022c600160a060020a03600435811690602435166044356108a8565b3480156102f957600080fd5b5061030261097e565b60408051600160a060020a039092168252519081900360200190f35b34801561032a57600080fd5b506102b1600160a060020a036004351661098d565b34801561034b57600080fd5b506102b161099f565b34801561036057600080fd5b506102b16109a5565b34801561037557600080fd5b506102b16109ab565b34801561038a57600080fd5b5061022c6109b1565b34801561039f57600080fd5b50610267600160a060020a0360043516610a19565b3480156103c057600080fd5b506102b1600160a060020a0360043581169060243516610a3b565b3480156103e757600080fd5b50610267610a58565b3480156103fc57600080fd5b506102b1600160a060020a0360043516610a68565b34801561041d57600080fd5b5061022c610b28565b34801561043257600080fd5b50610302610b95565b34801561044757600080fd5b50610302610ba4565b34801561045c57600080fd5b50610196610bb3565b34801561047157600080fd5b5061022c600160a060020a0360043516602435610c0e565b34801561049557600080fd5b5061022c600435602435610cf3565b3480156104b057600080fd5b5061022c600435610d88565b3480156104c857600080fd5b5061022c600435610e33565b3480156104e057600080fd5b506102b1600160a060020a0360043581169060243516610ede565b34801561050757600080fd5b506102b1610fa9565b34801561051c57600080fd5b50610267600160a060020a0360043516610faf565b34801561053d57600080fd5b5061022c600160a060020a0360043516610fc4565b34801561055e57600080fd5b506102b1611033565b34801561057357600080fd5b5061022c600160a060020a0360043516611039565b34801561059457600080fd5b5061022c600160a060020a036004351661108b565b6007805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561062f5780601f106106045761010080835404028352916020019161062f565b820191906000526020600020905b81548152906001019060200180831161061257829003601f168201915b505050505081565b600054600160a060020a0316331461064e57600080fd5b600a805460a060020a60a060020a60ff02199091161773ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03831690811790915560408051918252517fcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e916020908290030190a150565b604060443610156106d157600080fd5b600a5460a060020a900460ff161561077457600a54604080517faee92d33000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a038681166024830152604482018690529151919092169163aee92d3391606480830192600092919082900301818387803b15801561075757600080fd5b505af115801561076b573d6000803e3d6000fd5b5050505061077e565b61077e8383611137565b505050565b600a5460a060020a900460ff1681565b600054600160a060020a031633146107aa57600080fd5b600160a060020a038116600081815260066020908152604091829020805460ff19166001179055815192835290517f42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc9281900390910190a150565b600a5460009060a060020a900460ff16156108a057600a60009054906101000a9004600160a060020a0316600160a060020a03166318160ddd6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561086d57600080fd5b505af1158015610881573d6000803e3d6000fd5b505050506040513d602081101561089757600080fd5b505190506108a5565b506001545b90565b60005460a060020a900460ff16156108bf57600080fd5b600160a060020a03831660009081526006602052604090205460ff16156108e557600080fd5b600a5460a060020a900460ff161561097357600a54604080517f8b477adb000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a03868116602483015285811660448301526064820185905291519190921691638b477adb91608480830192600092919082900301818387803b15801561075757600080fd5b61077e8383836111e5565b600a54600160a060020a031681565b60026020526000908152604090205481565b60095481565b60045481565b60015481565b600054600160a060020a031633146109c857600080fd5b60005460a060020a900460ff1615156109e057600080fd5b6000805460a060020a60ff02191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a1565b600160a060020a03811660009081526006602052604090205460ff165b919050565b600560209081526000928352604080842090915290825290205481565b60005460a060020a900460ff1681565b600a5460009060a060020a900460ff1615610b1857600a54604080517f70a08231000000000000000000000000000000000000000000000000000000008152600160a060020a038581166004830152915191909216916370a082319160248083019260209291908290030181600087803b158015610ae557600080fd5b505af1158015610af9573d6000803e3d6000fd5b505050506040513d6020811015610b0f57600080fd5b50519050610a36565b610b21826113e1565b9050610a36565b600054600160a060020a03163314610b3f57600080fd5b60005460a060020a900460ff1615610b5657600080fd5b6000805460a060020a60ff02191660a060020a1781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a1565b600054600160a060020a031690565b600054600160a060020a031681565b6008805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561062f5780601f106106045761010080835404028352916020019161062f565b60005460a060020a900460ff1615610c2557600080fd5b3360009081526006602052604090205460ff1615610c4257600080fd5b600a5460a060020a900460ff1615610ce557600a54604080517f6e18980a000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a0385811660248301526044820185905291519190921691636e18980a91606480830192600092919082900301818387803b158015610cc857600080fd5b505af1158015610cdc573d6000803e3d6000fd5b50505050610cef565b610cef82826113fc565b5050565b600054600160a060020a03163314610d0a57600080fd5b60148210610d1757600080fd5b60328110610d2457600080fd5b6003829055600954610d40908290600a0a63ffffffff61156916565b600481905560035460408051918252602082019290925281517fb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e929181900390910190a15050565b600054600160a060020a03163314610d9f57600080fd5b60015481810111610daf57600080fd5b60008054600160a060020a031681526002602052604090205481810111610dd557600080fd5b60008054600160a060020a03168152600260209081526040918290208054840190556001805484019055815183815291517fcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a9281900390910190a150565b600054600160a060020a03163314610e4a57600080fd5b600154811115610e5957600080fd5b60008054600160a060020a0316815260026020526040902054811115610e7e57600080fd5b60018054829003905560008054600160a060020a031681526002602090815260409182902080548490039055815183815291517f702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a449281900390910190a150565b600a5460009060a060020a900460ff1615610f9657600a54604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152600160a060020a03868116600483015285811660248301529151919092169163dd62ed3e9160448083019260209291908290030181600087803b158015610f6357600080fd5b505af1158015610f77573d6000803e3d6000fd5b505050506040513d6020811015610f8d57600080fd5b50519050610fa3565b610fa0838361159f565b90505b92915050565b60035481565b60066020526000908152604090205460ff1681565b600054600160a060020a03163314610fdb57600080fd5b600160a060020a038116600081815260066020908152604091829020805460ff19169055815192835290517fd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c9281900390910190a150565b60001981565b600054600160a060020a0316331461105057600080fd5b600160a060020a03811615611088576000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b50565b60008054600160a060020a031633146110a357600080fd5b600160a060020a03821660009081526006602052604090205460ff1615156110ca57600080fd5b6110d382610a68565b600160a060020a0383166000818152600260209081526040808320929092556001805485900390558151928352820183905280519293507f61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c692918290030190a15050565b6040604436101561114757600080fd5b81158015906111785750336000908152600560209081526040808320600160a060020a038716845290915290205415155b1561118257600080fd5b336000818152600560209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a3505050565b60008080606060643610156111f957600080fd5b600160a060020a0387166000908152600560209081526040808320338452909152902054600354909450611248906127109061123c90889063ffffffff61156916565b9063ffffffff6115ca16565b925060045483111561125a5760045492505b60001984101561129957611274848663ffffffff6115e116565b600160a060020a03881660009081526005602090815260408083203384529091529020555b6112a9858463ffffffff6115e116565b600160a060020a0388166000908152600260205260409020549092506112d5908663ffffffff6115e116565b600160a060020a03808916600090815260026020526040808220939093559088168152205461130a908363ffffffff6115f316565b600160a060020a03871660009081526002602052604081209190915583111561139f5760008054600160a060020a0316815260026020526040902054611356908463ffffffff6115f316565b60008054600160a060020a0390811682526002602090815260408084209490945591548351878152935190821693918b1692600080516020611603833981519152928290030190a35b85600160a060020a031687600160a060020a0316600080516020611603833981519152846040518082815260200191505060405180910390a350505050505050565b600160a060020a031660009081526002602052604090205490565b6000806040604436101561140f57600080fd5b61142a61271061123c6003548761156990919063ffffffff16565b925060045483111561143c5760045492505b61144c848463ffffffff6115e116565b3360009081526002602052604090205490925061146f908563ffffffff6115e116565b3360009081526002602052604080822092909255600160a060020a038716815220546114a1908363ffffffff6115f316565b600160a060020a0386166000908152600260205260408120919091558311156115345760008054600160a060020a03168152600260205260409020546114ed908463ffffffff6115f316565b60008054600160a060020a03908116825260026020908152604080842094909455915483518781529351911692339260008051602061160383398151915292918290030190a35b604080518381529051600160a060020a0387169133916000805160206116038339815191529181900360200190a35050505050565b60008083151561157c5760009150611598565b5082820282848281151561158c57fe5b041461159457fe5b8091505b5092915050565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b60008082848115156115d857fe5b04949350505050565b6000828211156115ed57fe5b50900390565b60008282018381101561159457fe00ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820df0e3462839e361a28d5390111e7d660109185526f77f45e8556fd20bcd839c00029",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x17C JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x6FDDE03 DUP2 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x753C30C EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0xE136B19 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xECB93C0 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x26976E3F EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x35390714 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x59BF1ABE EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0x5C658165 EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x43B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0xC0324C77 EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0xCC872B66 EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4D4 JUMPI DUP1 PUSH4 0xDD644F72 EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0xE47D6060 EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0xE4997DC5 EQ PUSH2 0x531 JUMPI DUP1 PUSH4 0xE5B5019A EQ PUSH2 0x552 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x567 JUMPI DUP1 PUSH4 0xF3BDC228 EQ PUSH2 0x588 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x5A9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1FD JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x637 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x6C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x267 PUSH2 0x783 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x793 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH2 0x805 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH1 0x44 CALLDATALOAD PUSH2 0x8A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x302 PUSH2 0x97E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x98D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH2 0x99F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH2 0x9A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH2 0x9AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH2 0x9B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x267 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xA19 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0xA3B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x267 PUSH2 0xA58 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xA68 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH2 0xB28 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x302 PUSH2 0xB95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x447 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x302 PUSH2 0xBA4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0xBB3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0xC0E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0xCF3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH1 0x4 CALLDATALOAD PUSH2 0xD88 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH1 0x4 CALLDATALOAD PUSH2 0xE33 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0xEDE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH2 0xFA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x267 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xFAF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xFC4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH2 0x1033 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1039 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x594 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x108B JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x62F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x604 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x62F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x612 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x64E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP PUSH1 0xA0 PUSH1 0x2 EXP PUSH1 0xFF MUL NOT SWAP1 SWAP2 AND OR PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0xCC358699805E9A8B7F77B522628C7CB9ABD07D9EFB86B6FB616AF1609036A99E SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x44 CALLDATASIZE LT ISZERO PUSH2 0x6D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x774 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xAEE92D3300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xAEE92D33 SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x757 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x76B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x77E JUMP JUMPDEST PUSH2 0x77E DUP4 DUP4 PUSH2 0x1137 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x7AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE SWAP1 MLOAD PUSH32 0x42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8A0 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x881 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x897 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x8A5 JUMP JUMPDEST POP PUSH1 0x1 SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x973 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B477ADB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x8B477ADB SWAP2 PUSH1 0x84 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x757 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77E DUP4 DUP4 DUP4 PUSH2 0x11E5 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x9C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x9E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP PUSH1 0xFF MUL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB18 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAF9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0xA36 JUMP JUMPDEST PUSH2 0xB21 DUP3 PUSH2 0x13E1 JUMP JUMPDEST SWAP1 POP PUSH2 0xA36 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xB3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP PUSH1 0xFF MUL NOT AND PUSH1 0xA0 PUSH1 0x2 EXP OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x62F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x604 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x62F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCE5 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x6E18980A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x6E18980A SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCDC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xCEF JUMP JUMPDEST PUSH2 0xCEF DUP3 DUP3 PUSH2 0x13FC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xD0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x14 DUP3 LT PUSH2 0xD17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x32 DUP2 LT PUSH2 0xD24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP3 SWAP1 SSTORE PUSH1 0x9 SLOAD PUSH2 0xD40 SWAP1 DUP3 SWAP1 PUSH1 0xA EXP PUSH4 0xFFFFFFFF PUSH2 0x1569 AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP2 MLOAD PUSH32 0xB044A1E409EAC5C48E5AF22D4AF52670DD1A99059537A78B31B48C6500A6354E SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xD9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 DUP2 ADD GT PUSH2 0xDAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 ADD GT PUSH2 0xDD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP5 ADD SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD DUP5 ADD SWAP1 SSTORE DUP2 MLOAD DUP4 DUP2 MSTORE SWAP2 MLOAD PUSH32 0xCB8241ADB0C3FDB35B70C24CE35C5EB0C17AF7431C99F827D44A445CA624176A SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xE4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0xE59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0xE7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP5 SWAP1 SUB SWAP1 SSTORE DUP2 MLOAD DUP4 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x702D5967F45F6513A38FFC42D6BA9BF230BD40E8F53B16363C7EB4FD2DEB9A44 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF96 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF77 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0xFA3 JUMP JUMPDEST PUSH2 0xFA0 DUP4 DUP4 PUSH2 0x159F JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xFDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE SWAP1 MLOAD PUSH32 0xD7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 NOT DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1050 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO PUSH2 0x1088 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x10A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x10CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D3 DUP3 PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD DUP6 SWAP1 SUB SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD DUP4 SWAP1 MSTORE DUP1 MLOAD SWAP3 SWAP4 POP PUSH32 0x61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x44 CALLDATASIZE LT ISZERO PUSH2 0x1147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1178 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE DUP1 MLOAD DUP7 DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x60 PUSH1 0x64 CALLDATASIZE LT ISZERO PUSH2 0x11F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x3 SLOAD SWAP1 SWAP5 POP PUSH2 0x1248 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x123C SWAP1 DUP9 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1569 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x15CA AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x125A JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH1 0x0 NOT DUP5 LT ISZERO PUSH2 0x1299 JUMPI PUSH2 0x1274 DUP5 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x15E1 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x12A9 DUP6 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x15E1 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH2 0x12D5 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x15E1 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP9 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x130A SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x15F3 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP4 GT ISZERO PUSH2 0x139F JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1356 SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x15F3 AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 SLOAD DUP4 MLOAD DUP8 DUP2 MSTORE SWAP4 MLOAD SWAP1 DUP3 AND SWAP4 SWAP2 DUP12 AND SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1603 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 JUMPDEST DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1603 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 PUSH1 0x44 CALLDATASIZE LT ISZERO PUSH2 0x140F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x142A PUSH2 0x2710 PUSH2 0x123C PUSH1 0x3 SLOAD DUP8 PUSH2 0x1569 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x143C JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH2 0x144C DUP5 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x15E1 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH2 0x146F SWAP1 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x15E1 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x14A1 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x15F3 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP4 GT ISZERO PUSH2 0x1534 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x14ED SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x15F3 AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 SLOAD DUP4 MLOAD DUP8 DUP2 MSTORE SWAP4 MLOAD SWAP2 AND SWAP3 CALLER SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1603 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND SWAP2 CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1603 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 ISZERO ISZERO PUSH2 0x157C JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x1598 JUMP JUMPDEST POP DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x158C JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1594 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x15D8 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x15ED JUMPI INVALID JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1594 JUMPI INVALID STOP 0xdd CALLCODE MSTORE 0xad SHL 0xe2 0xc8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 0xf5 GAS 0x4d 0xf5 0x23 0xb3 0xef LOG1 PUSH6 0x627A7A723058 KECCAK256 0xdf 0xe CALLVALUE PUSH3 0x839E36 BYTE 0x28 0xd5 CODECOPY ADD GT 0xe7 0xd6 PUSH1 0x10 SWAP2 DUP6 MSTORE PUSH16 0x77F45E8556FD20BCD839C00029000000 ",
            "sourceMap": "9724:4781:0:-;;;;;;;;;-1:-1:-1;;;9724:4781:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9790:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9790:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;9790:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12476:177;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12476:177:0;-1:-1:-1;;;;;12476:177:0;;;;;;;11748:296;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;11748:296:0;-1:-1:-1;;;;;11748:296:0;;;;;;;9902:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9902:22:0;;;;;;;;;;;;;;;;;;;;;;8501:142;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8501:142:0;-1:-1:-1;;;;;8501:142:0;;;;;12716:212;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12716:212:0;;;;;;;;;;;;;;;;;;;;10991:355;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;10991:355:0;-1:-1:-1;;;;;10991:355:0;;;;;;;;;;;;9866:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9866:30:0;;;;;;;;-1:-1:-1;;;;;9866:30:0;;;;;;;;;;;;;;2916:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2916:40:0;-1:-1:-1;;;;;2916:40:0;;;;;9840:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9840:20:0;;;;3078:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3078:26:0;;;;2043:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2043:24:0;;;;7970:87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7970:87:0;;;;8229:122;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8229:122:0;-1:-1:-1;;;;;8229:122:0;;;;;4652:61;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4652:61:0;-1:-1:-1;;;;;4652:61:0;;;;;;;;;;7384:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7384:26:0;;;;11428:238;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;11428:238:0;-1:-1:-1;;;;;11428:238:0;;;;;7803:85;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7803:85:0;;;;8357;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8357:85:0;;;;1188:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1188:20:0;;;;9814;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9814:20:0;;;;10590:319;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;10590:319:0;-1:-1:-1;;;;;10590:319:0;;;;;;;13805:378;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;13805:378:0;;;;;;;13086:259;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;13086:259:0;;;;;13569:230;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;13569:230:0;;;;;12126:287;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12126:287:0;-1:-1:-1;;;;;12126:287:0;;;;;;;;;;3041:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3041:31:0;;;;8448:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8448:46:0;-1:-1:-1;;;;;8448:46:0;;;;;8649:157;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8649:157:0;-1:-1:-1;;;;;8649:157:0;;;;;4720:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4720:42:0;;;;1738:147;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1738:147:0;-1:-1:-1;;;;;1738:147:0;;;;;8812:318;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8812:318:0;-1:-1:-1;;;;;8812:318:0;;;;;9790:18;;;;;;;;;;;;;;;-1:-1:-1;;9790:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12476:177::-;1546:5;;-1:-1:-1;;;;;1546:5:0;1532:10;:19;1524:28;;;;;;12548:10;:17;;-1:-1:-1;;;;;;;;;12548:17:0;;;;-1:-1:-1;;12575:34:0;-1:-1:-1;;;;;12575:34:0;;;;;;;;12619:27;;;;;;;;;;;;;;;;;12476:177;:::o;11748:296::-;11819:6;3251:8;3233;:26;3231:29;3223:38;;;;;;11841:10;;-1:-1:-1;;;11841:10:0;;;;11837:201;;;11896:15;;11874:84;;;;;;11929:10;11874:84;;;;-1:-1:-1;;;;;11874:84:0;;;;;;;;;;;;;;;11896:15;;;;;11874:54;;:84;;;;;11896:15;;11874:84;;;;;;;11896:15;;11874:84;;;5:2:-1;;;;30:1;27;20:12;5:2;11874:84:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11874:84:0;;;;11867:91;;11837:201;11996:31;12010:8;12020:6;11996:13;:31::i;:::-;11748:296;;;:::o;9902:22::-;;;-1:-1:-1;;;9902:22:0;;;;;:::o;8501:142::-;1546:5;;-1:-1:-1;;;;;1546:5:0;1532:10;:19;1524:28;;;;;;-1:-1:-1;;;;;8570:24:0;;;;;;:13;:24;;;;;;;;;:31;;-1:-1:-1;;8570:31:0;8597:4;8570:31;;;8611:25;;;;;;;;;;;;;;;;;8501:142;:::o;12716:212::-;12784:10;;12764:4;;-1:-1:-1;;;12784:10:0;;;;12780:142;;;12831:15;;;;;;;;;-1:-1:-1;;;;;12831:15:0;-1:-1:-1;;;;;12817:42:0;;:44;;;;;-1:-1:-1;;;12817:44:0;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12817:44:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12817:44:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12817:44:0;;-1:-1:-1;12810:51:0;;12780:142;-1:-1:-1;12899:12:0;;12780:142;12716:212;:::o;10991:355::-;7553:6;;-1:-1:-1;;;7553:6:0;;;;7552:7;7544:16;;;;;;-1:-1:-1;;;;;11094:20:0;;;;;;:13;:20;;;;;;;;11093:21;11085:30;;;;;;11129:10;;-1:-1:-1;;;11129:10:0;;;;11125:215;;;11184:15;;11162:91;;;;;;11222:10;11162:91;;;;-1:-1:-1;;;;;11162:91:0;;;;;;;;;;;;;;;;;;;;;;11184:15;;;;;11162:59;;:91;;;;;11184:15;;11162:91;;;;;;;11184:15;;11162:91;;;5:2:-1;;;;30:1;27;20:12;11125:215:0;11291:38;11310:5;11317:3;11322:6;11291:18;:38::i;9866:30::-;;;-1:-1:-1;;;;;9866:30:0;;:::o;2916:40::-;;;;;;;;;;;;;:::o;9840:20::-;;;;:::o;3078:26::-;;;;:::o;2043:24::-;;;;:::o;7970:87::-;1546:5;;-1:-1:-1;;;;;1546:5:0;1532:10;:19;1524:28;;;;;;7705:6;;-1:-1:-1;;;7705:6:0;;;;7697:15;;;;;;;;8032:5;8023:14;;-1:-1:-1;;;;;;8023:14:0;;;8043:9;;;;8032:5;8043:9;7970:87::o;8229:122::-;-1:-1:-1;;;;;8323:21:0;;8300:4;8323:21;;;:13;:21;;;;;;;;8229:122;;;;:::o;4652:61::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;7384:26::-;;;-1:-1:-1;;;7384:26:0;;;;;:::o;11428:238::-;11505:10;;11485:4;;-1:-1:-1;;;11505:10:0;;;;11501:159;;;11560:15;;11538:53;;;;;;-1:-1:-1;;;;;11538:53:0;;;;;;;;;11560:15;;;;;11538:48;;:53;;;;;;;;;;;;;;11560:15;;11538:53;;;5:2:-1;;;;30:1;27;20:12;5:2;11538:53:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11538:53:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11538:53:0;;-1:-1:-1;11531:60:0;;11501:159;11629:20;11645:3;11629:15;:20::i;:::-;11622:27;;;;7803:85;1546:5;;-1:-1:-1;;;;;1546:5:0;1532:10;:19;1524:28;;;;;;7553:6;;-1:-1:-1;;;7553:6:0;;;;7552:7;7544:16;;;;;;7857:6;:13;;-1:-1:-1;;;;;;7857:13:0;-1:-1:-1;;;7857:13:0;;;7876:7;;;;7857:6;7876:7;7803:85::o;8357:::-;8404:7;8430:5;-1:-1:-1;;;;;8430:5:0;8357:85;:::o;1188:20::-;;;-1:-1:-1;;;;;1188:20:0;;:::o;9814:::-;;;;;;;;;;;;;;;-1:-1:-1;;9814:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10590:319;7553:6;;-1:-1:-1;;;7553:6:0;;;;7552:7;7544:16;;;;;;10688:10;10674:25;;;;:13;:25;;;;;;;;10673:26;10665:35;;;;;;10714:10;;-1:-1:-1;;;10714:10:0;;;;10710:193;;;10769:15;;10747:80;;;;;;10803:10;10747:80;;;;-1:-1:-1;;;;;10747:80:0;;;;;;;;;;;;;;;10769:15;;;;;10747:55;;:80;;;;;10769:15;;10747:80;;;;;;;10769:15;;10747:80;;;5:2:-1;;;;30:1;27;20:12;5:2;10747:80:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10747:80:0;;;;10740:87;;10710:193;10865:27;10880:3;10885:6;10865:14;:27::i;:::-;10590:319;;:::o;13805:378::-;1546:5;;-1:-1:-1;;;;;1546:5:0;1532:10;:19;1524:28;;;;;;14001:2;13984:19;;13976:28;;;;;;14034:2;14022:14;;14014:23;;;;;;14048:15;:32;;;14121:8;;14103:27;;:9;;14117:2;:12;14103:27;:13;:27;:::i;:::-;14090:10;:40;;;14148:15;;14141:35;;;;;;;;;;;;;;;;;;;;;;;;;;13805:378;;:::o;13086:259::-;1546:5;;-1:-1:-1;;;;;1546:5:0;1532:10;:19;1524:28;;;;;;13173:12;;13149:21;;;:36;13141:45;;;;;;13231:15;13240:5;;-1:-1:-1;;;;;13240:5:0;13231:15;;:8;:15;;;;;;13204:24;;;:42;13196:51;;;;;;13258:15;13267:5;;-1:-1:-1;;;;;13267:5:0;13258:15;;:8;:15;;;;;;;;;:25;;;;;;13267:5;13293:22;;;;;;13325:13;;;;;;;;;;;;;;;;;13086:259;:::o;13569:230::-;1546:5;;-1:-1:-1;;;;;1546:5:0;1532:10;:19;1524:28;;;;;;13633:12;;:22;-1:-1:-1;13633:22:0;13625:31;;;;;;13674:15;13683:5;;-1:-1:-1;;;;;13683:5:0;13674:15;;:8;:15;;;;;;:25;-1:-1:-1;13674:25:0;13666:34;;;;;;13711:12;:22;;;;;;;:12;13752:5;;-1:-1:-1;;;;;13752:5:0;13743:15;;:8;:15;;;;;;;;;:25;;;;;;;13778:14;;;;;;;;;;;;;;;;;13569:230;:::o;12126:287::-;12234:10;;12204:14;;-1:-1:-1;;;12234:10:0;;;;12230:177;;;12281:15;;12267:58;;;;;;-1:-1:-1;;;;;12267:58:0;;;;;;;;;;;;;;;;12281:15;;;;;12267:40;;:58;;;;;;;;;;;;;;12281:15;;12267:58;;;5:2:-1;;;;30:1;27;20:12;5:2;12267:58:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12267:58:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12267:58:0;;-1:-1:-1;12260:65:0;;12230:177;12363:33;12379:6;12387:8;12363:15;:33::i;:::-;12356:40;;12230:177;12126:287;;;;:::o;3041:31::-;;;;:::o;8448:46::-;;;;;;;;;;;;;;;:::o;8649:157::-;1546:5;;-1:-1:-1;;;;;1546:5:0;1532:10;:19;1524:28;;;;;;-1:-1:-1;;;;;8724:27:0;;8754:5;8724:27;;;:13;:27;;;;;;;;;:35;;-1:-1:-1;;8724:35:0;;;8769:30;;;;;;;;;;;;;;;;;8649:157;:::o;4720:42::-;-1:-1:-1;;4720:42:0;:::o;1738:147::-;1546:5;;-1:-1:-1;;;;;1546:5:0;1532:10;:19;1524:28;;;;;;-1:-1:-1;;;;;1814:22:0;;;1810:69;;1852:5;:16;;-1:-1:-1;;1852:16:0;-1:-1:-1;;;;;1852:16:0;;;;;1810:69;1738:147;:::o;8812:318::-;8943:15;1546:5;;-1:-1:-1;;;;;1546:5:0;1532:10;:19;1524:28;;;;;;-1:-1:-1;;;;;8901:31:0;;;;;;:13;:31;;;;;;;;8893:40;;;;;;;;8961:27;8971:16;8961:9;:27::i;:::-;-1:-1:-1;;;;;8998:26:0;;9027:1;8998:26;;;:8;:26;;;;;;;;:30;;;;9038:12;:26;;;;;;;9074:49;;;;;;;;;;;;8943:45;;-1:-1:-1;9074:49:0;;;;;;;;;8812:318;;:::o;6164:563::-;6235:6;3251:8;3233;:26;3231:29;3223:38;;;;;;6569:11;;;;;6568:53;;-1:-1:-1;6594:10:0;6586:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;6586:29:0;;;;;;;;;;:34;;6568:53;6566:56;6558:65;;;;;;6642:10;6634:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;6634:29:0;;;;;;;;;;;;:38;;;6682;;;;;;;6634:29;;6642:10;6682:38;;;;;;;;;;;6164:563;;;:::o;5044:880::-;5148:14;;;5130:6;3251:8;3233;:26;3231:29;3223:38;;;;;;-1:-1:-1;;;;;5165:14:0;;;;;;:7;:14;;;;;;;;5180:10;5165:26;;;;;;;;5380:15;;5165:26;;-1:-1:-1;5368:40:0;;5402:5;;5369:27;;:6;;:27;:10;:27;:::i;:::-;5368:33;:40;:33;:40;:::i;:::-;5357:51;;5428:10;;5422:3;:16;5418:63;;;5460:10;;5454:16;;5418:63;-1:-1:-1;;5494:10:0;:21;5490:103;;;5560:22;:10;5575:6;5560:22;:14;:22;:::i;:::-;-1:-1:-1;;;;;5531:14:0;;;;;;:7;:14;;;;;;;;5546:10;5531:26;;;;;;;:51;5490:103;5620:15;:6;5631:3;5620:15;:10;:15;:::i;:::-;-1:-1:-1;;;;;5663:15:0;;;;;;:8;:15;;;;;;5602:33;;-1:-1:-1;5663:27:0;;5683:6;5663:27;:19;:27;:::i;:::-;-1:-1:-1;;;;;5645:15:0;;;;;;;:8;:15;;;;;;:45;;;;5716:13;;;;;;;:29;;5734:10;5716:29;:17;:29;:::i;:::-;-1:-1:-1;;;;;5700:13:0;;;;;;:8;:13;;;;;:45;;;;5759:7;;5755:121;;;5800:15;5809:5;;-1:-1:-1;;;;;5809:5:0;5800:15;;:8;:15;;;;;;:24;;5820:3;5800:24;:19;:24;:::i;:::-;5782:15;5791:5;;-1:-1:-1;;;;;5791:5:0;;;5782:15;;:8;:15;;;;;;;;:42;;;;5854:5;;5838:27;;;;;;;5854:5;;;;5838:27;;;;-1:-1:-1;;;;;;;;;;;5838:27:0;;;;;;;5755:121;5901:3;-1:-1:-1;;;;;5885:32:0;5894:5;-1:-1:-1;;;;;5885:32:0;-1:-1:-1;;;;;;;;;;;5906:10:0;5885:32;;;;;;;;;;;;;;;;;;5044:880;;;;;;;:::o;4216:114::-;-1:-1:-1;;;;;4307:16:0;4276:12;4307:16;;;:8;:16;;;;;;;4216:114::o;3445:560::-;3530:8;;3512:6;3251:8;3233;:26;3231:29;3223:38;;;;;;3541:40;3575:5;3542:27;3553:15;;3542:6;:10;;:27;;;;:::i;3541:40::-;3530:51;;3601:10;;3595:3;:16;3591:63;;;3633:10;;3627:16;;3591:63;3681:15;:6;3692:3;3681:15;:10;:15;:::i;:::-;3738:10;3729:20;;;;:8;:20;;;;;;3663:33;;-1:-1:-1;3729:32:0;;3754:6;3729:32;:24;:32;:::i;:::-;3715:10;3706:20;;;;:8;:20;;;;;;:55;;;;-1:-1:-1;;;;;3787:13:0;;;;;;:29;;3805:10;3787:29;:17;:29;:::i;:::-;-1:-1:-1;;;;;3771:13:0;;;;;;:8;:13;;;;;:45;;;;3830:7;;3826:126;;;3871:15;3880:5;;-1:-1:-1;;;;;3880:5:0;3871:15;;:8;:15;;;;;;:24;;3891:3;3871:24;:19;:24;:::i;:::-;3853:15;3862:5;;-1:-1:-1;;;;;3862:5:0;;;3853:15;;:8;:15;;;;;;;;:42;;;;3930:5;;3909:32;;;;;;;3930:5;;;3918:10;;-1:-1:-1;;;;;;;;;;;3909:32:0;;;;;;;;3826:126;3961:37;;;;;;;;-1:-1:-1;;;;;3961:37:0;;;3970:10;;-1:-1:-1;;;;;;;;;;;3961:37:0;;;;;;;;3445:560;;;;;:::o;206:201::-;264:7;;287:6;;283:45;;;316:1;309:8;;;;283:45;-1:-1:-1;349:5:0;;;353:1;349;:5;371;;;;;;;;:10;364:18;;;;399:1;392:8;;206:201;;;;;;:::o;7052:143::-;-1:-1:-1;;;;;7163:15:0;;;7130:14;7163:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;7052:143::o;413:283::-;471:7;568:9;584:1;580;:5;;;;;;;;;413:283;-1:-1:-1;;;;413:283:0:o;702:120::-;760:7;786:6;;;;779:14;;;;-1:-1:-1;810:5:0;;;702:120::o;828:143::-;886:7;917:5;;;939:6;;;;932:14;;"
          },
          "gasEstimates": {
            "creation": {
              "codeDepositCost": "1142000",
              "executionCost": "infinite",
              "totalCost": "infinite"
            },
            "external": {
              "MAX_UINT()": "888",
              "_totalSupply()": "689",
              "addBlackList(address)": "22101",
              "allowance(address,address)": "infinite",
              "allowed(address,address)": "989",
              "approve(address,uint256)": "infinite",
              "balanceOf(address)": "infinite",
              "balances(address)": "770",
              "basisPointsRate()": "1019",
              "decimals()": "645",
              "deprecate(address)": "22118",
              "deprecated()": "599",
              "destroyBlackFunds(address)": "infinite",
              "getBlackListStatus(address)": "976",
              "getOwner()": "996",
              "isBlackListed(address)": "1200",
              "issue(uint256)": "43646",
              "maximumFee()": "667",
              "name()": "infinite",
              "owner()": "1018",
              "pause()": "22287",
              "paused()": "863",
              "redeem(uint256)": "43668",
              "removeBlackList(address)": "22623",
              "setParams(uint256,uint256)": "infinite",
              "symbol()": "infinite",
              "totalSupply()": "infinite",
              "transfer(address,uint256)": "infinite",
              "transferFrom(address,address,uint256)": "infinite",
              "transferOwnership(address)": "21627",
              "unpause()": "22111",
              "upgradedAddress()": "754"
            }
          },
          "legacyAssembly": {
            ".code": [
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH",
                "value": "80"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "MSTORE"
              },
              {
                "begin": 7405,
                "end": 7410,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 7384,
                "end": 7410,
                "name": "DUP1"
              },
              {
                "begin": 7384,
                "end": 7410,
                "name": "SLOAD"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "2"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "EXP"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "FF"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "MUL"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "NOT"
              },
              {
                "begin": 7384,
                "end": 7410,
                "name": "AND"
              },
              {
                "begin": 7384,
                "end": 7410,
                "name": "DUP2"
              },
              {
                "begin": 7384,
                "end": 7410,
                "name": "SSTORE"
              },
              {
                "begin": 3041,
                "end": 3072,
                "name": "PUSH",
                "value": "3"
              },
              {
                "begin": 3041,
                "end": 3072,
                "name": "DUP2"
              },
              {
                "begin": 3041,
                "end": 3072,
                "name": "SWAP1"
              },
              {
                "begin": 3041,
                "end": 3072,
                "name": "SSTORE"
              },
              {
                "begin": 3078,
                "end": 3104,
                "name": "PUSH",
                "value": "4"
              },
              {
                "begin": 3078,
                "end": 3104,
                "name": "SSTORE"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "CALLVALUE"
              },
              {
                "begin": 5,
                "end": 7,
                "name": "DUP1"
              },
              {
                "begin": 5,
                "end": 7,
                "name": "ISZERO"
              },
              {
                "begin": 5,
                "end": 7,
                "name": "PUSH [tag]",
                "value": "1"
              },
              {
                "begin": 5,
                "end": 7,
                "name": "JUMPI"
              },
              {
                "begin": 30,
                "end": 31,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 27,
                "end": 28,
                "name": "DUP1"
              },
              {
                "begin": 20,
                "end": 32,
                "name": "REVERT"
              },
              {
                "begin": 5,
                "end": 7,
                "name": "tag",
                "value": "1"
              },
              {
                "begin": 5,
                "end": 7,
                "name": "JUMPDEST"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "POP"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "MLOAD"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "PUSHSIZE"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "CODESIZE"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "SUB"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "DUP1"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "PUSHSIZE"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "DUP4"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "CODECOPY"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "DUP2"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "ADD"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "SWAP1"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "DUP2"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "MSTORE"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "DUP2"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "MLOAD"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "DUP1"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "DUP5"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "ADD"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "MLOAD"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "SWAP3"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "DUP5"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "ADD"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "MLOAD"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "PUSH",
                "value": "60"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "DUP6"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "ADD"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "MLOAD"
              },
              {
                "begin": 1378,
                "end": 1383,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 1378,
                "end": 1396,
                "name": "DUP1"
              },
              {
                "begin": 1378,
                "end": 1396,
                "name": "SLOAD"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "2"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "EXP"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "NOT"
              },
              {
                "begin": 1378,
                "end": 1396,
                "name": "AND"
              },
              {
                "begin": 1386,
                "end": 1396,
                "name": "CALLER"
              },
              {
                "begin": 1378,
                "end": 1396,
                "name": "OR"
              },
              {
                "begin": 1378,
                "end": 1396,
                "name": "SWAP1"
              },
              {
                "begin": 1378,
                "end": 1396,
                "name": "SSTORE"
              },
              {
                "begin": 1378,
                "end": 1396,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": 10324,
                "end": 10353,
                "name": "DUP5"
              },
              {
                "begin": 10324,
                "end": 10353,
                "name": "SWAP1"
              },
              {
                "begin": 10324,
                "end": 10353,
                "name": "SSTORE"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "SWAP4"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "DUP6"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "ADD"
              },
              {
                "begin": 10363,
                "end": 10375,
                "name": "DUP1"
              },
              {
                "begin": 10363,
                "end": 10375,
                "name": "MLOAD"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "SWAP4"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "SWAP6"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "SWAP1"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "SWAP5"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "SWAP2"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "ADD"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "SWAP3"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "SWAP1"
              },
              {
                "begin": 10219,
                "end": 10508,
                "name": "SWAP2"
              },
              {
                "begin": 10363,
                "end": 10375,
                "name": "PUSH [tag]",
                "value": "6"
              },
              {
                "begin": 10363,
                "end": 10375,
                "name": "SWAP2"
              },
              {
                "begin": 10363,
                "end": 10367,
                "name": "PUSH",
                "value": "7"
              },
              {
                "begin": 10363,
                "end": 10367,
                "name": "SWAP2"
              },
              {
                "begin": 10363,
                "end": 10375,
                "name": "DUP7"
              },
              {
                "begin": 10363,
                "end": 10375,
                "name": "ADD"
              },
              {
                "begin": 10363,
                "end": 10375,
                "name": "SWAP1"
              },
              {
                "begin": 10363,
                "end": 10375,
                "name": "PUSH [tag]",
                "value": "7"
              },
              {
                "begin": 10363,
                "end": 10375,
                "name": "JUMP",
                "value": "[in]"
              },
              {
                "begin": 10363,
                "end": 10375,
                "name": "tag",
                "value": "6"
              },
              {
                "begin": 10363,
                "end": 10375,
                "name": "JUMPDEST"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "POP"
              },
              {
                "begin": 10385,
                "end": 10401,
                "name": "DUP2"
              },
              {
                "begin": 10385,
                "end": 10401,
                "name": "MLOAD"
              },
              {
                "begin": 10385,
                "end": 10401,
                "name": "PUSH [tag]",
                "value": "8"
              },
              {
                "begin": 10385,
                "end": 10401,
                "name": "SWAP1"
              },
              {
                "begin": 10385,
                "end": 10391,
                "name": "PUSH",
                "value": "8"
              },
              {
                "begin": 10385,
                "end": 10391,
                "name": "SWAP1"
              },
              {
                "begin": 10385,
                "end": 10401,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 10385,
                "end": 10401,
                "name": "DUP6"
              },
              {
                "begin": 10385,
                "end": 10401,
                "name": "ADD"
              },
              {
                "begin": 10385,
                "end": 10401,
                "name": "SWAP1"
              },
              {
                "begin": 10385,
                "end": 10401,
                "name": "PUSH [tag]",
                "value": "7"
              },
              {
                "begin": 10385,
                "end": 10401,
                "name": "JUMP",
                "value": "[in]"
              },
              {
                "begin": 10385,
                "end": 10401,
                "name": "tag",
                "value": "8"
              },
              {
                "begin": 10385,
                "end": 10401,
                "name": "JUMPDEST"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "POP"
              },
              {
                "begin": 10411,
                "end": 10419,
                "name": "PUSH",
                "value": "9"
              },
              {
                "begin": 10411,
                "end": 10431,
                "name": "SSTORE"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "POP"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "POP"
              },
              {
                "begin": 10441,
                "end": 10456,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 10450,
                "end": 10455,
                "name": "DUP1"
              },
              {
                "begin": 10450,
                "end": 10455,
                "name": "SLOAD"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "2"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "EXP"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "SUB"
              },
              {
                "begin": 10450,
                "end": 10455,
                "name": "AND"
              },
              {
                "begin": 10441,
                "end": 10456,
                "name": "DUP2"
              },
              {
                "begin": 10441,
                "end": 10456,
                "name": "MSTORE"
              },
              {
                "begin": 10441,
                "end": 10449,
                "name": "PUSH",
                "value": "2"
              },
              {
                "begin": 10441,
                "end": 10456,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 10441,
                "end": 10456,
                "name": "MSTORE"
              },
              {
                "begin": 10441,
                "end": 10456,
                "name": "PUSH",
                "value": "40"
              },
              {
                "begin": 10441,
                "end": 10456,
                "name": "SWAP1"
              },
              {
                "begin": 10441,
                "end": 10456,
                "name": "KECCAK256"
              },
              {
                "begin": 10441,
                "end": 10473,
                "name": "SSTORE"
              },
              {
                "begin": 10483,
                "end": 10493,
                "name": "PUSH",
                "value": "A"
              },
              {
                "begin": 10483,
                "end": 10501,
                "name": "DUP1"
              },
              {
                "begin": 10483,
                "end": 10501,
                "name": "SLOAD"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "A0"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "2"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "EXP"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "PUSH",
                "value": "FF"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "MUL"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "NOT"
              },
              {
                "begin": 10483,
                "end": 10501,
                "name": "AND"
              },
              {
                "begin": 10483,
                "end": 10501,
                "name": "SWAP1"
              },
              {
                "begin": 10483,
                "end": 10501,
                "name": "SSTORE"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH [tag]",
                "value": "9"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "JUMP"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "tag",
                "value": "7"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "JUMPDEST"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "DUP3"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "DUP1"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "SLOAD"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "DUP2"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "AND"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "ISZERO"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH",
                "value": "100"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "MUL"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "SUB"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "AND"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH",
                "value": "2"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "SWAP1"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "DIV"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "SWAP1"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "MSTORE"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "KECCAK256"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "SWAP1"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH",
                "value": "1F"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "ADD"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "SWAP1"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "DIV"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "DUP2"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "ADD"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "SWAP3"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "DUP3"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH",
                "value": "1F"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "LT"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH [tag]",
                "value": "11"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "JUMPI"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "DUP1"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "MLOAD"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH",
                "value": "FF"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "NOT"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "AND"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "DUP4"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "DUP1"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "ADD"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "OR"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "DUP6"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "SSTORE"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH [tag]",
                "value": "13"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "JUMP"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "tag",
                "value": "11"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "JUMPDEST"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "DUP3"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "DUP1"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "ADD"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "ADD"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "DUP6"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "SSTORE"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "DUP3"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "ISZERO"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH [tag]",
                "value": "13"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "JUMPI"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "SWAP2"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "DUP3"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "ADD"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "tag",
                "value": "12"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "JUMPDEST"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "DUP3"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "DUP2"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "GT"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "ISZERO"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH [tag]",
                "value": "13"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "JUMPI"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "DUP3"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "MLOAD"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "DUP3"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "SSTORE"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "SWAP2"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH",
                "value": "20"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "ADD"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "SWAP2"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "SWAP1"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "ADD"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "SWAP1"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH [tag]",
                "value": "12"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "JUMP"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "tag",
                "value": "13"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "JUMPDEST"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "POP"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH [tag]",
                "value": "14"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "SWAP3"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "SWAP2"
              },
              {
                "begin": -1,
                "end": -1,
                "name": "POP"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH [tag]",
                "value": "15"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "JUMP",
                "value": "[in]"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "tag",
                "value": "14"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "JUMPDEST"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "POP"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "SWAP1"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "JUMP",
                "value": "[out]"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "tag",
                "value": "15"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "JUMPDEST"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH [tag]",
                "value": "16"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "SWAP2"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "SWAP1"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "tag",
                "value": "17"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "JUMPDEST"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "DUP1"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "DUP3"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "GT"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "ISZERO"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH [tag]",
                "value": "14"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "JUMPI"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "DUP2"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "SSTORE"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH",
                "value": "1"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "ADD"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH [tag]",
                "value": "17"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "JUMP"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "tag",
                "value": "16"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "JUMPDEST"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "SWAP1"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "JUMP",
                "value": "[out]"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "tag",
                "value": "9"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "JUMPDEST"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH #[$]",
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "DUP1"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH [$]",
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "CODECOPY"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "PUSH",
                "value": "0"
              },
              {
                "begin": 9724,
                "end": 14505,
                "name": "RETURN"
              }
            ],
            ".data": {
              "0": {
                ".auxdata": "a165627a7a72305820df0e3462839e361a28d5390111e7d660109185526f77f45e8556fd20bcd839c00029",
                ".code": [
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "80"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "LT"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "E0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DIV"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "AND"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "6FDDE03"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP2"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "2"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "753C30C"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "3"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "95EA7B3"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "4"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "E136B19"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "5"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "ECB93C0"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "6"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "18160DDD"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "7"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "23B872DD"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "8"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "26976E3F"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "9"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "27E235E3"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "10"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "313CE567"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "11"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "35390714"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "12"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "3EAAF86B"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "13"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "3F4BA83A"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "14"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "59BF1ABE"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "15"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "5C658165"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "16"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "5C975ABB"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "17"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "70A08231"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "18"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "8456CB59"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "19"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "893D20E8"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "20"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "8DA5CB5B"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "21"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "95D89B41"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "22"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "A9059CBB"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "23"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "C0324C77"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "24"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "CC872B66"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "25"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "DB006A75"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "26"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "DD62ED3E"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "27"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "DD644F72"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "28"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "E47D6060"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "29"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "E4997DC5"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "30"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "E5B5019A"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "31"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "F2FDE38B"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "32"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "F3BDC228"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "EQ"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH [tag]",
                    "value": "33"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "tag",
                    "value": "1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9724,
                    "end": 14505,
                    "name": "REVERT"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "tag",
                    "value": "2"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "34"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "34"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "POP"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH [tag]",
                    "value": "35"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH [tag]",
                    "value": "36"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "JUMP"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "tag",
                    "value": "35"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP3"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP4"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP2"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP4"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "ADD"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP4"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP4"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP4"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "ADD"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP6"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "ADD"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP4"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP4"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 8,
                    "end": 108,
                    "name": "tag",
                    "value": "37"
                  },
                  {
                    "begin": 8,
                    "end": 108,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 33,
                    "end": 36,
                    "name": "DUP4"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "DUP2"
                  },
                  {
                    "begin": 27,
                    "end": 37,
                    "name": "LT"
                  },
                  {
                    "begin": 8,
                    "end": 108,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 8,
                    "end": 108,
                    "name": "PUSH [tag]",
                    "value": "38"
                  },
                  {
                    "begin": 8,
                    "end": 108,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 90,
                    "end": 101,
                    "name": "DUP2"
                  },
                  {
                    "begin": 90,
                    "end": 101,
                    "name": "DUP2"
                  },
                  {
                    "begin": 90,
                    "end": 101,
                    "name": "ADD"
                  },
                  {
                    "begin": 84,
                    "end": 102,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 71,
                    "end": 82,
                    "name": "DUP4"
                  },
                  {
                    "begin": 71,
                    "end": 82,
                    "name": "DUP3"
                  },
                  {
                    "begin": 71,
                    "end": 82,
                    "name": "ADD"
                  },
                  {
                    "begin": 64,
                    "end": 103,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 52,
                    "end": 54,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 45,
                    "end": 55,
                    "name": "ADD"
                  },
                  {
                    "begin": 8,
                    "end": 108,
                    "name": "PUSH [tag]",
                    "value": "37"
                  },
                  {
                    "begin": 8,
                    "end": 108,
                    "name": "JUMP"
                  },
                  {
                    "begin": 8,
                    "end": 108,
                    "name": "tag",
                    "value": "38"
                  },
                  {
                    "begin": 8,
                    "end": 108,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 12,
                    "end": 26,
                    "name": "POP"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "POP"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "POP"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "POP"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "POP"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP2"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "ADD"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH",
                    "value": "1F"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "AND"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH [tag]",
                    "value": "40"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP3"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SUB"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP4"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SUB"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH",
                    "value": "100"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "EXP"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SUB"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "NOT"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "AND"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP2"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "ADD"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "POP"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "tag",
                    "value": "40"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "POP"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "POP"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "POP"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "POP"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SUB"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "RETURN"
                  },
                  {
                    "begin": 12476,
                    "end": 12653,
                    "name": "tag",
                    "value": "3"
                  },
                  {
                    "begin": 12476,
                    "end": 12653,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 12476,
                    "end": 12653,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "41"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "41"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 12476,
                    "end": 12653,
                    "name": "PUSH [tag]",
                    "value": "42"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 12476,
                    "end": 12653,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 12476,
                    "end": 12653,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 12476,
                    "end": 12653,
                    "name": "AND"
                  },
                  {
                    "begin": 12476,
                    "end": 12653,
                    "name": "PUSH [tag]",
                    "value": "43"
                  },
                  {
                    "begin": 12476,
                    "end": 12653,
                    "name": "JUMP"
                  },
                  {
                    "begin": 12476,
                    "end": 12653,
                    "name": "tag",
                    "value": "42"
                  },
                  {
                    "begin": 12476,
                    "end": 12653,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 12476,
                    "end": 12653,
                    "name": "STOP"
                  },
                  {
                    "begin": 11748,
                    "end": 12044,
                    "name": "tag",
                    "value": "4"
                  },
                  {
                    "begin": 11748,
                    "end": 12044,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 11748,
                    "end": 12044,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "44"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "44"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 11748,
                    "end": 12044,
                    "name": "PUSH [tag]",
                    "value": "42"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 11748,
                    "end": 12044,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 11748,
                    "end": 12044,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 11748,
                    "end": 12044,
                    "name": "AND"
                  },
                  {
                    "begin": 11748,
                    "end": 12044,
                    "name": "PUSH",
                    "value": "24"
                  },
                  {
                    "begin": 11748,
                    "end": 12044,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 11748,
                    "end": 12044,
                    "name": "PUSH [tag]",
                    "value": "46"
                  },
                  {
                    "begin": 11748,
                    "end": 12044,
                    "name": "JUMP"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "tag",
                    "value": "5"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "47"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "47"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "POP"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "PUSH [tag]",
                    "value": "48"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "PUSH [tag]",
                    "value": "49"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "JUMP"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "tag",
                    "value": "48"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "DUP3"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "DUP2"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "SUB"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "ADD"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "RETURN"
                  },
                  {
                    "begin": 8501,
                    "end": 8643,
                    "name": "tag",
                    "value": "6"
                  },
                  {
                    "begin": 8501,
                    "end": 8643,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 8501,
                    "end": 8643,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "50"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "50"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 8501,
                    "end": 8643,
                    "name": "PUSH [tag]",
                    "value": "42"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 8501,
                    "end": 8643,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 8501,
                    "end": 8643,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 8501,
                    "end": 8643,
                    "name": "AND"
                  },
                  {
                    "begin": 8501,
                    "end": 8643,
                    "name": "PUSH [tag]",
                    "value": "52"
                  },
                  {
                    "begin": 8501,
                    "end": 8643,
                    "name": "JUMP"
                  },
                  {
                    "begin": 12716,
                    "end": 12928,
                    "name": "tag",
                    "value": "7"
                  },
                  {
                    "begin": 12716,
                    "end": 12928,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 12716,
                    "end": 12928,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "53"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "53"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 12716,
                    "end": 12928,
                    "name": "POP"
                  },
                  {
                    "begin": 12716,
                    "end": 12928,
                    "name": "PUSH [tag]",
                    "value": "54"
                  },
                  {
                    "begin": 12716,
                    "end": 12928,
                    "name": "PUSH [tag]",
                    "value": "55"
                  },
                  {
                    "begin": 12716,
                    "end": 12928,
                    "name": "JUMP"
                  },
                  {
                    "begin": 12716,
                    "end": 12928,
                    "name": "tag",
                    "value": "54"
                  },
                  {
                    "begin": 12716,
                    "end": 12928,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 12716,
                    "end": 12928,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 12716,
                    "end": 12928,
                    "name": "DUP1"
                  },
                  {
                    "begin": 12716,
                    "end": 12928,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 12716,
                    "end": 12928,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 12716,
                    "end": 12928,
                    "name": "DUP3"
                  },
                  {
                    "begin": 12716,
                    "end": 12928,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 12716,
                    "end": 12928,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 12716,
                    "end": 12928,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 12716,
                    "end": 12928,
                    "name": "DUP2"
                  },
                  {
                    "begin": 12716,
                    "end": 12928,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 12716,
                    "end": 12928,
                    "name": "SUB"
                  },
                  {
                    "begin": 12716,
                    "end": 12928,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 12716,
                    "end": 12928,
                    "name": "ADD"
                  },
                  {
                    "begin": 12716,
                    "end": 12928,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 12716,
                    "end": 12928,
                    "name": "RETURN"
                  },
                  {
                    "begin": 10991,
                    "end": 11346,
                    "name": "tag",
                    "value": "8"
                  },
                  {
                    "begin": 10991,
                    "end": 11346,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 10991,
                    "end": 11346,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "56"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "56"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 10991,
                    "end": 11346,
                    "name": "PUSH [tag]",
                    "value": "42"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 10991,
                    "end": 11346,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 10991,
                    "end": 11346,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 10991,
                    "end": 11346,
                    "name": "DUP2"
                  },
                  {
                    "begin": 10991,
                    "end": 11346,
                    "name": "AND"
                  },
                  {
                    "begin": 10991,
                    "end": 11346,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 10991,
                    "end": 11346,
                    "name": "PUSH",
                    "value": "24"
                  },
                  {
                    "begin": 10991,
                    "end": 11346,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 10991,
                    "end": 11346,
                    "name": "AND"
                  },
                  {
                    "begin": 10991,
                    "end": 11346,
                    "name": "PUSH",
                    "value": "44"
                  },
                  {
                    "begin": 10991,
                    "end": 11346,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 10991,
                    "end": 11346,
                    "name": "PUSH [tag]",
                    "value": "58"
                  },
                  {
                    "begin": 10991,
                    "end": 11346,
                    "name": "JUMP"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "tag",
                    "value": "9"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "59"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "59"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "POP"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "PUSH [tag]",
                    "value": "60"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "PUSH [tag]",
                    "value": "61"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "JUMP"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "tag",
                    "value": "60"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "MLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "AND"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "DUP3"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "DUP2"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "SUB"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "ADD"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "RETURN"
                  },
                  {
                    "begin": 2916,
                    "end": 2956,
                    "name": "tag",
                    "value": "10"
                  },
                  {
                    "begin": 2916,
                    "end": 2956,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2916,
                    "end": 2956,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "62"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "62"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 2916,
                    "end": 2956,
                    "name": "PUSH [tag]",
                    "value": "54"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 2916,
                    "end": 2956,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 2916,
                    "end": 2956,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 2916,
                    "end": 2956,
                    "name": "AND"
                  },
                  {
                    "begin": 2916,
                    "end": 2956,
                    "name": "PUSH [tag]",
                    "value": "64"
                  },
                  {
                    "begin": 2916,
                    "end": 2956,
                    "name": "JUMP"
                  },
                  {
                    "begin": 9840,
                    "end": 9860,
                    "name": "tag",
                    "value": "11"
                  },
                  {
                    "begin": 9840,
                    "end": 9860,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 9840,
                    "end": 9860,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "65"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "65"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 9840,
                    "end": 9860,
                    "name": "POP"
                  },
                  {
                    "begin": 9840,
                    "end": 9860,
                    "name": "PUSH [tag]",
                    "value": "54"
                  },
                  {
                    "begin": 9840,
                    "end": 9860,
                    "name": "PUSH [tag]",
                    "value": "67"
                  },
                  {
                    "begin": 9840,
                    "end": 9860,
                    "name": "JUMP"
                  },
                  {
                    "begin": 3078,
                    "end": 3104,
                    "name": "tag",
                    "value": "12"
                  },
                  {
                    "begin": 3078,
                    "end": 3104,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3078,
                    "end": 3104,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "68"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "68"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3078,
                    "end": 3104,
                    "name": "POP"
                  },
                  {
                    "begin": 3078,
                    "end": 3104,
                    "name": "PUSH [tag]",
                    "value": "54"
                  },
                  {
                    "begin": 3078,
                    "end": 3104,
                    "name": "PUSH [tag]",
                    "value": "70"
                  },
                  {
                    "begin": 3078,
                    "end": 3104,
                    "name": "JUMP"
                  },
                  {
                    "begin": 2043,
                    "end": 2067,
                    "name": "tag",
                    "value": "13"
                  },
                  {
                    "begin": 2043,
                    "end": 2067,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2043,
                    "end": 2067,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "71"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "71"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2043,
                    "end": 2067,
                    "name": "POP"
                  },
                  {
                    "begin": 2043,
                    "end": 2067,
                    "name": "PUSH [tag]",
                    "value": "54"
                  },
                  {
                    "begin": 2043,
                    "end": 2067,
                    "name": "PUSH [tag]",
                    "value": "73"
                  },
                  {
                    "begin": 2043,
                    "end": 2067,
                    "name": "JUMP"
                  },
                  {
                    "begin": 7970,
                    "end": 8057,
                    "name": "tag",
                    "value": "14"
                  },
                  {
                    "begin": 7970,
                    "end": 8057,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 7970,
                    "end": 8057,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "74"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "74"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 7970,
                    "end": 8057,
                    "name": "POP"
                  },
                  {
                    "begin": 7970,
                    "end": 8057,
                    "name": "PUSH [tag]",
                    "value": "42"
                  },
                  {
                    "begin": 7970,
                    "end": 8057,
                    "name": "PUSH [tag]",
                    "value": "76"
                  },
                  {
                    "begin": 7970,
                    "end": 8057,
                    "name": "JUMP"
                  },
                  {
                    "begin": 8229,
                    "end": 8351,
                    "name": "tag",
                    "value": "15"
                  },
                  {
                    "begin": 8229,
                    "end": 8351,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 8229,
                    "end": 8351,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "77"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "77"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 8229,
                    "end": 8351,
                    "name": "PUSH [tag]",
                    "value": "48"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 8229,
                    "end": 8351,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 8229,
                    "end": 8351,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 8229,
                    "end": 8351,
                    "name": "AND"
                  },
                  {
                    "begin": 8229,
                    "end": 8351,
                    "name": "PUSH [tag]",
                    "value": "79"
                  },
                  {
                    "begin": 8229,
                    "end": 8351,
                    "name": "JUMP"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "tag",
                    "value": "16"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "80"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "80"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "PUSH [tag]",
                    "value": "54"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "AND"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "PUSH",
                    "value": "24"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "AND"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "PUSH [tag]",
                    "value": "82"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "JUMP"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "tag",
                    "value": "17"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "83"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "83"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "POP"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "PUSH [tag]",
                    "value": "48"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "PUSH [tag]",
                    "value": "85"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "JUMP"
                  },
                  {
                    "begin": 11428,
                    "end": 11666,
                    "name": "tag",
                    "value": "18"
                  },
                  {
                    "begin": 11428,
                    "end": 11666,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 11428,
                    "end": 11666,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "86"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "86"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 11428,
                    "end": 11666,
                    "name": "PUSH [tag]",
                    "value": "54"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 11428,
                    "end": 11666,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 11428,
                    "end": 11666,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 11428,
                    "end": 11666,
                    "name": "AND"
                  },
                  {
                    "begin": 11428,
                    "end": 11666,
                    "name": "PUSH [tag]",
                    "value": "88"
                  },
                  {
                    "begin": 11428,
                    "end": 11666,
                    "name": "JUMP"
                  },
                  {
                    "begin": 7803,
                    "end": 7888,
                    "name": "tag",
                    "value": "19"
                  },
                  {
                    "begin": 7803,
                    "end": 7888,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 7803,
                    "end": 7888,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "89"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "89"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 7803,
                    "end": 7888,
                    "name": "POP"
                  },
                  {
                    "begin": 7803,
                    "end": 7888,
                    "name": "PUSH [tag]",
                    "value": "42"
                  },
                  {
                    "begin": 7803,
                    "end": 7888,
                    "name": "PUSH [tag]",
                    "value": "91"
                  },
                  {
                    "begin": 7803,
                    "end": 7888,
                    "name": "JUMP"
                  },
                  {
                    "begin": 8357,
                    "end": 8442,
                    "name": "tag",
                    "value": "20"
                  },
                  {
                    "begin": 8357,
                    "end": 8442,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 8357,
                    "end": 8442,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "92"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "92"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 8357,
                    "end": 8442,
                    "name": "POP"
                  },
                  {
                    "begin": 8357,
                    "end": 8442,
                    "name": "PUSH [tag]",
                    "value": "60"
                  },
                  {
                    "begin": 8357,
                    "end": 8442,
                    "name": "PUSH [tag]",
                    "value": "94"
                  },
                  {
                    "begin": 8357,
                    "end": 8442,
                    "name": "JUMP"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "tag",
                    "value": "21"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "95"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "95"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "POP"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "PUSH [tag]",
                    "value": "60"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "PUSH [tag]",
                    "value": "97"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "JUMP"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "tag",
                    "value": "22"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "98"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "98"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "POP"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "PUSH [tag]",
                    "value": "35"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "PUSH [tag]",
                    "value": "100"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "JUMP"
                  },
                  {
                    "begin": 10590,
                    "end": 10909,
                    "name": "tag",
                    "value": "23"
                  },
                  {
                    "begin": 10590,
                    "end": 10909,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 10590,
                    "end": 10909,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "105"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "105"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 10590,
                    "end": 10909,
                    "name": "PUSH [tag]",
                    "value": "42"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 10590,
                    "end": 10909,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 10590,
                    "end": 10909,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 10590,
                    "end": 10909,
                    "name": "AND"
                  },
                  {
                    "begin": 10590,
                    "end": 10909,
                    "name": "PUSH",
                    "value": "24"
                  },
                  {
                    "begin": 10590,
                    "end": 10909,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 10590,
                    "end": 10909,
                    "name": "PUSH [tag]",
                    "value": "107"
                  },
                  {
                    "begin": 10590,
                    "end": 10909,
                    "name": "JUMP"
                  },
                  {
                    "begin": 13805,
                    "end": 14183,
                    "name": "tag",
                    "value": "24"
                  },
                  {
                    "begin": 13805,
                    "end": 14183,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 13805,
                    "end": 14183,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "108"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "108"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 13805,
                    "end": 14183,
                    "name": "PUSH [tag]",
                    "value": "42"
                  },
                  {
                    "begin": 13805,
                    "end": 14183,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 13805,
                    "end": 14183,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 13805,
                    "end": 14183,
                    "name": "PUSH",
                    "value": "24"
                  },
                  {
                    "begin": 13805,
                    "end": 14183,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 13805,
                    "end": 14183,
                    "name": "PUSH [tag]",
                    "value": "110"
                  },
                  {
                    "begin": 13805,
                    "end": 14183,
                    "name": "JUMP"
                  },
                  {
                    "begin": 13086,
                    "end": 13345,
                    "name": "tag",
                    "value": "25"
                  },
                  {
                    "begin": 13086,
                    "end": 13345,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 13086,
                    "end": 13345,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "111"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "111"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 13086,
                    "end": 13345,
                    "name": "PUSH [tag]",
                    "value": "42"
                  },
                  {
                    "begin": 13086,
                    "end": 13345,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 13086,
                    "end": 13345,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 13086,
                    "end": 13345,
                    "name": "PUSH [tag]",
                    "value": "113"
                  },
                  {
                    "begin": 13086,
                    "end": 13345,
                    "name": "JUMP"
                  },
                  {
                    "begin": 13569,
                    "end": 13799,
                    "name": "tag",
                    "value": "26"
                  },
                  {
                    "begin": 13569,
                    "end": 13799,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 13569,
                    "end": 13799,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "114"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "114"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 13569,
                    "end": 13799,
                    "name": "PUSH [tag]",
                    "value": "42"
                  },
                  {
                    "begin": 13569,
                    "end": 13799,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 13569,
                    "end": 13799,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 13569,
                    "end": 13799,
                    "name": "PUSH [tag]",
                    "value": "116"
                  },
                  {
                    "begin": 13569,
                    "end": 13799,
                    "name": "JUMP"
                  },
                  {
                    "begin": 12126,
                    "end": 12413,
                    "name": "tag",
                    "value": "27"
                  },
                  {
                    "begin": 12126,
                    "end": 12413,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 12126,
                    "end": 12413,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "117"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "117"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 12126,
                    "end": 12413,
                    "name": "PUSH [tag]",
                    "value": "54"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 12126,
                    "end": 12413,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 12126,
                    "end": 12413,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 12126,
                    "end": 12413,
                    "name": "DUP2"
                  },
                  {
                    "begin": 12126,
                    "end": 12413,
                    "name": "AND"
                  },
                  {
                    "begin": 12126,
                    "end": 12413,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 12126,
                    "end": 12413,
                    "name": "PUSH",
                    "value": "24"
                  },
                  {
                    "begin": 12126,
                    "end": 12413,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 12126,
                    "end": 12413,
                    "name": "AND"
                  },
                  {
                    "begin": 12126,
                    "end": 12413,
                    "name": "PUSH [tag]",
                    "value": "119"
                  },
                  {
                    "begin": 12126,
                    "end": 12413,
                    "name": "JUMP"
                  },
                  {
                    "begin": 3041,
                    "end": 3072,
                    "name": "tag",
                    "value": "28"
                  },
                  {
                    "begin": 3041,
                    "end": 3072,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3041,
                    "end": 3072,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "120"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "120"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3041,
                    "end": 3072,
                    "name": "POP"
                  },
                  {
                    "begin": 3041,
                    "end": 3072,
                    "name": "PUSH [tag]",
                    "value": "54"
                  },
                  {
                    "begin": 3041,
                    "end": 3072,
                    "name": "PUSH [tag]",
                    "value": "122"
                  },
                  {
                    "begin": 3041,
                    "end": 3072,
                    "name": "JUMP"
                  },
                  {
                    "begin": 8448,
                    "end": 8494,
                    "name": "tag",
                    "value": "29"
                  },
                  {
                    "begin": 8448,
                    "end": 8494,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 8448,
                    "end": 8494,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "123"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "123"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 8448,
                    "end": 8494,
                    "name": "PUSH [tag]",
                    "value": "48"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 8448,
                    "end": 8494,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 8448,
                    "end": 8494,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 8448,
                    "end": 8494,
                    "name": "AND"
                  },
                  {
                    "begin": 8448,
                    "end": 8494,
                    "name": "PUSH [tag]",
                    "value": "125"
                  },
                  {
                    "begin": 8448,
                    "end": 8494,
                    "name": "JUMP"
                  },
                  {
                    "begin": 8649,
                    "end": 8806,
                    "name": "tag",
                    "value": "30"
                  },
                  {
                    "begin": 8649,
                    "end": 8806,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 8649,
                    "end": 8806,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "126"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "126"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 8649,
                    "end": 8806,
                    "name": "PUSH [tag]",
                    "value": "42"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 8649,
                    "end": 8806,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 8649,
                    "end": 8806,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 8649,
                    "end": 8806,
                    "name": "AND"
                  },
                  {
                    "begin": 8649,
                    "end": 8806,
                    "name": "PUSH [tag]",
                    "value": "128"
                  },
                  {
                    "begin": 8649,
                    "end": 8806,
                    "name": "JUMP"
                  },
                  {
                    "begin": 4720,
                    "end": 4762,
                    "name": "tag",
                    "value": "31"
                  },
                  {
                    "begin": 4720,
                    "end": 4762,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 4720,
                    "end": 4762,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "129"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "129"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 4720,
                    "end": 4762,
                    "name": "POP"
                  },
                  {
                    "begin": 4720,
                    "end": 4762,
                    "name": "PUSH [tag]",
                    "value": "54"
                  },
                  {
                    "begin": 4720,
                    "end": 4762,
                    "name": "PUSH [tag]",
                    "value": "131"
                  },
                  {
                    "begin": 4720,
                    "end": 4762,
                    "name": "JUMP"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "tag",
                    "value": "32"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "132"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "132"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "PUSH [tag]",
                    "value": "42"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "AND"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "PUSH [tag]",
                    "value": "134"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "JUMP"
                  },
                  {
                    "begin": 8812,
                    "end": 9130,
                    "name": "tag",
                    "value": "33"
                  },
                  {
                    "begin": 8812,
                    "end": 9130,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 8812,
                    "end": 9130,
                    "name": "CALLVALUE"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "135"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "135"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 8812,
                    "end": 9130,
                    "name": "PUSH [tag]",
                    "value": "42"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 8812,
                    "end": 9130,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 8812,
                    "end": 9130,
                    "name": "CALLDATALOAD"
                  },
                  {
                    "begin": 8812,
                    "end": 9130,
                    "name": "AND"
                  },
                  {
                    "begin": 8812,
                    "end": 9130,
                    "name": "PUSH [tag]",
                    "value": "137"
                  },
                  {
                    "begin": 8812,
                    "end": 9130,
                    "name": "JUMP"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "tag",
                    "value": "36"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH",
                    "value": "7"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP6"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "AND"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH",
                    "value": "100"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "MUL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "ADD"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "AND"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DIV"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH",
                    "value": "1F"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP2"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "ADD"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP5"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DIV"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP5"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "MUL"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP3"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "ADD"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP5"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "ADD"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP2"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP2"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP4"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "ADD"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP3"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP3"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH [tag]",
                    "value": "138"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH",
                    "value": "1F"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "LT"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH [tag]",
                    "value": "139"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH",
                    "value": "100"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP4"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DIV"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "MUL"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP4"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "ADD"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH [tag]",
                    "value": "138"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "JUMP"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "tag",
                    "value": "139"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP3"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "ADD"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "tag",
                    "value": "140"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP2"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP2"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "ADD"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "ADD"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP4"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "GT"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH [tag]",
                    "value": "140"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP3"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SUB"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "PUSH",
                    "value": "1F"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "AND"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP3"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "ADD"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "tag",
                    "value": "138"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "POP"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "POP"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "POP"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "POP"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "POP"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "DUP2"
                  },
                  {
                    "begin": 9790,
                    "end": 9808,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 12476,
                    "end": 12653,
                    "name": "tag",
                    "value": "43"
                  },
                  {
                    "begin": 12476,
                    "end": 12653,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "AND"
                  },
                  {
                    "begin": 1532,
                    "end": 1542,
                    "name": "CALLER"
                  },
                  {
                    "begin": 1532,
                    "end": 1551,
                    "name": "EQ"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "PUSH [tag]",
                    "value": "142"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "REVERT"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "tag",
                    "value": "142"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 12548,
                    "end": 12558,
                    "name": "PUSH",
                    "value": "A"
                  },
                  {
                    "begin": 12548,
                    "end": 12565,
                    "name": "DUP1"
                  },
                  {
                    "begin": 12548,
                    "end": 12565,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "MUL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT"
                  },
                  {
                    "begin": 12548,
                    "end": 12565,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 12548,
                    "end": 12565,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 12548,
                    "end": 12565,
                    "name": "AND"
                  },
                  {
                    "begin": 12548,
                    "end": 12565,
                    "name": "OR"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT"
                  },
                  {
                    "begin": 12575,
                    "end": 12609,
                    "name": "AND"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 12575,
                    "end": 12609,
                    "name": "DUP4"
                  },
                  {
                    "begin": 12575,
                    "end": 12609,
                    "name": "AND"
                  },
                  {
                    "begin": 12575,
                    "end": 12609,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 12575,
                    "end": 12609,
                    "name": "DUP2"
                  },
                  {
                    "begin": 12575,
                    "end": 12609,
                    "name": "OR"
                  },
                  {
                    "begin": 12575,
                    "end": 12609,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 12575,
                    "end": 12609,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 12575,
                    "end": 12609,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 12619,
                    "end": 12646,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 12619,
                    "end": 12646,
                    "name": "DUP1"
                  },
                  {
                    "begin": 12619,
                    "end": 12646,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 12619,
                    "end": 12646,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 12619,
                    "end": 12646,
                    "name": "DUP3"
                  },
                  {
                    "begin": 12619,
                    "end": 12646,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 12619,
                    "end": 12646,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 12619,
                    "end": 12646,
                    "name": "PUSH",
                    "value": "CC358699805E9A8B7F77B522628C7CB9ABD07D9EFB86B6FB616AF1609036A99E"
                  },
                  {
                    "begin": 12619,
                    "end": 12646,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 12619,
                    "end": 12646,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 12619,
                    "end": 12646,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 12619,
                    "end": 12646,
                    "name": "DUP3"
                  },
                  {
                    "begin": 12619,
                    "end": 12646,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 12619,
                    "end": 12646,
                    "name": "SUB"
                  },
                  {
                    "begin": 12619,
                    "end": 12646,
                    "name": "ADD"
                  },
                  {
                    "begin": 12619,
                    "end": 12646,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 12619,
                    "end": 12646,
                    "name": "LOG1"
                  },
                  {
                    "begin": 12476,
                    "end": 12653,
                    "name": "POP"
                  },
                  {
                    "begin": 12476,
                    "end": 12653,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 11748,
                    "end": 12044,
                    "name": "tag",
                    "value": "46"
                  },
                  {
                    "begin": 11748,
                    "end": 12044,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 11819,
                    "end": 11825,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 3251,
                    "end": 3259,
                    "name": "PUSH",
                    "value": "44"
                  },
                  {
                    "begin": 3233,
                    "end": 3241,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 3233,
                    "end": 3259,
                    "name": "LT"
                  },
                  {
                    "begin": 3231,
                    "end": 3260,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 3223,
                    "end": 3261,
                    "name": "PUSH [tag]",
                    "value": "145"
                  },
                  {
                    "begin": 3223,
                    "end": 3261,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 3223,
                    "end": 3261,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 3223,
                    "end": 3261,
                    "name": "DUP1"
                  },
                  {
                    "begin": 3223,
                    "end": 3261,
                    "name": "REVERT"
                  },
                  {
                    "begin": 3223,
                    "end": 3261,
                    "name": "tag",
                    "value": "145"
                  },
                  {
                    "begin": 3223,
                    "end": 3261,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 11841,
                    "end": 11851,
                    "name": "PUSH",
                    "value": "A"
                  },
                  {
                    "begin": 11841,
                    "end": 11851,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": 11841,
                    "end": 11851,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 11841,
                    "end": 11851,
                    "name": "DIV"
                  },
                  {
                    "begin": 11841,
                    "end": 11851,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 11841,
                    "end": 11851,
                    "name": "AND"
                  },
                  {
                    "begin": 11837,
                    "end": 12038,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 11837,
                    "end": 12038,
                    "name": "PUSH [tag]",
                    "value": "147"
                  },
                  {
                    "begin": 11837,
                    "end": 12038,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 11896,
                    "end": 11911,
                    "name": "PUSH",
                    "value": "A"
                  },
                  {
                    "begin": 11896,
                    "end": 11911,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "DUP1"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "PUSH",
                    "value": "AEE92D3300000000000000000000000000000000000000000000000000000000"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "DUP2"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 11929,
                    "end": 11939,
                    "name": "CALLER"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "DUP3"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "ADD"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "MSTORE"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "DUP7"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "DUP2"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "AND"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "PUSH",
                    "value": "24"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "DUP4"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "ADD"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "PUSH",
                    "value": "44"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "DUP3"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "ADD"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "DUP7"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 11896,
                    "end": 11911,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 11896,
                    "end": 11911,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 11896,
                    "end": 11911,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 11896,
                    "end": 11911,
                    "name": "AND"
                  },
                  {
                    "begin": 11896,
                    "end": 11911,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 11874,
                    "end": 11928,
                    "name": "PUSH",
                    "value": "AEE92D33"
                  },
                  {
                    "begin": 11874,
                    "end": 11928,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "PUSH",
                    "value": "64"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "DUP1"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "DUP4"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "ADD"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 11896,
                    "end": 11911,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 11896,
                    "end": 11911,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "DUP3"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "SUB"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "ADD"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "DUP2"
                  },
                  {
                    "begin": 11896,
                    "end": 11911,
                    "name": "DUP4"
                  },
                  {
                    "begin": 11896,
                    "end": 11911,
                    "name": "DUP8"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "DUP1"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "EXTCODESIZE"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "148"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "148"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "POP"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "GAS"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "CALL"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "149"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 45,
                    "end": 61,
                    "name": "RETURNDATASIZE"
                  },
                  {
                    "begin": 42,
                    "end": 43,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 39,
                    "end": 40,
                    "name": "DUP1"
                  },
                  {
                    "begin": 24,
                    "end": 62,
                    "name": "RETURNDATACOPY"
                  },
                  {
                    "begin": 77,
                    "end": 93,
                    "name": "RETURNDATASIZE"
                  },
                  {
                    "begin": 74,
                    "end": 75,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 67,
                    "end": 94,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "149"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "POP"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "POP"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "POP"
                  },
                  {
                    "begin": 11874,
                    "end": 11958,
                    "name": "POP"
                  },
                  {
                    "begin": 11867,
                    "end": 11958,
                    "name": "PUSH [tag]",
                    "value": "151"
                  },
                  {
                    "begin": 11867,
                    "end": 11958,
                    "name": "JUMP"
                  },
                  {
                    "begin": 11837,
                    "end": 12038,
                    "name": "tag",
                    "value": "147"
                  },
                  {
                    "begin": 11837,
                    "end": 12038,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 11996,
                    "end": 12027,
                    "name": "PUSH [tag]",
                    "value": "151"
                  },
                  {
                    "begin": 12010,
                    "end": 12018,
                    "name": "DUP4"
                  },
                  {
                    "begin": 12020,
                    "end": 12026,
                    "name": "DUP4"
                  },
                  {
                    "begin": 11996,
                    "end": 12009,
                    "name": "PUSH [tag]",
                    "value": "152"
                  },
                  {
                    "begin": 11996,
                    "end": 12027,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 11996,
                    "end": 12027,
                    "name": "tag",
                    "value": "151"
                  },
                  {
                    "begin": 11996,
                    "end": 12027,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 11748,
                    "end": 12044,
                    "name": "POP"
                  },
                  {
                    "begin": 11748,
                    "end": 12044,
                    "name": "POP"
                  },
                  {
                    "begin": 11748,
                    "end": 12044,
                    "name": "POP"
                  },
                  {
                    "begin": 11748,
                    "end": 12044,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "tag",
                    "value": "49"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "PUSH",
                    "value": "A"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "DIV"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "AND"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "DUP2"
                  },
                  {
                    "begin": 9902,
                    "end": 9924,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 8501,
                    "end": 8643,
                    "name": "tag",
                    "value": "52"
                  },
                  {
                    "begin": 8501,
                    "end": 8643,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "AND"
                  },
                  {
                    "begin": 1532,
                    "end": 1542,
                    "name": "CALLER"
                  },
                  {
                    "begin": 1532,
                    "end": 1551,
                    "name": "EQ"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "PUSH [tag]",
                    "value": "154"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "REVERT"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "tag",
                    "value": "154"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 8570,
                    "end": 8594,
                    "name": "DUP2"
                  },
                  {
                    "begin": 8570,
                    "end": 8594,
                    "name": "AND"
                  },
                  {
                    "begin": 8570,
                    "end": 8594,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 8570,
                    "end": 8594,
                    "name": "DUP2"
                  },
                  {
                    "begin": 8570,
                    "end": 8594,
                    "name": "DUP2"
                  },
                  {
                    "begin": 8570,
                    "end": 8594,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 8570,
                    "end": 8583,
                    "name": "PUSH",
                    "value": "6"
                  },
                  {
                    "begin": 8570,
                    "end": 8594,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 8570,
                    "end": 8594,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 8570,
                    "end": 8594,
                    "name": "DUP2"
                  },
                  {
                    "begin": 8570,
                    "end": 8594,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 8570,
                    "end": 8594,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8570,
                    "end": 8594,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 8570,
                    "end": 8594,
                    "name": "DUP3"
                  },
                  {
                    "begin": 8570,
                    "end": 8594,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 8570,
                    "end": 8594,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 8570,
                    "end": 8601,
                    "name": "DUP1"
                  },
                  {
                    "begin": 8570,
                    "end": 8601,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT"
                  },
                  {
                    "begin": 8570,
                    "end": 8601,
                    "name": "AND"
                  },
                  {
                    "begin": 8597,
                    "end": 8601,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 8570,
                    "end": 8601,
                    "name": "OR"
                  },
                  {
                    "begin": 8570,
                    "end": 8601,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 8570,
                    "end": 8601,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 8611,
                    "end": 8636,
                    "name": "DUP2"
                  },
                  {
                    "begin": 8611,
                    "end": 8636,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 8611,
                    "end": 8636,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 8611,
                    "end": 8636,
                    "name": "DUP4"
                  },
                  {
                    "begin": 8611,
                    "end": 8636,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 8611,
                    "end": 8636,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 8611,
                    "end": 8636,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 8611,
                    "end": 8636,
                    "name": "PUSH",
                    "value": "42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC"
                  },
                  {
                    "begin": 8611,
                    "end": 8636,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 8611,
                    "end": 8636,
                    "name": "DUP2"
                  },
                  {
                    "begin": 8611,
                    "end": 8636,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 8611,
                    "end": 8636,
                    "name": "SUB"
                  },
                  {
                    "begin": 8611,
                    "end": 8636,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 8611,
                    "end": 8636,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 8611,
                    "end": 8636,
                    "name": "ADD"
                  },
                  {
                    "begin": 8611,
                    "end": 8636,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 8611,
                    "end": 8636,
                    "name": "LOG1"
                  },
                  {
                    "begin": 8501,
                    "end": 8643,
                    "name": "POP"
                  },
                  {
                    "begin": 8501,
                    "end": 8643,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 12716,
                    "end": 12928,
                    "name": "tag",
                    "value": "55"
                  },
                  {
                    "begin": 12716,
                    "end": 12928,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 12784,
                    "end": 12794,
                    "name": "PUSH",
                    "value": "A"
                  },
                  {
                    "begin": 12784,
                    "end": 12794,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 12764,
                    "end": 12768,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 12764,
                    "end": 12768,
                    "name": "SWAP1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": 12784,
                    "end": 12794,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 12784,
                    "end": 12794,
                    "name": "DIV"
                  },
                  {
                    "begin": 12784,
                    "end": 12794,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 12784,
                    "end": 12794,
                    "name": "AND"
                  },
                  {
                    "begin": 12780,
                    "end": 12922,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 12780,
                    "end": 12922,
                    "name": "PUSH [tag]",
                    "value": "157"
                  },
                  {
                    "begin": 12780,
                    "end": 12922,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 12831,
                    "end": 12846,
                    "name": "PUSH",
                    "value": "A"
                  },
                  {
                    "begin": 12831,
                    "end": 12846,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 12831,
                    "end": 12846,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 12831,
                    "end": 12846,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 12831,
                    "end": 12846,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 12831,
                    "end": 12846,
                    "name": "PUSH",
                    "value": "100"
                  },
                  {
                    "begin": 12831,
                    "end": 12846,
                    "name": "EXP"
                  },
                  {
                    "begin": 12831,
                    "end": 12846,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 12831,
                    "end": 12846,
                    "name": "DIV"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 12831,
                    "end": 12846,
                    "name": "AND"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 12817,
                    "end": 12859,
                    "name": "AND"
                  },
                  {
                    "begin": 12817,
                    "end": 12859,
                    "name": "PUSH",
                    "value": "18160DDD"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "DUP2"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "AND"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "E0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "MUL"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "DUP2"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "ADD"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "DUP1"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "DUP4"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "SUB"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "DUP2"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "DUP8"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "DUP1"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "EXTCODESIZE"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "158"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "158"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "POP"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "GAS"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "CALL"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "159"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 45,
                    "end": 61,
                    "name": "RETURNDATASIZE"
                  },
                  {
                    "begin": 42,
                    "end": 43,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 39,
                    "end": 40,
                    "name": "DUP1"
                  },
                  {
                    "begin": 24,
                    "end": 62,
                    "name": "RETURNDATACOPY"
                  },
                  {
                    "begin": 77,
                    "end": 93,
                    "name": "RETURNDATASIZE"
                  },
                  {
                    "begin": 74,
                    "end": 75,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 67,
                    "end": 94,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "159"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "POP"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "POP"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "POP"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "POP"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "RETURNDATASIZE"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "160"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "160"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 12817,
                    "end": 12861,
                    "name": "SWAP1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 12810,
                    "end": 12861,
                    "name": "PUSH [tag]",
                    "value": "161"
                  },
                  {
                    "begin": 12810,
                    "end": 12861,
                    "name": "JUMP"
                  },
                  {
                    "begin": 12780,
                    "end": 12922,
                    "name": "tag",
                    "value": "157"
                  },
                  {
                    "begin": 12780,
                    "end": 12922,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 12899,
                    "end": 12911,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 12899,
                    "end": 12911,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 12780,
                    "end": 12922,
                    "name": "tag",
                    "value": "161"
                  },
                  {
                    "begin": 12780,
                    "end": 12922,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 12716,
                    "end": 12928,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 12716,
                    "end": 12928,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 10991,
                    "end": 11346,
                    "name": "tag",
                    "value": "58"
                  },
                  {
                    "begin": 10991,
                    "end": 11346,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 7553,
                    "end": 7559,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 7553,
                    "end": 7559,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": 7553,
                    "end": 7559,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7553,
                    "end": 7559,
                    "name": "DIV"
                  },
                  {
                    "begin": 7553,
                    "end": 7559,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 7553,
                    "end": 7559,
                    "name": "AND"
                  },
                  {
                    "begin": 7552,
                    "end": 7559,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 7544,
                    "end": 7560,
                    "name": "PUSH [tag]",
                    "value": "163"
                  },
                  {
                    "begin": 7544,
                    "end": 7560,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 7544,
                    "end": 7560,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 7544,
                    "end": 7560,
                    "name": "DUP1"
                  },
                  {
                    "begin": 7544,
                    "end": 7560,
                    "name": "REVERT"
                  },
                  {
                    "begin": 7544,
                    "end": 7560,
                    "name": "tag",
                    "value": "163"
                  },
                  {
                    "begin": 7544,
                    "end": 7560,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 11094,
                    "end": 11114,
                    "name": "DUP4"
                  },
                  {
                    "begin": 11094,
                    "end": 11114,
                    "name": "AND"
                  },
                  {
                    "begin": 11094,
                    "end": 11114,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 11094,
                    "end": 11114,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 11094,
                    "end": 11114,
                    "name": "DUP2"
                  },
                  {
                    "begin": 11094,
                    "end": 11114,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 11094,
                    "end": 11107,
                    "name": "PUSH",
                    "value": "6"
                  },
                  {
                    "begin": 11094,
                    "end": 11114,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 11094,
                    "end": 11114,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 11094,
                    "end": 11114,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 11094,
                    "end": 11114,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 11094,
                    "end": 11114,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 11094,
                    "end": 11114,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 11094,
                    "end": 11114,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 11094,
                    "end": 11114,
                    "name": "AND"
                  },
                  {
                    "begin": 11093,
                    "end": 11114,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 11085,
                    "end": 11115,
                    "name": "PUSH [tag]",
                    "value": "165"
                  },
                  {
                    "begin": 11085,
                    "end": 11115,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 11085,
                    "end": 11115,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 11085,
                    "end": 11115,
                    "name": "DUP1"
                  },
                  {
                    "begin": 11085,
                    "end": 11115,
                    "name": "REVERT"
                  },
                  {
                    "begin": 11085,
                    "end": 11115,
                    "name": "tag",
                    "value": "165"
                  },
                  {
                    "begin": 11085,
                    "end": 11115,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 11129,
                    "end": 11139,
                    "name": "PUSH",
                    "value": "A"
                  },
                  {
                    "begin": 11129,
                    "end": 11139,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": 11129,
                    "end": 11139,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 11129,
                    "end": 11139,
                    "name": "DIV"
                  },
                  {
                    "begin": 11129,
                    "end": 11139,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 11129,
                    "end": 11139,
                    "name": "AND"
                  },
                  {
                    "begin": 11125,
                    "end": 11340,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 11125,
                    "end": 11340,
                    "name": "PUSH [tag]",
                    "value": "166"
                  },
                  {
                    "begin": 11125,
                    "end": 11340,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 11184,
                    "end": 11199,
                    "name": "PUSH",
                    "value": "A"
                  },
                  {
                    "begin": 11184,
                    "end": 11199,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "DUP1"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "PUSH",
                    "value": "8B477ADB00000000000000000000000000000000000000000000000000000000"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "DUP2"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 11222,
                    "end": 11232,
                    "name": "CALLER"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "DUP3"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "ADD"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "MSTORE"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "DUP7"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "DUP2"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "AND"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "PUSH",
                    "value": "24"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "DUP4"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "ADD"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "DUP6"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "DUP2"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "AND"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "PUSH",
                    "value": "44"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "DUP4"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "ADD"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "PUSH",
                    "value": "64"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "DUP3"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "ADD"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "DUP6"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 11184,
                    "end": 11199,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 11184,
                    "end": 11199,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 11184,
                    "end": 11199,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 11184,
                    "end": 11199,
                    "name": "AND"
                  },
                  {
                    "begin": 11184,
                    "end": 11199,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 11162,
                    "end": 11221,
                    "name": "PUSH",
                    "value": "8B477ADB"
                  },
                  {
                    "begin": 11162,
                    "end": 11221,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "PUSH",
                    "value": "84"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "DUP1"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "DUP4"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "ADD"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 11184,
                    "end": 11199,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 11184,
                    "end": 11199,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "DUP3"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "SUB"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "ADD"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "DUP2"
                  },
                  {
                    "begin": 11184,
                    "end": 11199,
                    "name": "DUP4"
                  },
                  {
                    "begin": 11184,
                    "end": 11199,
                    "name": "DUP8"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "DUP1"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "EXTCODESIZE"
                  },
                  {
                    "begin": 11162,
                    "end": 11253,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "148"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 11125,
                    "end": 11340,
                    "name": "tag",
                    "value": "166"
                  },
                  {
                    "begin": 11125,
                    "end": 11340,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 11291,
                    "end": 11329,
                    "name": "PUSH [tag]",
                    "value": "151"
                  },
                  {
                    "begin": 11310,
                    "end": 11315,
                    "name": "DUP4"
                  },
                  {
                    "begin": 11317,
                    "end": 11320,
                    "name": "DUP4"
                  },
                  {
                    "begin": 11322,
                    "end": 11328,
                    "name": "DUP4"
                  },
                  {
                    "begin": 11291,
                    "end": 11309,
                    "name": "PUSH [tag]",
                    "value": "171"
                  },
                  {
                    "begin": 11291,
                    "end": 11329,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "tag",
                    "value": "61"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "PUSH",
                    "value": "A"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "AND"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "DUP2"
                  },
                  {
                    "begin": 9866,
                    "end": 9896,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 2916,
                    "end": 2956,
                    "name": "tag",
                    "value": "64"
                  },
                  {
                    "begin": 2916,
                    "end": 2956,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2916,
                    "end": 2956,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 2916,
                    "end": 2956,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 2916,
                    "end": 2956,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 2916,
                    "end": 2956,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 2916,
                    "end": 2956,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 2916,
                    "end": 2956,
                    "name": "DUP2"
                  },
                  {
                    "begin": 2916,
                    "end": 2956,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 2916,
                    "end": 2956,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 2916,
                    "end": 2956,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 2916,
                    "end": 2956,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 2916,
                    "end": 2956,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 2916,
                    "end": 2956,
                    "name": "DUP2"
                  },
                  {
                    "begin": 2916,
                    "end": 2956,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 9840,
                    "end": 9860,
                    "name": "tag",
                    "value": "67"
                  },
                  {
                    "begin": 9840,
                    "end": 9860,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 9840,
                    "end": 9860,
                    "name": "PUSH",
                    "value": "9"
                  },
                  {
                    "begin": 9840,
                    "end": 9860,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 9840,
                    "end": 9860,
                    "name": "DUP2"
                  },
                  {
                    "begin": 9840,
                    "end": 9860,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 3078,
                    "end": 3104,
                    "name": "tag",
                    "value": "70"
                  },
                  {
                    "begin": 3078,
                    "end": 3104,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3078,
                    "end": 3104,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 3078,
                    "end": 3104,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 3078,
                    "end": 3104,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3078,
                    "end": 3104,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 2043,
                    "end": 2067,
                    "name": "tag",
                    "value": "73"
                  },
                  {
                    "begin": 2043,
                    "end": 2067,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 2043,
                    "end": 2067,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 2043,
                    "end": 2067,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 2043,
                    "end": 2067,
                    "name": "DUP2"
                  },
                  {
                    "begin": 2043,
                    "end": 2067,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 7970,
                    "end": 8057,
                    "name": "tag",
                    "value": "76"
                  },
                  {
                    "begin": 7970,
                    "end": 8057,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "AND"
                  },
                  {
                    "begin": 1532,
                    "end": 1542,
                    "name": "CALLER"
                  },
                  {
                    "begin": 1532,
                    "end": 1551,
                    "name": "EQ"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "PUSH [tag]",
                    "value": "173"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "REVERT"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "tag",
                    "value": "173"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 7705,
                    "end": 7711,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 7705,
                    "end": 7711,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": 7705,
                    "end": 7711,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7705,
                    "end": 7711,
                    "name": "DIV"
                  },
                  {
                    "begin": 7705,
                    "end": 7711,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 7705,
                    "end": 7711,
                    "name": "AND"
                  },
                  {
                    "begin": 7697,
                    "end": 7712,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 7697,
                    "end": 7712,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 7697,
                    "end": 7712,
                    "name": "PUSH [tag]",
                    "value": "175"
                  },
                  {
                    "begin": 7697,
                    "end": 7712,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 7697,
                    "end": 7712,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 7697,
                    "end": 7712,
                    "name": "DUP1"
                  },
                  {
                    "begin": 7697,
                    "end": 7712,
                    "name": "REVERT"
                  },
                  {
                    "begin": 7697,
                    "end": 7712,
                    "name": "tag",
                    "value": "175"
                  },
                  {
                    "begin": 7697,
                    "end": 7712,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 8032,
                    "end": 8037,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 8023,
                    "end": 8037,
                    "name": "DUP1"
                  },
                  {
                    "begin": 8023,
                    "end": 8037,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "MUL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT"
                  },
                  {
                    "begin": 8023,
                    "end": 8037,
                    "name": "AND"
                  },
                  {
                    "begin": 8023,
                    "end": 8037,
                    "name": "DUP2"
                  },
                  {
                    "begin": 8023,
                    "end": 8037,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 8043,
                    "end": 8052,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8043,
                    "end": 8052,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 8043,
                    "end": 8052,
                    "name": "PUSH",
                    "value": "7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33"
                  },
                  {
                    "begin": 8043,
                    "end": 8052,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 8032,
                    "end": 8037,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 8043,
                    "end": 8052,
                    "name": "LOG1"
                  },
                  {
                    "begin": 7970,
                    "end": 8057,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 8229,
                    "end": 8351,
                    "name": "tag",
                    "value": "79"
                  },
                  {
                    "begin": 8229,
                    "end": 8351,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 8323,
                    "end": 8344,
                    "name": "DUP2"
                  },
                  {
                    "begin": 8323,
                    "end": 8344,
                    "name": "AND"
                  },
                  {
                    "begin": 8300,
                    "end": 8304,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 8323,
                    "end": 8344,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 8323,
                    "end": 8344,
                    "name": "DUP2"
                  },
                  {
                    "begin": 8323,
                    "end": 8344,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 8323,
                    "end": 8336,
                    "name": "PUSH",
                    "value": "6"
                  },
                  {
                    "begin": 8323,
                    "end": 8344,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 8323,
                    "end": 8344,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 8323,
                    "end": 8344,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8323,
                    "end": 8344,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 8323,
                    "end": 8344,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 8323,
                    "end": 8344,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 8323,
                    "end": 8344,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 8323,
                    "end": 8344,
                    "name": "AND"
                  },
                  {
                    "begin": 8229,
                    "end": 8351,
                    "name": "tag",
                    "value": "177"
                  },
                  {
                    "begin": 8229,
                    "end": 8351,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 8229,
                    "end": 8351,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 8229,
                    "end": 8351,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 8229,
                    "end": 8351,
                    "name": "POP"
                  },
                  {
                    "begin": 8229,
                    "end": 8351,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "tag",
                    "value": "82"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "PUSH",
                    "value": "5"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "DUP4"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "DUP1"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "DUP5"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "DUP3"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4652,
                    "end": 4713,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "tag",
                    "value": "85"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "DIV"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "AND"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "DUP2"
                  },
                  {
                    "begin": 7384,
                    "end": 7410,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 11428,
                    "end": 11666,
                    "name": "tag",
                    "value": "88"
                  },
                  {
                    "begin": 11428,
                    "end": 11666,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 11505,
                    "end": 11515,
                    "name": "PUSH",
                    "value": "A"
                  },
                  {
                    "begin": 11505,
                    "end": 11515,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 11485,
                    "end": 11489,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 11485,
                    "end": 11489,
                    "name": "SWAP1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": 11505,
                    "end": 11515,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 11505,
                    "end": 11515,
                    "name": "DIV"
                  },
                  {
                    "begin": 11505,
                    "end": 11515,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 11505,
                    "end": 11515,
                    "name": "AND"
                  },
                  {
                    "begin": 11501,
                    "end": 11660,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 11501,
                    "end": 11660,
                    "name": "PUSH [tag]",
                    "value": "179"
                  },
                  {
                    "begin": 11501,
                    "end": 11660,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 11560,
                    "end": 11575,
                    "name": "PUSH",
                    "value": "A"
                  },
                  {
                    "begin": 11560,
                    "end": 11575,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "DUP1"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "PUSH",
                    "value": "70A0823100000000000000000000000000000000000000000000000000000000"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "DUP2"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "MSTORE"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "DUP6"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "DUP2"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "AND"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "DUP4"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "ADD"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 11560,
                    "end": 11575,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 11560,
                    "end": 11575,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 11560,
                    "end": 11575,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 11560,
                    "end": 11575,
                    "name": "AND"
                  },
                  {
                    "begin": 11560,
                    "end": 11575,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 11538,
                    "end": 11586,
                    "name": "PUSH",
                    "value": "70A08231"
                  },
                  {
                    "begin": 11538,
                    "end": 11586,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "PUSH",
                    "value": "24"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "DUP1"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "DUP4"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "ADD"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "DUP3"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "SUB"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "ADD"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "DUP2"
                  },
                  {
                    "begin": 11560,
                    "end": 11575,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 11560,
                    "end": 11575,
                    "name": "DUP8"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "DUP1"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "EXTCODESIZE"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "180"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "180"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "POP"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "GAS"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "CALL"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "181"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 45,
                    "end": 61,
                    "name": "RETURNDATASIZE"
                  },
                  {
                    "begin": 42,
                    "end": 43,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 39,
                    "end": 40,
                    "name": "DUP1"
                  },
                  {
                    "begin": 24,
                    "end": 62,
                    "name": "RETURNDATACOPY"
                  },
                  {
                    "begin": 77,
                    "end": 93,
                    "name": "RETURNDATASIZE"
                  },
                  {
                    "begin": 74,
                    "end": 75,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 67,
                    "end": 94,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "181"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "POP"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "POP"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "POP"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "POP"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "RETURNDATASIZE"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "182"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "182"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 11538,
                    "end": 11591,
                    "name": "SWAP1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 11531,
                    "end": 11591,
                    "name": "PUSH [tag]",
                    "value": "177"
                  },
                  {
                    "begin": 11531,
                    "end": 11591,
                    "name": "JUMP"
                  },
                  {
                    "begin": 11501,
                    "end": 11660,
                    "name": "tag",
                    "value": "179"
                  },
                  {
                    "begin": 11501,
                    "end": 11660,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 11629,
                    "end": 11649,
                    "name": "PUSH [tag]",
                    "value": "184"
                  },
                  {
                    "begin": 11645,
                    "end": 11648,
                    "name": "DUP3"
                  },
                  {
                    "begin": 11629,
                    "end": 11644,
                    "name": "PUSH [tag]",
                    "value": "185"
                  },
                  {
                    "begin": 11629,
                    "end": 11649,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 11629,
                    "end": 11649,
                    "name": "tag",
                    "value": "184"
                  },
                  {
                    "begin": 11629,
                    "end": 11649,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 11622,
                    "end": 11649,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 11622,
                    "end": 11649,
                    "name": "POP"
                  },
                  {
                    "begin": 11622,
                    "end": 11649,
                    "name": "PUSH [tag]",
                    "value": "177"
                  },
                  {
                    "begin": 11622,
                    "end": 11649,
                    "name": "JUMP"
                  },
                  {
                    "begin": 7803,
                    "end": 7888,
                    "name": "tag",
                    "value": "91"
                  },
                  {
                    "begin": 7803,
                    "end": 7888,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "AND"
                  },
                  {
                    "begin": 1532,
                    "end": 1542,
                    "name": "CALLER"
                  },
                  {
                    "begin": 1532,
                    "end": 1551,
                    "name": "EQ"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "PUSH [tag]",
                    "value": "187"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "REVERT"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "tag",
                    "value": "187"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 7553,
                    "end": 7559,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 7553,
                    "end": 7559,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": 7553,
                    "end": 7559,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7553,
                    "end": 7559,
                    "name": "DIV"
                  },
                  {
                    "begin": 7553,
                    "end": 7559,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 7553,
                    "end": 7559,
                    "name": "AND"
                  },
                  {
                    "begin": 7552,
                    "end": 7559,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 7544,
                    "end": 7560,
                    "name": "PUSH [tag]",
                    "value": "189"
                  },
                  {
                    "begin": 7544,
                    "end": 7560,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 7544,
                    "end": 7560,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 7544,
                    "end": 7560,
                    "name": "DUP1"
                  },
                  {
                    "begin": 7544,
                    "end": 7560,
                    "name": "REVERT"
                  },
                  {
                    "begin": 7544,
                    "end": 7560,
                    "name": "tag",
                    "value": "189"
                  },
                  {
                    "begin": 7544,
                    "end": 7560,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 7857,
                    "end": 7863,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 7857,
                    "end": 7870,
                    "name": "DUP1"
                  },
                  {
                    "begin": 7857,
                    "end": 7870,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "MUL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT"
                  },
                  {
                    "begin": 7857,
                    "end": 7870,
                    "name": "AND"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": 7857,
                    "end": 7870,
                    "name": "OR"
                  },
                  {
                    "begin": 7857,
                    "end": 7870,
                    "name": "DUP2"
                  },
                  {
                    "begin": 7857,
                    "end": 7870,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 7876,
                    "end": 7883,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 7876,
                    "end": 7883,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 7876,
                    "end": 7883,
                    "name": "PUSH",
                    "value": "6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625"
                  },
                  {
                    "begin": 7876,
                    "end": 7883,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 7857,
                    "end": 7863,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7876,
                    "end": 7883,
                    "name": "LOG1"
                  },
                  {
                    "begin": 7803,
                    "end": 7888,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 8357,
                    "end": 8442,
                    "name": "tag",
                    "value": "94"
                  },
                  {
                    "begin": 8357,
                    "end": 8442,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 8404,
                    "end": 8411,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 8430,
                    "end": 8435,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 8430,
                    "end": 8435,
                    "name": "AND"
                  },
                  {
                    "begin": 8357,
                    "end": 8442,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 8357,
                    "end": 8442,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "tag",
                    "value": "97"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "AND"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1188,
                    "end": 1208,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "tag",
                    "value": "100"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "PUSH",
                    "value": "8"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "DUP6"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "AND"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "PUSH",
                    "value": "100"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "MUL"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "ADD"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "AND"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "DIV"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "PUSH",
                    "value": "1F"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "DUP2"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "ADD"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "DUP5"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "DIV"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "DUP5"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "MUL"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "DUP3"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "ADD"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "DUP5"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "ADD"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "DUP2"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "DUP2"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "DUP4"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "ADD"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "DUP3"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "DUP3"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "PUSH [tag]",
                    "value": "138"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "PUSH",
                    "value": "1F"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "LT"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "PUSH [tag]",
                    "value": "139"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "PUSH",
                    "value": "100"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "DUP4"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "DIV"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "MUL"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "DUP4"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "ADD"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "PUSH [tag]",
                    "value": "138"
                  },
                  {
                    "begin": 9814,
                    "end": 9834,
                    "name": "JUMP"
                  },
                  {
                    "begin": 10590,
                    "end": 10909,
                    "name": "tag",
                    "value": "107"
                  },
                  {
                    "begin": 10590,
                    "end": 10909,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 7553,
                    "end": 7559,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 7553,
                    "end": 7559,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": 7553,
                    "end": 7559,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7553,
                    "end": 7559,
                    "name": "DIV"
                  },
                  {
                    "begin": 7553,
                    "end": 7559,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 7553,
                    "end": 7559,
                    "name": "AND"
                  },
                  {
                    "begin": 7552,
                    "end": 7559,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 7544,
                    "end": 7560,
                    "name": "PUSH [tag]",
                    "value": "196"
                  },
                  {
                    "begin": 7544,
                    "end": 7560,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 7544,
                    "end": 7560,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 7544,
                    "end": 7560,
                    "name": "DUP1"
                  },
                  {
                    "begin": 7544,
                    "end": 7560,
                    "name": "REVERT"
                  },
                  {
                    "begin": 7544,
                    "end": 7560,
                    "name": "tag",
                    "value": "196"
                  },
                  {
                    "begin": 7544,
                    "end": 7560,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 10688,
                    "end": 10698,
                    "name": "CALLER"
                  },
                  {
                    "begin": 10674,
                    "end": 10699,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 10674,
                    "end": 10699,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 10674,
                    "end": 10699,
                    "name": "DUP2"
                  },
                  {
                    "begin": 10674,
                    "end": 10699,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 10674,
                    "end": 10687,
                    "name": "PUSH",
                    "value": "6"
                  },
                  {
                    "begin": 10674,
                    "end": 10699,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 10674,
                    "end": 10699,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 10674,
                    "end": 10699,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 10674,
                    "end": 10699,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 10674,
                    "end": 10699,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 10674,
                    "end": 10699,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 10674,
                    "end": 10699,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 10674,
                    "end": 10699,
                    "name": "AND"
                  },
                  {
                    "begin": 10673,
                    "end": 10699,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 10665,
                    "end": 10700,
                    "name": "PUSH [tag]",
                    "value": "198"
                  },
                  {
                    "begin": 10665,
                    "end": 10700,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 10665,
                    "end": 10700,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 10665,
                    "end": 10700,
                    "name": "DUP1"
                  },
                  {
                    "begin": 10665,
                    "end": 10700,
                    "name": "REVERT"
                  },
                  {
                    "begin": 10665,
                    "end": 10700,
                    "name": "tag",
                    "value": "198"
                  },
                  {
                    "begin": 10665,
                    "end": 10700,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 10714,
                    "end": 10724,
                    "name": "PUSH",
                    "value": "A"
                  },
                  {
                    "begin": 10714,
                    "end": 10724,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": 10714,
                    "end": 10724,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 10714,
                    "end": 10724,
                    "name": "DIV"
                  },
                  {
                    "begin": 10714,
                    "end": 10724,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 10714,
                    "end": 10724,
                    "name": "AND"
                  },
                  {
                    "begin": 10710,
                    "end": 10903,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 10710,
                    "end": 10903,
                    "name": "PUSH [tag]",
                    "value": "199"
                  },
                  {
                    "begin": 10710,
                    "end": 10903,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 10769,
                    "end": 10784,
                    "name": "PUSH",
                    "value": "A"
                  },
                  {
                    "begin": 10769,
                    "end": 10784,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "DUP1"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "PUSH",
                    "value": "6E18980A00000000000000000000000000000000000000000000000000000000"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "DUP2"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 10803,
                    "end": 10813,
                    "name": "CALLER"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "DUP3"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "ADD"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "MSTORE"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "DUP6"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "DUP2"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "AND"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "PUSH",
                    "value": "24"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "DUP4"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "ADD"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "PUSH",
                    "value": "44"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "DUP3"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "ADD"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "DUP6"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 10769,
                    "end": 10784,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 10769,
                    "end": 10784,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 10769,
                    "end": 10784,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 10769,
                    "end": 10784,
                    "name": "AND"
                  },
                  {
                    "begin": 10769,
                    "end": 10784,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 10747,
                    "end": 10802,
                    "name": "PUSH",
                    "value": "6E18980A"
                  },
                  {
                    "begin": 10747,
                    "end": 10802,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "PUSH",
                    "value": "64"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "DUP1"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "DUP4"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "ADD"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 10769,
                    "end": 10784,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 10769,
                    "end": 10784,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "DUP3"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "SUB"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "ADD"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "DUP2"
                  },
                  {
                    "begin": 10769,
                    "end": 10784,
                    "name": "DUP4"
                  },
                  {
                    "begin": 10769,
                    "end": 10784,
                    "name": "DUP8"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "DUP1"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "EXTCODESIZE"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "200"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "200"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "POP"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "GAS"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "CALL"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "201"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 45,
                    "end": 61,
                    "name": "RETURNDATASIZE"
                  },
                  {
                    "begin": 42,
                    "end": 43,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 39,
                    "end": 40,
                    "name": "DUP1"
                  },
                  {
                    "begin": 24,
                    "end": 62,
                    "name": "RETURNDATACOPY"
                  },
                  {
                    "begin": 77,
                    "end": 93,
                    "name": "RETURNDATASIZE"
                  },
                  {
                    "begin": 74,
                    "end": 75,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 67,
                    "end": 94,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "201"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "POP"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "POP"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "POP"
                  },
                  {
                    "begin": 10747,
                    "end": 10827,
                    "name": "POP"
                  },
                  {
                    "begin": 10740,
                    "end": 10827,
                    "name": "PUSH [tag]",
                    "value": "203"
                  },
                  {
                    "begin": 10740,
                    "end": 10827,
                    "name": "JUMP"
                  },
                  {
                    "begin": 10710,
                    "end": 10903,
                    "name": "tag",
                    "value": "199"
                  },
                  {
                    "begin": 10710,
                    "end": 10903,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 10865,
                    "end": 10892,
                    "name": "PUSH [tag]",
                    "value": "203"
                  },
                  {
                    "begin": 10880,
                    "end": 10883,
                    "name": "DUP3"
                  },
                  {
                    "begin": 10885,
                    "end": 10891,
                    "name": "DUP3"
                  },
                  {
                    "begin": 10865,
                    "end": 10879,
                    "name": "PUSH [tag]",
                    "value": "204"
                  },
                  {
                    "begin": 10865,
                    "end": 10892,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 10865,
                    "end": 10892,
                    "name": "tag",
                    "value": "203"
                  },
                  {
                    "begin": 10865,
                    "end": 10892,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 10590,
                    "end": 10909,
                    "name": "POP"
                  },
                  {
                    "begin": 10590,
                    "end": 10909,
                    "name": "POP"
                  },
                  {
                    "begin": 10590,
                    "end": 10909,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 13805,
                    "end": 14183,
                    "name": "tag",
                    "value": "110"
                  },
                  {
                    "begin": 13805,
                    "end": 14183,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "AND"
                  },
                  {
                    "begin": 1532,
                    "end": 1542,
                    "name": "CALLER"
                  },
                  {
                    "begin": 1532,
                    "end": 1551,
                    "name": "EQ"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "PUSH [tag]",
                    "value": "206"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "REVERT"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "tag",
                    "value": "206"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 14001,
                    "end": 14003,
                    "name": "PUSH",
                    "value": "14"
                  },
                  {
                    "begin": 13984,
                    "end": 14003,
                    "name": "DUP3"
                  },
                  {
                    "begin": 13984,
                    "end": 14003,
                    "name": "LT"
                  },
                  {
                    "begin": 13976,
                    "end": 14004,
                    "name": "PUSH [tag]",
                    "value": "208"
                  },
                  {
                    "begin": 13976,
                    "end": 14004,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 13976,
                    "end": 14004,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 13976,
                    "end": 14004,
                    "name": "DUP1"
                  },
                  {
                    "begin": 13976,
                    "end": 14004,
                    "name": "REVERT"
                  },
                  {
                    "begin": 13976,
                    "end": 14004,
                    "name": "tag",
                    "value": "208"
                  },
                  {
                    "begin": 13976,
                    "end": 14004,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 14034,
                    "end": 14036,
                    "name": "PUSH",
                    "value": "32"
                  },
                  {
                    "begin": 14022,
                    "end": 14036,
                    "name": "DUP2"
                  },
                  {
                    "begin": 14022,
                    "end": 14036,
                    "name": "LT"
                  },
                  {
                    "begin": 14014,
                    "end": 14037,
                    "name": "PUSH [tag]",
                    "value": "209"
                  },
                  {
                    "begin": 14014,
                    "end": 14037,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 14014,
                    "end": 14037,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 14014,
                    "end": 14037,
                    "name": "DUP1"
                  },
                  {
                    "begin": 14014,
                    "end": 14037,
                    "name": "REVERT"
                  },
                  {
                    "begin": 14014,
                    "end": 14037,
                    "name": "tag",
                    "value": "209"
                  },
                  {
                    "begin": 14014,
                    "end": 14037,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 14048,
                    "end": 14063,
                    "name": "PUSH",
                    "value": "3"
                  },
                  {
                    "begin": 14048,
                    "end": 14080,
                    "name": "DUP3"
                  },
                  {
                    "begin": 14048,
                    "end": 14080,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 14048,
                    "end": 14080,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 14121,
                    "end": 14129,
                    "name": "PUSH",
                    "value": "9"
                  },
                  {
                    "begin": 14121,
                    "end": 14129,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 14103,
                    "end": 14130,
                    "name": "PUSH [tag]",
                    "value": "210"
                  },
                  {
                    "begin": 14103,
                    "end": 14130,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 14103,
                    "end": 14112,
                    "name": "DUP3"
                  },
                  {
                    "begin": 14103,
                    "end": 14112,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 14117,
                    "end": 14119,
                    "name": "PUSH",
                    "value": "A"
                  },
                  {
                    "begin": 14117,
                    "end": 14129,
                    "name": "EXP"
                  },
                  {
                    "begin": 14103,
                    "end": 14130,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 14103,
                    "end": 14116,
                    "name": "PUSH [tag]",
                    "value": "211"
                  },
                  {
                    "begin": 14103,
                    "end": 14130,
                    "name": "AND"
                  },
                  {
                    "begin": 14103,
                    "end": 14130,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 14103,
                    "end": 14130,
                    "name": "tag",
                    "value": "210"
                  },
                  {
                    "begin": 14103,
                    "end": 14130,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 14090,
                    "end": 14100,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 14090,
                    "end": 14130,
                    "name": "DUP2"
                  },
                  {
                    "begin": 14090,
                    "end": 14130,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 14090,
                    "end": 14130,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 14148,
                    "end": 14163,
                    "name": "PUSH",
                    "value": "3"
                  },
                  {
                    "begin": 14148,
                    "end": 14163,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 14141,
                    "end": 14176,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 14141,
                    "end": 14176,
                    "name": "DUP1"
                  },
                  {
                    "begin": 14141,
                    "end": 14176,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 14141,
                    "end": 14176,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 14141,
                    "end": 14176,
                    "name": "DUP3"
                  },
                  {
                    "begin": 14141,
                    "end": 14176,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 14141,
                    "end": 14176,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 14141,
                    "end": 14176,
                    "name": "DUP3"
                  },
                  {
                    "begin": 14141,
                    "end": 14176,
                    "name": "ADD"
                  },
                  {
                    "begin": 14141,
                    "end": 14176,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 14141,
                    "end": 14176,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 14141,
                    "end": 14176,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 14141,
                    "end": 14176,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 14141,
                    "end": 14176,
                    "name": "DUP2"
                  },
                  {
                    "begin": 14141,
                    "end": 14176,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 14141,
                    "end": 14176,
                    "name": "PUSH",
                    "value": "B044A1E409EAC5C48E5AF22D4AF52670DD1A99059537A78B31B48C6500A6354E"
                  },
                  {
                    "begin": 14141,
                    "end": 14176,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 14141,
                    "end": 14176,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 14141,
                    "end": 14176,
                    "name": "DUP2"
                  },
                  {
                    "begin": 14141,
                    "end": 14176,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 14141,
                    "end": 14176,
                    "name": "SUB"
                  },
                  {
                    "begin": 14141,
                    "end": 14176,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 14141,
                    "end": 14176,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 14141,
                    "end": 14176,
                    "name": "ADD"
                  },
                  {
                    "begin": 14141,
                    "end": 14176,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 14141,
                    "end": 14176,
                    "name": "LOG1"
                  },
                  {
                    "begin": 13805,
                    "end": 14183,
                    "name": "POP"
                  },
                  {
                    "begin": 13805,
                    "end": 14183,
                    "name": "POP"
                  },
                  {
                    "begin": 13805,
                    "end": 14183,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 13086,
                    "end": 13345,
                    "name": "tag",
                    "value": "113"
                  },
                  {
                    "begin": 13086,
                    "end": 13345,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "AND"
                  },
                  {
                    "begin": 1532,
                    "end": 1542,
                    "name": "CALLER"
                  },
                  {
                    "begin": 1532,
                    "end": 1551,
                    "name": "EQ"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "PUSH [tag]",
                    "value": "213"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "REVERT"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "tag",
                    "value": "213"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 13173,
                    "end": 13185,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 13173,
                    "end": 13185,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 13149,
                    "end": 13170,
                    "name": "DUP2"
                  },
                  {
                    "begin": 13149,
                    "end": 13170,
                    "name": "DUP2"
                  },
                  {
                    "begin": 13149,
                    "end": 13170,
                    "name": "ADD"
                  },
                  {
                    "begin": 13149,
                    "end": 13185,
                    "name": "GT"
                  },
                  {
                    "begin": 13141,
                    "end": 13186,
                    "name": "PUSH [tag]",
                    "value": "215"
                  },
                  {
                    "begin": 13141,
                    "end": 13186,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 13141,
                    "end": 13186,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 13141,
                    "end": 13186,
                    "name": "DUP1"
                  },
                  {
                    "begin": 13141,
                    "end": 13186,
                    "name": "REVERT"
                  },
                  {
                    "begin": 13141,
                    "end": 13186,
                    "name": "tag",
                    "value": "215"
                  },
                  {
                    "begin": 13141,
                    "end": 13186,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 13231,
                    "end": 13246,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 13240,
                    "end": 13245,
                    "name": "DUP1"
                  },
                  {
                    "begin": 13240,
                    "end": 13245,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 13240,
                    "end": 13245,
                    "name": "AND"
                  },
                  {
                    "begin": 13231,
                    "end": 13246,
                    "name": "DUP2"
                  },
                  {
                    "begin": 13231,
                    "end": 13246,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 13231,
                    "end": 13239,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 13231,
                    "end": 13246,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 13231,
                    "end": 13246,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 13231,
                    "end": 13246,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 13231,
                    "end": 13246,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 13231,
                    "end": 13246,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 13231,
                    "end": 13246,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 13204,
                    "end": 13228,
                    "name": "DUP2"
                  },
                  {
                    "begin": 13204,
                    "end": 13228,
                    "name": "DUP2"
                  },
                  {
                    "begin": 13204,
                    "end": 13228,
                    "name": "ADD"
                  },
                  {
                    "begin": 13204,
                    "end": 13246,
                    "name": "GT"
                  },
                  {
                    "begin": 13196,
                    "end": 13247,
                    "name": "PUSH [tag]",
                    "value": "216"
                  },
                  {
                    "begin": 13196,
                    "end": 13247,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 13196,
                    "end": 13247,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 13196,
                    "end": 13247,
                    "name": "DUP1"
                  },
                  {
                    "begin": 13196,
                    "end": 13247,
                    "name": "REVERT"
                  },
                  {
                    "begin": 13196,
                    "end": 13247,
                    "name": "tag",
                    "value": "216"
                  },
                  {
                    "begin": 13196,
                    "end": 13247,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 13258,
                    "end": 13273,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 13267,
                    "end": 13272,
                    "name": "DUP1"
                  },
                  {
                    "begin": 13267,
                    "end": 13272,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 13267,
                    "end": 13272,
                    "name": "AND"
                  },
                  {
                    "begin": 13258,
                    "end": 13273,
                    "name": "DUP2"
                  },
                  {
                    "begin": 13258,
                    "end": 13273,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 13258,
                    "end": 13266,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 13258,
                    "end": 13273,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 13258,
                    "end": 13273,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 13258,
                    "end": 13273,
                    "name": "DUP2"
                  },
                  {
                    "begin": 13258,
                    "end": 13273,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 13258,
                    "end": 13273,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 13258,
                    "end": 13273,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 13258,
                    "end": 13273,
                    "name": "DUP3"
                  },
                  {
                    "begin": 13258,
                    "end": 13273,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 13258,
                    "end": 13273,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 13258,
                    "end": 13283,
                    "name": "DUP1"
                  },
                  {
                    "begin": 13258,
                    "end": 13283,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 13258,
                    "end": 13283,
                    "name": "DUP5"
                  },
                  {
                    "begin": 13258,
                    "end": 13283,
                    "name": "ADD"
                  },
                  {
                    "begin": 13258,
                    "end": 13283,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 13258,
                    "end": 13283,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 13267,
                    "end": 13272,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 13293,
                    "end": 13315,
                    "name": "DUP1"
                  },
                  {
                    "begin": 13293,
                    "end": 13315,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 13293,
                    "end": 13315,
                    "name": "DUP5"
                  },
                  {
                    "begin": 13293,
                    "end": 13315,
                    "name": "ADD"
                  },
                  {
                    "begin": 13293,
                    "end": 13315,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 13293,
                    "end": 13315,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 13325,
                    "end": 13338,
                    "name": "DUP2"
                  },
                  {
                    "begin": 13325,
                    "end": 13338,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 13325,
                    "end": 13338,
                    "name": "DUP4"
                  },
                  {
                    "begin": 13325,
                    "end": 13338,
                    "name": "DUP2"
                  },
                  {
                    "begin": 13325,
                    "end": 13338,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 13325,
                    "end": 13338,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 13325,
                    "end": 13338,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 13325,
                    "end": 13338,
                    "name": "PUSH",
                    "value": "CB8241ADB0C3FDB35B70C24CE35C5EB0C17AF7431C99F827D44A445CA624176A"
                  },
                  {
                    "begin": 13325,
                    "end": 13338,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 13325,
                    "end": 13338,
                    "name": "DUP2"
                  },
                  {
                    "begin": 13325,
                    "end": 13338,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 13325,
                    "end": 13338,
                    "name": "SUB"
                  },
                  {
                    "begin": 13325,
                    "end": 13338,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 13325,
                    "end": 13338,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 13325,
                    "end": 13338,
                    "name": "ADD"
                  },
                  {
                    "begin": 13325,
                    "end": 13338,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 13325,
                    "end": 13338,
                    "name": "LOG1"
                  },
                  {
                    "begin": 13086,
                    "end": 13345,
                    "name": "POP"
                  },
                  {
                    "begin": 13086,
                    "end": 13345,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 13569,
                    "end": 13799,
                    "name": "tag",
                    "value": "116"
                  },
                  {
                    "begin": 13569,
                    "end": 13799,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "AND"
                  },
                  {
                    "begin": 1532,
                    "end": 1542,
                    "name": "CALLER"
                  },
                  {
                    "begin": 1532,
                    "end": 1551,
                    "name": "EQ"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "PUSH [tag]",
                    "value": "218"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "REVERT"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "tag",
                    "value": "218"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 13633,
                    "end": 13645,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 13633,
                    "end": 13645,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 13633,
                    "end": 13655,
                    "name": "DUP2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "GT"
                  },
                  {
                    "begin": 13633,
                    "end": 13655,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 13625,
                    "end": 13656,
                    "name": "PUSH [tag]",
                    "value": "220"
                  },
                  {
                    "begin": 13625,
                    "end": 13656,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 13625,
                    "end": 13656,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 13625,
                    "end": 13656,
                    "name": "DUP1"
                  },
                  {
                    "begin": 13625,
                    "end": 13656,
                    "name": "REVERT"
                  },
                  {
                    "begin": 13625,
                    "end": 13656,
                    "name": "tag",
                    "value": "220"
                  },
                  {
                    "begin": 13625,
                    "end": 13656,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 13674,
                    "end": 13689,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 13683,
                    "end": 13688,
                    "name": "DUP1"
                  },
                  {
                    "begin": 13683,
                    "end": 13688,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 13683,
                    "end": 13688,
                    "name": "AND"
                  },
                  {
                    "begin": 13674,
                    "end": 13689,
                    "name": "DUP2"
                  },
                  {
                    "begin": 13674,
                    "end": 13689,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 13674,
                    "end": 13682,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 13674,
                    "end": 13689,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 13674,
                    "end": 13689,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 13674,
                    "end": 13689,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 13674,
                    "end": 13689,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 13674,
                    "end": 13689,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 13674,
                    "end": 13689,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 13674,
                    "end": 13699,
                    "name": "DUP2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "GT"
                  },
                  {
                    "begin": 13674,
                    "end": 13699,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 13666,
                    "end": 13700,
                    "name": "PUSH [tag]",
                    "value": "221"
                  },
                  {
                    "begin": 13666,
                    "end": 13700,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 13666,
                    "end": 13700,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 13666,
                    "end": 13700,
                    "name": "DUP1"
                  },
                  {
                    "begin": 13666,
                    "end": 13700,
                    "name": "REVERT"
                  },
                  {
                    "begin": 13666,
                    "end": 13700,
                    "name": "tag",
                    "value": "221"
                  },
                  {
                    "begin": 13666,
                    "end": 13700,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 13711,
                    "end": 13723,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 13711,
                    "end": 13733,
                    "name": "DUP1"
                  },
                  {
                    "begin": 13711,
                    "end": 13733,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 13711,
                    "end": 13733,
                    "name": "DUP3"
                  },
                  {
                    "begin": 13711,
                    "end": 13733,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 13711,
                    "end": 13733,
                    "name": "SUB"
                  },
                  {
                    "begin": 13711,
                    "end": 13733,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 13711,
                    "end": 13733,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 13711,
                    "end": 13723,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 13752,
                    "end": 13757,
                    "name": "DUP1"
                  },
                  {
                    "begin": 13752,
                    "end": 13757,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 13752,
                    "end": 13757,
                    "name": "AND"
                  },
                  {
                    "begin": 13743,
                    "end": 13758,
                    "name": "DUP2"
                  },
                  {
                    "begin": 13743,
                    "end": 13758,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 13743,
                    "end": 13751,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 13743,
                    "end": 13758,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 13743,
                    "end": 13758,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 13743,
                    "end": 13758,
                    "name": "DUP2"
                  },
                  {
                    "begin": 13743,
                    "end": 13758,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 13743,
                    "end": 13758,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 13743,
                    "end": 13758,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 13743,
                    "end": 13758,
                    "name": "DUP3"
                  },
                  {
                    "begin": 13743,
                    "end": 13758,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 13743,
                    "end": 13758,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 13743,
                    "end": 13768,
                    "name": "DUP1"
                  },
                  {
                    "begin": 13743,
                    "end": 13768,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 13743,
                    "end": 13768,
                    "name": "DUP5"
                  },
                  {
                    "begin": 13743,
                    "end": 13768,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 13743,
                    "end": 13768,
                    "name": "SUB"
                  },
                  {
                    "begin": 13743,
                    "end": 13768,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 13743,
                    "end": 13768,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 13778,
                    "end": 13792,
                    "name": "DUP2"
                  },
                  {
                    "begin": 13778,
                    "end": 13792,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 13778,
                    "end": 13792,
                    "name": "DUP4"
                  },
                  {
                    "begin": 13778,
                    "end": 13792,
                    "name": "DUP2"
                  },
                  {
                    "begin": 13778,
                    "end": 13792,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 13778,
                    "end": 13792,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 13778,
                    "end": 13792,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 13778,
                    "end": 13792,
                    "name": "PUSH",
                    "value": "702D5967F45F6513A38FFC42D6BA9BF230BD40E8F53B16363C7EB4FD2DEB9A44"
                  },
                  {
                    "begin": 13778,
                    "end": 13792,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 13778,
                    "end": 13792,
                    "name": "DUP2"
                  },
                  {
                    "begin": 13778,
                    "end": 13792,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 13778,
                    "end": 13792,
                    "name": "SUB"
                  },
                  {
                    "begin": 13778,
                    "end": 13792,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 13778,
                    "end": 13792,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 13778,
                    "end": 13792,
                    "name": "ADD"
                  },
                  {
                    "begin": 13778,
                    "end": 13792,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 13778,
                    "end": 13792,
                    "name": "LOG1"
                  },
                  {
                    "begin": 13569,
                    "end": 13799,
                    "name": "POP"
                  },
                  {
                    "begin": 13569,
                    "end": 13799,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 12126,
                    "end": 12413,
                    "name": "tag",
                    "value": "119"
                  },
                  {
                    "begin": 12126,
                    "end": 12413,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 12234,
                    "end": 12244,
                    "name": "PUSH",
                    "value": "A"
                  },
                  {
                    "begin": 12234,
                    "end": 12244,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 12204,
                    "end": 12218,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 12204,
                    "end": 12218,
                    "name": "SWAP1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": 12234,
                    "end": 12244,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 12234,
                    "end": 12244,
                    "name": "DIV"
                  },
                  {
                    "begin": 12234,
                    "end": 12244,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 12234,
                    "end": 12244,
                    "name": "AND"
                  },
                  {
                    "begin": 12230,
                    "end": 12407,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 12230,
                    "end": 12407,
                    "name": "PUSH [tag]",
                    "value": "223"
                  },
                  {
                    "begin": 12230,
                    "end": 12407,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 12281,
                    "end": 12296,
                    "name": "PUSH",
                    "value": "A"
                  },
                  {
                    "begin": 12281,
                    "end": 12296,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "DUP1"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "PUSH",
                    "value": "DD62ED3E00000000000000000000000000000000000000000000000000000000"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "DUP2"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "MSTORE"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "DUP7"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "DUP2"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "AND"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "DUP4"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "ADD"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "DUP6"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "DUP2"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "AND"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "PUSH",
                    "value": "24"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "DUP4"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "ADD"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 12281,
                    "end": 12296,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 12281,
                    "end": 12296,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 12281,
                    "end": 12296,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 12281,
                    "end": 12296,
                    "name": "AND"
                  },
                  {
                    "begin": 12281,
                    "end": 12296,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 12267,
                    "end": 12307,
                    "name": "PUSH",
                    "value": "DD62ED3E"
                  },
                  {
                    "begin": 12267,
                    "end": 12307,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "PUSH",
                    "value": "44"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "DUP1"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "DUP4"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "ADD"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "DUP3"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "SUB"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "ADD"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "DUP2"
                  },
                  {
                    "begin": 12281,
                    "end": 12296,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 12281,
                    "end": 12296,
                    "name": "DUP8"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "DUP1"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "EXTCODESIZE"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "224"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 30,
                    "end": 31,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 27,
                    "end": 28,
                    "name": "DUP1"
                  },
                  {
                    "begin": 20,
                    "end": 32,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "224"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "POP"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "GAS"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "CALL"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 8,
                    "end": 17,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "PUSH [tag]",
                    "value": "225"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 45,
                    "end": 61,
                    "name": "RETURNDATASIZE"
                  },
                  {
                    "begin": 42,
                    "end": 43,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 39,
                    "end": 40,
                    "name": "DUP1"
                  },
                  {
                    "begin": 24,
                    "end": 62,
                    "name": "RETURNDATACOPY"
                  },
                  {
                    "begin": 77,
                    "end": 93,
                    "name": "RETURNDATASIZE"
                  },
                  {
                    "begin": 74,
                    "end": 75,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 67,
                    "end": 94,
                    "name": "REVERT"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "tag",
                    "value": "225"
                  },
                  {
                    "begin": 5,
                    "end": 7,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "POP"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "POP"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "POP"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "POP"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "RETURNDATASIZE"
                  },
                  {
                    "begin": 13,
                    "end": 15,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 8,
                    "end": 11,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5,
                    "end": 16,
                    "name": "LT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "PUSH [tag]",
                    "value": "226"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 29,
                    "end": 30,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 26,
                    "end": 27,
                    "name": "DUP1"
                  },
                  {
                    "begin": 19,
                    "end": 31,
                    "name": "REVERT"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "tag",
                    "value": "226"
                  },
                  {
                    "begin": 2,
                    "end": 4,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 12267,
                    "end": 12325,
                    "name": "SWAP1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 12260,
                    "end": 12325,
                    "name": "PUSH [tag]",
                    "value": "227"
                  },
                  {
                    "begin": 12260,
                    "end": 12325,
                    "name": "JUMP"
                  },
                  {
                    "begin": 12230,
                    "end": 12407,
                    "name": "tag",
                    "value": "223"
                  },
                  {
                    "begin": 12230,
                    "end": 12407,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 12363,
                    "end": 12396,
                    "name": "PUSH [tag]",
                    "value": "228"
                  },
                  {
                    "begin": 12379,
                    "end": 12385,
                    "name": "DUP4"
                  },
                  {
                    "begin": 12387,
                    "end": 12395,
                    "name": "DUP4"
                  },
                  {
                    "begin": 12363,
                    "end": 12378,
                    "name": "PUSH [tag]",
                    "value": "229"
                  },
                  {
                    "begin": 12363,
                    "end": 12396,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 12363,
                    "end": 12396,
                    "name": "tag",
                    "value": "228"
                  },
                  {
                    "begin": 12363,
                    "end": 12396,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 12356,
                    "end": 12396,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 12356,
                    "end": 12396,
                    "name": "POP"
                  },
                  {
                    "begin": 12230,
                    "end": 12407,
                    "name": "tag",
                    "value": "227"
                  },
                  {
                    "begin": 12230,
                    "end": 12407,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 12126,
                    "end": 12413,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 12126,
                    "end": 12413,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 12126,
                    "end": 12413,
                    "name": "POP"
                  },
                  {
                    "begin": 12126,
                    "end": 12413,
                    "name": "POP"
                  },
                  {
                    "begin": 12126,
                    "end": 12413,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 3041,
                    "end": 3072,
                    "name": "tag",
                    "value": "122"
                  },
                  {
                    "begin": 3041,
                    "end": 3072,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3041,
                    "end": 3072,
                    "name": "PUSH",
                    "value": "3"
                  },
                  {
                    "begin": 3041,
                    "end": 3072,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 3041,
                    "end": 3072,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3041,
                    "end": 3072,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 8448,
                    "end": 8494,
                    "name": "tag",
                    "value": "125"
                  },
                  {
                    "begin": 8448,
                    "end": 8494,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 8448,
                    "end": 8494,
                    "name": "PUSH",
                    "value": "6"
                  },
                  {
                    "begin": 8448,
                    "end": 8494,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 8448,
                    "end": 8494,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 8448,
                    "end": 8494,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 8448,
                    "end": 8494,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 8448,
                    "end": 8494,
                    "name": "DUP2"
                  },
                  {
                    "begin": 8448,
                    "end": 8494,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 8448,
                    "end": 8494,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8448,
                    "end": 8494,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 8448,
                    "end": 8494,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 8448,
                    "end": 8494,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 8448,
                    "end": 8494,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 8448,
                    "end": 8494,
                    "name": "AND"
                  },
                  {
                    "begin": 8448,
                    "end": 8494,
                    "name": "DUP2"
                  },
                  {
                    "begin": 8448,
                    "end": 8494,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 8649,
                    "end": 8806,
                    "name": "tag",
                    "value": "128"
                  },
                  {
                    "begin": 8649,
                    "end": 8806,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "AND"
                  },
                  {
                    "begin": 1532,
                    "end": 1542,
                    "name": "CALLER"
                  },
                  {
                    "begin": 1532,
                    "end": 1551,
                    "name": "EQ"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "PUSH [tag]",
                    "value": "231"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "REVERT"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "tag",
                    "value": "231"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 8724,
                    "end": 8751,
                    "name": "DUP2"
                  },
                  {
                    "begin": 8724,
                    "end": 8751,
                    "name": "AND"
                  },
                  {
                    "begin": 8754,
                    "end": 8759,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 8724,
                    "end": 8751,
                    "name": "DUP2"
                  },
                  {
                    "begin": 8724,
                    "end": 8751,
                    "name": "DUP2"
                  },
                  {
                    "begin": 8724,
                    "end": 8751,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 8724,
                    "end": 8737,
                    "name": "PUSH",
                    "value": "6"
                  },
                  {
                    "begin": 8724,
                    "end": 8751,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 8724,
                    "end": 8751,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 8724,
                    "end": 8751,
                    "name": "DUP2"
                  },
                  {
                    "begin": 8724,
                    "end": 8751,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 8724,
                    "end": 8751,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8724,
                    "end": 8751,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 8724,
                    "end": 8751,
                    "name": "DUP3"
                  },
                  {
                    "begin": 8724,
                    "end": 8751,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 8724,
                    "end": 8751,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 8724,
                    "end": 8759,
                    "name": "DUP1"
                  },
                  {
                    "begin": 8724,
                    "end": 8759,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT"
                  },
                  {
                    "begin": 8724,
                    "end": 8759,
                    "name": "AND"
                  },
                  {
                    "begin": 8724,
                    "end": 8759,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 8724,
                    "end": 8759,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 8769,
                    "end": 8799,
                    "name": "DUP2"
                  },
                  {
                    "begin": 8769,
                    "end": 8799,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 8769,
                    "end": 8799,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 8769,
                    "end": 8799,
                    "name": "DUP4"
                  },
                  {
                    "begin": 8769,
                    "end": 8799,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 8769,
                    "end": 8799,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 8769,
                    "end": 8799,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 8769,
                    "end": 8799,
                    "name": "PUSH",
                    "value": "D7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C"
                  },
                  {
                    "begin": 8769,
                    "end": 8799,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 8769,
                    "end": 8799,
                    "name": "DUP2"
                  },
                  {
                    "begin": 8769,
                    "end": 8799,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 8769,
                    "end": 8799,
                    "name": "SUB"
                  },
                  {
                    "begin": 8769,
                    "end": 8799,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 8769,
                    "end": 8799,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 8769,
                    "end": 8799,
                    "name": "ADD"
                  },
                  {
                    "begin": 8769,
                    "end": 8799,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 8769,
                    "end": 8799,
                    "name": "LOG1"
                  },
                  {
                    "begin": 8649,
                    "end": 8806,
                    "name": "POP"
                  },
                  {
                    "begin": 8649,
                    "end": 8806,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 4720,
                    "end": 4762,
                    "name": "tag",
                    "value": "131"
                  },
                  {
                    "begin": 4720,
                    "end": 4762,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT"
                  },
                  {
                    "begin": 4720,
                    "end": 4762,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4720,
                    "end": 4762,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "tag",
                    "value": "134"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "AND"
                  },
                  {
                    "begin": 1532,
                    "end": 1542,
                    "name": "CALLER"
                  },
                  {
                    "begin": 1532,
                    "end": 1551,
                    "name": "EQ"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "PUSH [tag]",
                    "value": "234"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "REVERT"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "tag",
                    "value": "234"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1814,
                    "end": 1836,
                    "name": "DUP2"
                  },
                  {
                    "begin": 1814,
                    "end": 1836,
                    "name": "AND"
                  },
                  {
                    "begin": 1814,
                    "end": 1836,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 1810,
                    "end": 1879,
                    "name": "PUSH [tag]",
                    "value": "236"
                  },
                  {
                    "begin": 1810,
                    "end": 1879,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1852,
                    "end": 1857,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1852,
                    "end": 1868,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1852,
                    "end": 1868,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT"
                  },
                  {
                    "begin": 1852,
                    "end": 1868,
                    "name": "AND"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1852,
                    "end": 1868,
                    "name": "DUP4"
                  },
                  {
                    "begin": 1852,
                    "end": 1868,
                    "name": "AND"
                  },
                  {
                    "begin": 1852,
                    "end": 1868,
                    "name": "OR"
                  },
                  {
                    "begin": 1852,
                    "end": 1868,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 1852,
                    "end": 1868,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 1810,
                    "end": 1879,
                    "name": "tag",
                    "value": "236"
                  },
                  {
                    "begin": 1810,
                    "end": 1879,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "POP"
                  },
                  {
                    "begin": 1738,
                    "end": 1885,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 8812,
                    "end": 9130,
                    "name": "tag",
                    "value": "137"
                  },
                  {
                    "begin": 8812,
                    "end": 9130,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 8943,
                    "end": 8958,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 1546,
                    "end": 1551,
                    "name": "AND"
                  },
                  {
                    "begin": 1532,
                    "end": 1542,
                    "name": "CALLER"
                  },
                  {
                    "begin": 1532,
                    "end": 1551,
                    "name": "EQ"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "PUSH [tag]",
                    "value": "238"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "DUP1"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "REVERT"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "tag",
                    "value": "238"
                  },
                  {
                    "begin": 1524,
                    "end": 1552,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 8901,
                    "end": 8932,
                    "name": "DUP3"
                  },
                  {
                    "begin": 8901,
                    "end": 8932,
                    "name": "AND"
                  },
                  {
                    "begin": 8901,
                    "end": 8932,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 8901,
                    "end": 8932,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 8901,
                    "end": 8932,
                    "name": "DUP2"
                  },
                  {
                    "begin": 8901,
                    "end": 8932,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 8901,
                    "end": 8914,
                    "name": "PUSH",
                    "value": "6"
                  },
                  {
                    "begin": 8901,
                    "end": 8932,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 8901,
                    "end": 8932,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 8901,
                    "end": 8932,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8901,
                    "end": 8932,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 8901,
                    "end": 8932,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 8901,
                    "end": 8932,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 8901,
                    "end": 8932,
                    "name": "PUSH",
                    "value": "FF"
                  },
                  {
                    "begin": 8901,
                    "end": 8932,
                    "name": "AND"
                  },
                  {
                    "begin": 8893,
                    "end": 8933,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 8893,
                    "end": 8933,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 8893,
                    "end": 8933,
                    "name": "PUSH [tag]",
                    "value": "240"
                  },
                  {
                    "begin": 8893,
                    "end": 8933,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 8893,
                    "end": 8933,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 8893,
                    "end": 8933,
                    "name": "DUP1"
                  },
                  {
                    "begin": 8893,
                    "end": 8933,
                    "name": "REVERT"
                  },
                  {
                    "begin": 8893,
                    "end": 8933,
                    "name": "tag",
                    "value": "240"
                  },
                  {
                    "begin": 8893,
                    "end": 8933,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 8961,
                    "end": 8988,
                    "name": "PUSH [tag]",
                    "value": "241"
                  },
                  {
                    "begin": 8971,
                    "end": 8987,
                    "name": "DUP3"
                  },
                  {
                    "begin": 8961,
                    "end": 8970,
                    "name": "PUSH [tag]",
                    "value": "88"
                  },
                  {
                    "begin": 8961,
                    "end": 8988,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 8961,
                    "end": 8988,
                    "name": "tag",
                    "value": "241"
                  },
                  {
                    "begin": 8961,
                    "end": 8988,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 8998,
                    "end": 9024,
                    "name": "DUP4"
                  },
                  {
                    "begin": 8998,
                    "end": 9024,
                    "name": "AND"
                  },
                  {
                    "begin": 9027,
                    "end": 9028,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 8998,
                    "end": 9024,
                    "name": "DUP2"
                  },
                  {
                    "begin": 8998,
                    "end": 9024,
                    "name": "DUP2"
                  },
                  {
                    "begin": 8998,
                    "end": 9024,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 8998,
                    "end": 9006,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 8998,
                    "end": 9024,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 8998,
                    "end": 9024,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 8998,
                    "end": 9024,
                    "name": "DUP2"
                  },
                  {
                    "begin": 8998,
                    "end": 9024,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 8998,
                    "end": 9024,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 8998,
                    "end": 9024,
                    "name": "DUP1"
                  },
                  {
                    "begin": 8998,
                    "end": 9024,
                    "name": "DUP4"
                  },
                  {
                    "begin": 8998,
                    "end": 9024,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 8998,
                    "end": 9028,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 8998,
                    "end": 9028,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 8998,
                    "end": 9028,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 8998,
                    "end": 9028,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 9038,
                    "end": 9050,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": 9038,
                    "end": 9064,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9038,
                    "end": 9064,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 9038,
                    "end": 9064,
                    "name": "DUP6"
                  },
                  {
                    "begin": 9038,
                    "end": 9064,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9038,
                    "end": 9064,
                    "name": "SUB"
                  },
                  {
                    "begin": 9038,
                    "end": 9064,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9038,
                    "end": 9064,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 9074,
                    "end": 9123,
                    "name": "DUP2"
                  },
                  {
                    "begin": 9074,
                    "end": 9123,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 9074,
                    "end": 9123,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 9074,
                    "end": 9123,
                    "name": "DUP4"
                  },
                  {
                    "begin": 9074,
                    "end": 9123,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 9074,
                    "end": 9123,
                    "name": "DUP3"
                  },
                  {
                    "begin": 9074,
                    "end": 9123,
                    "name": "ADD"
                  },
                  {
                    "begin": 9074,
                    "end": 9123,
                    "name": "DUP4"
                  },
                  {
                    "begin": 9074,
                    "end": 9123,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9074,
                    "end": 9123,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 9074,
                    "end": 9123,
                    "name": "DUP1"
                  },
                  {
                    "begin": 9074,
                    "end": 9123,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 8943,
                    "end": 8988,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 8943,
                    "end": 8988,
                    "name": "SWAP4"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 9074,
                    "end": 9123,
                    "name": "PUSH",
                    "value": "61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6"
                  },
                  {
                    "begin": 9074,
                    "end": 9123,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 9074,
                    "end": 9123,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 9074,
                    "end": 9123,
                    "name": "DUP3"
                  },
                  {
                    "begin": 9074,
                    "end": 9123,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9074,
                    "end": 9123,
                    "name": "SUB"
                  },
                  {
                    "begin": 9074,
                    "end": 9123,
                    "name": "ADD"
                  },
                  {
                    "begin": 9074,
                    "end": 9123,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 9074,
                    "end": 9123,
                    "name": "LOG1"
                  },
                  {
                    "begin": 8812,
                    "end": 9130,
                    "name": "POP"
                  },
                  {
                    "begin": 8812,
                    "end": 9130,
                    "name": "POP"
                  },
                  {
                    "begin": 8812,
                    "end": 9130,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 6164,
                    "end": 6727,
                    "name": "tag",
                    "value": "152"
                  },
                  {
                    "begin": 6164,
                    "end": 6727,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 6235,
                    "end": 6241,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 3251,
                    "end": 3259,
                    "name": "PUSH",
                    "value": "44"
                  },
                  {
                    "begin": 3233,
                    "end": 3241,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 3233,
                    "end": 3259,
                    "name": "LT"
                  },
                  {
                    "begin": 3231,
                    "end": 3260,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 3223,
                    "end": 3261,
                    "name": "PUSH [tag]",
                    "value": "243"
                  },
                  {
                    "begin": 3223,
                    "end": 3261,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 3223,
                    "end": 3261,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 3223,
                    "end": 3261,
                    "name": "DUP1"
                  },
                  {
                    "begin": 3223,
                    "end": 3261,
                    "name": "REVERT"
                  },
                  {
                    "begin": 3223,
                    "end": 3261,
                    "name": "tag",
                    "value": "243"
                  },
                  {
                    "begin": 3223,
                    "end": 3261,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 6569,
                    "end": 6580,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6569,
                    "end": 6580,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 6569,
                    "end": 6580,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6569,
                    "end": 6580,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 6569,
                    "end": 6580,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6568,
                    "end": 6621,
                    "name": "PUSH [tag]",
                    "value": "245"
                  },
                  {
                    "begin": 6568,
                    "end": 6621,
                    "name": "JUMPI"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 6594,
                    "end": 6604,
                    "name": "CALLER"
                  },
                  {
                    "begin": 6586,
                    "end": 6605,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 6586,
                    "end": 6605,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6586,
                    "end": 6605,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6586,
                    "end": 6605,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6586,
                    "end": 6593,
                    "name": "PUSH",
                    "value": "5"
                  },
                  {
                    "begin": 6586,
                    "end": 6605,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 6586,
                    "end": 6605,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6586,
                    "end": 6605,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6586,
                    "end": 6605,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6586,
                    "end": 6605,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 6586,
                    "end": 6605,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6586,
                    "end": 6605,
                    "name": "DUP4"
                  },
                  {
                    "begin": 6586,
                    "end": 6605,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 6586,
                    "end": 6615,
                    "name": "DUP8"
                  },
                  {
                    "begin": 6586,
                    "end": 6615,
                    "name": "AND"
                  },
                  {
                    "begin": 6586,
                    "end": 6615,
                    "name": "DUP5"
                  },
                  {
                    "begin": 6586,
                    "end": 6615,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6586,
                    "end": 6615,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6586,
                    "end": 6615,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 6586,
                    "end": 6615,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6586,
                    "end": 6615,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6586,
                    "end": 6615,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 6586,
                    "end": 6615,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 6586,
                    "end": 6620,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 6586,
                    "end": 6620,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 6568,
                    "end": 6621,
                    "name": "tag",
                    "value": "245"
                  },
                  {
                    "begin": 6568,
                    "end": 6621,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 6566,
                    "end": 6622,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 6558,
                    "end": 6623,
                    "name": "PUSH [tag]",
                    "value": "246"
                  },
                  {
                    "begin": 6558,
                    "end": 6623,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 6558,
                    "end": 6623,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 6558,
                    "end": 6623,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6558,
                    "end": 6623,
                    "name": "REVERT"
                  },
                  {
                    "begin": 6558,
                    "end": 6623,
                    "name": "tag",
                    "value": "246"
                  },
                  {
                    "begin": 6558,
                    "end": 6623,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 6642,
                    "end": 6652,
                    "name": "CALLER"
                  },
                  {
                    "begin": 6634,
                    "end": 6653,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 6634,
                    "end": 6653,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6634,
                    "end": 6653,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6634,
                    "end": 6653,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6634,
                    "end": 6641,
                    "name": "PUSH",
                    "value": "5"
                  },
                  {
                    "begin": 6634,
                    "end": 6653,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 6634,
                    "end": 6653,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6634,
                    "end": 6653,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6634,
                    "end": 6653,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6634,
                    "end": 6653,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 6634,
                    "end": 6653,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6634,
                    "end": 6653,
                    "name": "DUP4"
                  },
                  {
                    "begin": 6634,
                    "end": 6653,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 6634,
                    "end": 6663,
                    "name": "DUP9"
                  },
                  {
                    "begin": 6634,
                    "end": 6663,
                    "name": "AND"
                  },
                  {
                    "begin": 6634,
                    "end": 6663,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6634,
                    "end": 6663,
                    "name": "DUP6"
                  },
                  {
                    "begin": 6634,
                    "end": 6663,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6634,
                    "end": 6663,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6634,
                    "end": 6663,
                    "name": "DUP4"
                  },
                  {
                    "begin": 6634,
                    "end": 6663,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6634,
                    "end": 6663,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 6634,
                    "end": 6663,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6634,
                    "end": 6663,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6634,
                    "end": 6663,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 6634,
                    "end": 6672,
                    "name": "DUP7"
                  },
                  {
                    "begin": 6634,
                    "end": 6672,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6634,
                    "end": 6672,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 6682,
                    "end": 6720,
                    "name": "DUP1"
                  },
                  {
                    "begin": 6682,
                    "end": 6720,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 6682,
                    "end": 6720,
                    "name": "DUP7"
                  },
                  {
                    "begin": 6682,
                    "end": 6720,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6682,
                    "end": 6720,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 6682,
                    "end": 6720,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6682,
                    "end": 6720,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 6634,
                    "end": 6663,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 6634,
                    "end": 6663,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 6642,
                    "end": 6652,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 6682,
                    "end": 6720,
                    "name": "PUSH",
                    "value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
                  },
                  {
                    "begin": 6682,
                    "end": 6720,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 6682,
                    "end": 6720,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 6682,
                    "end": 6720,
                    "name": "DUP2"
                  },
                  {
                    "begin": 6682,
                    "end": 6720,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6682,
                    "end": 6720,
                    "name": "SUB"
                  },
                  {
                    "begin": 6682,
                    "end": 6720,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6682,
                    "end": 6720,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 6682,
                    "end": 6720,
                    "name": "ADD"
                  },
                  {
                    "begin": 6682,
                    "end": 6720,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 6682,
                    "end": 6720,
                    "name": "LOG3"
                  },
                  {
                    "begin": 6164,
                    "end": 6727,
                    "name": "POP"
                  },
                  {
                    "begin": 6164,
                    "end": 6727,
                    "name": "POP"
                  },
                  {
                    "begin": 6164,
                    "end": 6727,
                    "name": "POP"
                  },
                  {
                    "begin": 6164,
                    "end": 6727,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 5044,
                    "end": 5924,
                    "name": "tag",
                    "value": "171"
                  },
                  {
                    "begin": 5044,
                    "end": 5924,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 5148,
                    "end": 5162,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5148,
                    "end": 5162,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5148,
                    "end": 5162,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5130,
                    "end": 5136,
                    "name": "PUSH",
                    "value": "60"
                  },
                  {
                    "begin": 3251,
                    "end": 3259,
                    "name": "PUSH",
                    "value": "64"
                  },
                  {
                    "begin": 3233,
                    "end": 3241,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 3233,
                    "end": 3259,
                    "name": "LT"
                  },
                  {
                    "begin": 3231,
                    "end": 3260,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 3223,
                    "end": 3261,
                    "name": "PUSH [tag]",
                    "value": "248"
                  },
                  {
                    "begin": 3223,
                    "end": 3261,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 3223,
                    "end": 3261,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 3223,
                    "end": 3261,
                    "name": "DUP1"
                  },
                  {
                    "begin": 3223,
                    "end": 3261,
                    "name": "REVERT"
                  },
                  {
                    "begin": 3223,
                    "end": 3261,
                    "name": "tag",
                    "value": "248"
                  },
                  {
                    "begin": 3223,
                    "end": 3261,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5165,
                    "end": 5179,
                    "name": "DUP8"
                  },
                  {
                    "begin": 5165,
                    "end": 5179,
                    "name": "AND"
                  },
                  {
                    "begin": 5165,
                    "end": 5179,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5165,
                    "end": 5179,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5165,
                    "end": 5179,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5165,
                    "end": 5179,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5165,
                    "end": 5172,
                    "name": "PUSH",
                    "value": "5"
                  },
                  {
                    "begin": 5165,
                    "end": 5179,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5165,
                    "end": 5179,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5165,
                    "end": 5179,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5165,
                    "end": 5179,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5165,
                    "end": 5179,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5165,
                    "end": 5179,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5165,
                    "end": 5179,
                    "name": "DUP4"
                  },
                  {
                    "begin": 5165,
                    "end": 5179,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5180,
                    "end": 5190,
                    "name": "CALLER"
                  },
                  {
                    "begin": 5165,
                    "end": 5191,
                    "name": "DUP5"
                  },
                  {
                    "begin": 5165,
                    "end": 5191,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5165,
                    "end": 5191,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5165,
                    "end": 5191,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 5165,
                    "end": 5191,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5165,
                    "end": 5191,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5165,
                    "end": 5191,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5165,
                    "end": 5191,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 5380,
                    "end": 5395,
                    "name": "PUSH",
                    "value": "3"
                  },
                  {
                    "begin": 5380,
                    "end": 5395,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 5165,
                    "end": 5191,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5165,
                    "end": 5191,
                    "name": "SWAP5"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 5368,
                    "end": 5408,
                    "name": "PUSH [tag]",
                    "value": "250"
                  },
                  {
                    "begin": 5368,
                    "end": 5408,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5402,
                    "end": 5407,
                    "name": "PUSH",
                    "value": "2710"
                  },
                  {
                    "begin": 5402,
                    "end": 5407,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5369,
                    "end": 5396,
                    "name": "PUSH [tag]",
                    "value": "251"
                  },
                  {
                    "begin": 5369,
                    "end": 5396,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5369,
                    "end": 5375,
                    "name": "DUP9"
                  },
                  {
                    "begin": 5369,
                    "end": 5375,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5369,
                    "end": 5396,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 5369,
                    "end": 5379,
                    "name": "PUSH [tag]",
                    "value": "211"
                  },
                  {
                    "begin": 5369,
                    "end": 5396,
                    "name": "AND"
                  },
                  {
                    "begin": 5369,
                    "end": 5396,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 5369,
                    "end": 5396,
                    "name": "tag",
                    "value": "251"
                  },
                  {
                    "begin": 5369,
                    "end": 5396,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 5368,
                    "end": 5401,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5368,
                    "end": 5408,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 5368,
                    "end": 5401,
                    "name": "PUSH [tag]",
                    "value": "252"
                  },
                  {
                    "begin": 5368,
                    "end": 5408,
                    "name": "AND"
                  },
                  {
                    "begin": 5368,
                    "end": 5408,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 5368,
                    "end": 5408,
                    "name": "tag",
                    "value": "250"
                  },
                  {
                    "begin": 5368,
                    "end": 5408,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 5357,
                    "end": 5408,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 5357,
                    "end": 5408,
                    "name": "POP"
                  },
                  {
                    "begin": 5428,
                    "end": 5438,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 5428,
                    "end": 5438,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 5422,
                    "end": 5425,
                    "name": "DUP4"
                  },
                  {
                    "begin": 5422,
                    "end": 5438,
                    "name": "GT"
                  },
                  {
                    "begin": 5418,
                    "end": 5481,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5418,
                    "end": 5481,
                    "name": "PUSH [tag]",
                    "value": "253"
                  },
                  {
                    "begin": 5418,
                    "end": 5481,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 5460,
                    "end": 5470,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 5460,
                    "end": 5470,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 5454,
                    "end": 5470,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 5454,
                    "end": 5470,
                    "name": "POP"
                  },
                  {
                    "begin": 5418,
                    "end": 5481,
                    "name": "tag",
                    "value": "253"
                  },
                  {
                    "begin": 5418,
                    "end": 5481,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "NOT"
                  },
                  {
                    "begin": 5494,
                    "end": 5504,
                    "name": "DUP5"
                  },
                  {
                    "begin": 5494,
                    "end": 5515,
                    "name": "LT"
                  },
                  {
                    "begin": 5490,
                    "end": 5593,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5490,
                    "end": 5593,
                    "name": "PUSH [tag]",
                    "value": "254"
                  },
                  {
                    "begin": 5490,
                    "end": 5593,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 5560,
                    "end": 5582,
                    "name": "PUSH [tag]",
                    "value": "255"
                  },
                  {
                    "begin": 5560,
                    "end": 5570,
                    "name": "DUP5"
                  },
                  {
                    "begin": 5575,
                    "end": 5581,
                    "name": "DUP7"
                  },
                  {
                    "begin": 5560,
                    "end": 5582,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 5560,
                    "end": 5574,
                    "name": "PUSH [tag]",
                    "value": "256"
                  },
                  {
                    "begin": 5560,
                    "end": 5582,
                    "name": "AND"
                  },
                  {
                    "begin": 5560,
                    "end": 5582,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 5560,
                    "end": 5582,
                    "name": "tag",
                    "value": "255"
                  },
                  {
                    "begin": 5560,
                    "end": 5582,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5531,
                    "end": 5545,
                    "name": "DUP9"
                  },
                  {
                    "begin": 5531,
                    "end": 5545,
                    "name": "AND"
                  },
                  {
                    "begin": 5531,
                    "end": 5545,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5531,
                    "end": 5545,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5531,
                    "end": 5545,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5531,
                    "end": 5545,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5531,
                    "end": 5538,
                    "name": "PUSH",
                    "value": "5"
                  },
                  {
                    "begin": 5531,
                    "end": 5545,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5531,
                    "end": 5545,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5531,
                    "end": 5545,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5531,
                    "end": 5545,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5531,
                    "end": 5545,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5531,
                    "end": 5545,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5531,
                    "end": 5545,
                    "name": "DUP4"
                  },
                  {
                    "begin": 5531,
                    "end": 5545,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5546,
                    "end": 5556,
                    "name": "CALLER"
                  },
                  {
                    "begin": 5531,
                    "end": 5557,
                    "name": "DUP5"
                  },
                  {
                    "begin": 5531,
                    "end": 5557,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5531,
                    "end": 5557,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5531,
                    "end": 5557,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 5531,
                    "end": 5557,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5531,
                    "end": 5557,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5531,
                    "end": 5557,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5531,
                    "end": 5582,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 5490,
                    "end": 5593,
                    "name": "tag",
                    "value": "254"
                  },
                  {
                    "begin": 5490,
                    "end": 5593,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 5620,
                    "end": 5635,
                    "name": "PUSH [tag]",
                    "value": "257"
                  },
                  {
                    "begin": 5620,
                    "end": 5626,
                    "name": "DUP6"
                  },
                  {
                    "begin": 5631,
                    "end": 5634,
                    "name": "DUP5"
                  },
                  {
                    "begin": 5620,
                    "end": 5635,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 5620,
                    "end": 5630,
                    "name": "PUSH [tag]",
                    "value": "256"
                  },
                  {
                    "begin": 5620,
                    "end": 5635,
                    "name": "AND"
                  },
                  {
                    "begin": 5620,
                    "end": 5635,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 5620,
                    "end": 5635,
                    "name": "tag",
                    "value": "257"
                  },
                  {
                    "begin": 5620,
                    "end": 5635,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5663,
                    "end": 5678,
                    "name": "DUP9"
                  },
                  {
                    "begin": 5663,
                    "end": 5678,
                    "name": "AND"
                  },
                  {
                    "begin": 5663,
                    "end": 5678,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5663,
                    "end": 5678,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5663,
                    "end": 5678,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5663,
                    "end": 5678,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5663,
                    "end": 5671,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 5663,
                    "end": 5678,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5663,
                    "end": 5678,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5663,
                    "end": 5678,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5663,
                    "end": 5678,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5663,
                    "end": 5678,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5663,
                    "end": 5678,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 5602,
                    "end": 5635,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5602,
                    "end": 5635,
                    "name": "SWAP3"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 5663,
                    "end": 5690,
                    "name": "PUSH [tag]",
                    "value": "258"
                  },
                  {
                    "begin": 5663,
                    "end": 5690,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5683,
                    "end": 5689,
                    "name": "DUP7"
                  },
                  {
                    "begin": 5663,
                    "end": 5690,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 5663,
                    "end": 5682,
                    "name": "PUSH [tag]",
                    "value": "256"
                  },
                  {
                    "begin": 5663,
                    "end": 5690,
                    "name": "AND"
                  },
                  {
                    "begin": 5663,
                    "end": 5690,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 5663,
                    "end": 5690,
                    "name": "tag",
                    "value": "258"
                  },
                  {
                    "begin": 5663,
                    "end": 5690,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5645,
                    "end": 5660,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5645,
                    "end": 5660,
                    "name": "DUP10"
                  },
                  {
                    "begin": 5645,
                    "end": 5660,
                    "name": "AND"
                  },
                  {
                    "begin": 5645,
                    "end": 5660,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5645,
                    "end": 5660,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5645,
                    "end": 5660,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5645,
                    "end": 5660,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5645,
                    "end": 5653,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 5645,
                    "end": 5660,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5645,
                    "end": 5660,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5645,
                    "end": 5660,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5645,
                    "end": 5660,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5645,
                    "end": 5660,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5645,
                    "end": 5660,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5645,
                    "end": 5690,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 5645,
                    "end": 5690,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5645,
                    "end": 5690,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 5645,
                    "end": 5690,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 5716,
                    "end": 5729,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5716,
                    "end": 5729,
                    "name": "DUP9"
                  },
                  {
                    "begin": 5716,
                    "end": 5729,
                    "name": "AND"
                  },
                  {
                    "begin": 5716,
                    "end": 5729,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5716,
                    "end": 5729,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5716,
                    "end": 5729,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5716,
                    "end": 5729,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 5716,
                    "end": 5745,
                    "name": "PUSH [tag]",
                    "value": "259"
                  },
                  {
                    "begin": 5716,
                    "end": 5745,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5734,
                    "end": 5744,
                    "name": "DUP4"
                  },
                  {
                    "begin": 5716,
                    "end": 5745,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 5716,
                    "end": 5733,
                    "name": "PUSH [tag]",
                    "value": "260"
                  },
                  {
                    "begin": 5716,
                    "end": 5745,
                    "name": "AND"
                  },
                  {
                    "begin": 5716,
                    "end": 5745,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 5716,
                    "end": 5745,
                    "name": "tag",
                    "value": "259"
                  },
                  {
                    "begin": 5716,
                    "end": 5745,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5700,
                    "end": 5713,
                    "name": "DUP8"
                  },
                  {
                    "begin": 5700,
                    "end": 5713,
                    "name": "AND"
                  },
                  {
                    "begin": 5700,
                    "end": 5713,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5700,
                    "end": 5713,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5700,
                    "end": 5713,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5700,
                    "end": 5713,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5700,
                    "end": 5708,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 5700,
                    "end": 5713,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5700,
                    "end": 5713,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5700,
                    "end": 5713,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5700,
                    "end": 5713,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5700,
                    "end": 5713,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5700,
                    "end": 5745,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 5700,
                    "end": 5745,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5700,
                    "end": 5745,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 5700,
                    "end": 5745,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 5759,
                    "end": 5766,
                    "name": "DUP4"
                  },
                  {
                    "begin": 5759,
                    "end": 5766,
                    "name": "GT"
                  },
                  {
                    "begin": 5755,
                    "end": 5876,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 5755,
                    "end": 5876,
                    "name": "PUSH [tag]",
                    "value": "261"
                  },
                  {
                    "begin": 5755,
                    "end": 5876,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 5800,
                    "end": 5815,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5809,
                    "end": 5814,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5809,
                    "end": 5814,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5809,
                    "end": 5814,
                    "name": "AND"
                  },
                  {
                    "begin": 5800,
                    "end": 5815,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5800,
                    "end": 5815,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5800,
                    "end": 5808,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 5800,
                    "end": 5815,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5800,
                    "end": 5815,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5800,
                    "end": 5815,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5800,
                    "end": 5815,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5800,
                    "end": 5815,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5800,
                    "end": 5815,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 5800,
                    "end": 5824,
                    "name": "PUSH [tag]",
                    "value": "262"
                  },
                  {
                    "begin": 5800,
                    "end": 5824,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5820,
                    "end": 5823,
                    "name": "DUP5"
                  },
                  {
                    "begin": 5800,
                    "end": 5824,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 5800,
                    "end": 5819,
                    "name": "PUSH [tag]",
                    "value": "260"
                  },
                  {
                    "begin": 5800,
                    "end": 5824,
                    "name": "AND"
                  },
                  {
                    "begin": 5800,
                    "end": 5824,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 5800,
                    "end": 5824,
                    "name": "tag",
                    "value": "262"
                  },
                  {
                    "begin": 5800,
                    "end": 5824,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 5782,
                    "end": 5797,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 5791,
                    "end": 5796,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5791,
                    "end": 5796,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5791,
                    "end": 5796,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5791,
                    "end": 5796,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5791,
                    "end": 5796,
                    "name": "AND"
                  },
                  {
                    "begin": 5782,
                    "end": 5797,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5782,
                    "end": 5797,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5782,
                    "end": 5790,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 5782,
                    "end": 5797,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5782,
                    "end": 5797,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5782,
                    "end": 5797,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5782,
                    "end": 5797,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5782,
                    "end": 5797,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5782,
                    "end": 5797,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5782,
                    "end": 5797,
                    "name": "DUP5"
                  },
                  {
                    "begin": 5782,
                    "end": 5797,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 5782,
                    "end": 5824,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 5782,
                    "end": 5824,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5782,
                    "end": 5824,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 5782,
                    "end": 5824,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 5854,
                    "end": 5859,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 5854,
                    "end": 5859,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 5838,
                    "end": 5865,
                    "name": "DUP4"
                  },
                  {
                    "begin": 5838,
                    "end": 5865,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 5838,
                    "end": 5865,
                    "name": "DUP8"
                  },
                  {
                    "begin": 5838,
                    "end": 5865,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5838,
                    "end": 5865,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5838,
                    "end": 5865,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 5838,
                    "end": 5865,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 5854,
                    "end": 5859,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5854,
                    "end": 5859,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5854,
                    "end": 5859,
                    "name": "AND"
                  },
                  {
                    "begin": 5854,
                    "end": 5859,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 5838,
                    "end": 5865,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 5838,
                    "end": 5865,
                    "name": "DUP12"
                  },
                  {
                    "begin": 5838,
                    "end": 5865,
                    "name": "AND"
                  },
                  {
                    "begin": 5838,
                    "end": 5865,
                    "name": "SWAP3"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "DUP1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "MLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH data",
                    "value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "DUP4"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "CODECOPY"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "DUP2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "MLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SWAP2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5838,
                    "end": 5865,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 5838,
                    "end": 5865,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5838,
                    "end": 5865,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5838,
                    "end": 5865,
                    "name": "SUB"
                  },
                  {
                    "begin": 5838,
                    "end": 5865,
                    "name": "ADD"
                  },
                  {
                    "begin": 5838,
                    "end": 5865,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5838,
                    "end": 5865,
                    "name": "LOG3"
                  },
                  {
                    "begin": 5755,
                    "end": 5876,
                    "name": "tag",
                    "value": "261"
                  },
                  {
                    "begin": 5755,
                    "end": 5876,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 5901,
                    "end": 5904,
                    "name": "DUP6"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5885,
                    "end": 5917,
                    "name": "AND"
                  },
                  {
                    "begin": 5894,
                    "end": 5899,
                    "name": "DUP8"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 5885,
                    "end": 5917,
                    "name": "AND"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "DUP1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "MLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH data",
                    "value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "DUP4"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "CODECOPY"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "DUP2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "MLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SWAP2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5906,
                    "end": 5916,
                    "name": "DUP5"
                  },
                  {
                    "begin": 5885,
                    "end": 5917,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5885,
                    "end": 5917,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 5885,
                    "end": 5917,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5885,
                    "end": 5917,
                    "name": "DUP3"
                  },
                  {
                    "begin": 5885,
                    "end": 5917,
                    "name": "DUP2"
                  },
                  {
                    "begin": 5885,
                    "end": 5917,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 5885,
                    "end": 5917,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 5885,
                    "end": 5917,
                    "name": "ADD"
                  },
                  {
                    "begin": 5885,
                    "end": 5917,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 5885,
                    "end": 5917,
                    "name": "POP"
                  },
                  {
                    "begin": 5885,
                    "end": 5917,
                    "name": "POP"
                  },
                  {
                    "begin": 5885,
                    "end": 5917,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 5885,
                    "end": 5917,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 5885,
                    "end": 5917,
                    "name": "DUP1"
                  },
                  {
                    "begin": 5885,
                    "end": 5917,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 5885,
                    "end": 5917,
                    "name": "SUB"
                  },
                  {
                    "begin": 5885,
                    "end": 5917,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 5885,
                    "end": 5917,
                    "name": "LOG3"
                  },
                  {
                    "begin": 5044,
                    "end": 5924,
                    "name": "POP"
                  },
                  {
                    "begin": 5044,
                    "end": 5924,
                    "name": "POP"
                  },
                  {
                    "begin": 5044,
                    "end": 5924,
                    "name": "POP"
                  },
                  {
                    "begin": 5044,
                    "end": 5924,
                    "name": "POP"
                  },
                  {
                    "begin": 5044,
                    "end": 5924,
                    "name": "POP"
                  },
                  {
                    "begin": 5044,
                    "end": 5924,
                    "name": "POP"
                  },
                  {
                    "begin": 5044,
                    "end": 5924,
                    "name": "POP"
                  },
                  {
                    "begin": 5044,
                    "end": 5924,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 4216,
                    "end": 4330,
                    "name": "tag",
                    "value": "185"
                  },
                  {
                    "begin": 4216,
                    "end": 4330,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 4307,
                    "end": 4323,
                    "name": "AND"
                  },
                  {
                    "begin": 4276,
                    "end": 4288,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 4307,
                    "end": 4323,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4307,
                    "end": 4323,
                    "name": "DUP2"
                  },
                  {
                    "begin": 4307,
                    "end": 4323,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4307,
                    "end": 4315,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 4307,
                    "end": 4323,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 4307,
                    "end": 4323,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 4307,
                    "end": 4323,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 4307,
                    "end": 4323,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4307,
                    "end": 4323,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 4307,
                    "end": 4323,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 4307,
                    "end": 4323,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 4216,
                    "end": 4330,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 3445,
                    "end": 4005,
                    "name": "tag",
                    "value": "204"
                  },
                  {
                    "begin": 3445,
                    "end": 4005,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3530,
                    "end": 3538,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 3530,
                    "end": 3538,
                    "name": "DUP1"
                  },
                  {
                    "begin": 3512,
                    "end": 3518,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 3251,
                    "end": 3259,
                    "name": "PUSH",
                    "value": "44"
                  },
                  {
                    "begin": 3233,
                    "end": 3241,
                    "name": "CALLDATASIZE"
                  },
                  {
                    "begin": 3233,
                    "end": 3259,
                    "name": "LT"
                  },
                  {
                    "begin": 3231,
                    "end": 3260,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 3223,
                    "end": 3261,
                    "name": "PUSH [tag]",
                    "value": "265"
                  },
                  {
                    "begin": 3223,
                    "end": 3261,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 3223,
                    "end": 3261,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 3223,
                    "end": 3261,
                    "name": "DUP1"
                  },
                  {
                    "begin": 3223,
                    "end": 3261,
                    "name": "REVERT"
                  },
                  {
                    "begin": 3223,
                    "end": 3261,
                    "name": "tag",
                    "value": "265"
                  },
                  {
                    "begin": 3223,
                    "end": 3261,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3541,
                    "end": 3581,
                    "name": "PUSH [tag]",
                    "value": "267"
                  },
                  {
                    "begin": 3575,
                    "end": 3580,
                    "name": "PUSH",
                    "value": "2710"
                  },
                  {
                    "begin": 3542,
                    "end": 3569,
                    "name": "PUSH [tag]",
                    "value": "251"
                  },
                  {
                    "begin": 3553,
                    "end": 3568,
                    "name": "PUSH",
                    "value": "3"
                  },
                  {
                    "begin": 3553,
                    "end": 3568,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 3542,
                    "end": 3548,
                    "name": "DUP8"
                  },
                  {
                    "begin": 3542,
                    "end": 3552,
                    "name": "PUSH [tag]",
                    "value": "211"
                  },
                  {
                    "begin": 3542,
                    "end": 3552,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3542,
                    "end": 3569,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3542,
                    "end": 3569,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3542,
                    "end": 3569,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 3542,
                    "end": 3569,
                    "name": "AND"
                  },
                  {
                    "begin": 3542,
                    "end": 3569,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 3541,
                    "end": 3581,
                    "name": "tag",
                    "value": "267"
                  },
                  {
                    "begin": 3541,
                    "end": 3581,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3530,
                    "end": 3581,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 3530,
                    "end": 3581,
                    "name": "POP"
                  },
                  {
                    "begin": 3601,
                    "end": 3611,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 3601,
                    "end": 3611,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 3595,
                    "end": 3598,
                    "name": "DUP4"
                  },
                  {
                    "begin": 3595,
                    "end": 3611,
                    "name": "GT"
                  },
                  {
                    "begin": 3591,
                    "end": 3654,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 3591,
                    "end": 3654,
                    "name": "PUSH [tag]",
                    "value": "269"
                  },
                  {
                    "begin": 3591,
                    "end": 3654,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 3633,
                    "end": 3643,
                    "name": "PUSH",
                    "value": "4"
                  },
                  {
                    "begin": 3633,
                    "end": 3643,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 3627,
                    "end": 3643,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 3627,
                    "end": 3643,
                    "name": "POP"
                  },
                  {
                    "begin": 3591,
                    "end": 3654,
                    "name": "tag",
                    "value": "269"
                  },
                  {
                    "begin": 3591,
                    "end": 3654,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3681,
                    "end": 3696,
                    "name": "PUSH [tag]",
                    "value": "270"
                  },
                  {
                    "begin": 3681,
                    "end": 3687,
                    "name": "DUP5"
                  },
                  {
                    "begin": 3692,
                    "end": 3695,
                    "name": "DUP5"
                  },
                  {
                    "begin": 3681,
                    "end": 3696,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 3681,
                    "end": 3691,
                    "name": "PUSH [tag]",
                    "value": "256"
                  },
                  {
                    "begin": 3681,
                    "end": 3696,
                    "name": "AND"
                  },
                  {
                    "begin": 3681,
                    "end": 3696,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 3681,
                    "end": 3696,
                    "name": "tag",
                    "value": "270"
                  },
                  {
                    "begin": 3681,
                    "end": 3696,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3738,
                    "end": 3748,
                    "name": "CALLER"
                  },
                  {
                    "begin": 3729,
                    "end": 3749,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 3729,
                    "end": 3749,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3729,
                    "end": 3749,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3729,
                    "end": 3749,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3729,
                    "end": 3737,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 3729,
                    "end": 3749,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 3729,
                    "end": 3749,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3729,
                    "end": 3749,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 3729,
                    "end": 3749,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3729,
                    "end": 3749,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 3729,
                    "end": 3749,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 3663,
                    "end": 3696,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3663,
                    "end": 3696,
                    "name": "SWAP3"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 3729,
                    "end": 3761,
                    "name": "PUSH [tag]",
                    "value": "271"
                  },
                  {
                    "begin": 3729,
                    "end": 3761,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3754,
                    "end": 3760,
                    "name": "DUP6"
                  },
                  {
                    "begin": 3729,
                    "end": 3761,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 3729,
                    "end": 3753,
                    "name": "PUSH [tag]",
                    "value": "256"
                  },
                  {
                    "begin": 3729,
                    "end": 3761,
                    "name": "AND"
                  },
                  {
                    "begin": 3729,
                    "end": 3761,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 3729,
                    "end": 3761,
                    "name": "tag",
                    "value": "271"
                  },
                  {
                    "begin": 3729,
                    "end": 3761,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3715,
                    "end": 3725,
                    "name": "CALLER"
                  },
                  {
                    "begin": 3706,
                    "end": 3726,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 3706,
                    "end": 3726,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3706,
                    "end": 3726,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3706,
                    "end": 3726,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3706,
                    "end": 3714,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 3706,
                    "end": 3726,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 3706,
                    "end": 3726,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3706,
                    "end": 3726,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 3706,
                    "end": 3726,
                    "name": "DUP1"
                  },
                  {
                    "begin": 3706,
                    "end": 3726,
                    "name": "DUP3"
                  },
                  {
                    "begin": 3706,
                    "end": 3726,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 3706,
                    "end": 3761,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 3706,
                    "end": 3761,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3706,
                    "end": 3761,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 3706,
                    "end": 3761,
                    "name": "SSTORE"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 3787,
                    "end": 3800,
                    "name": "DUP8"
                  },
                  {
                    "begin": 3787,
                    "end": 3800,
                    "name": "AND"
                  },
                  {
                    "begin": 3787,
                    "end": 3800,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3787,
                    "end": 3800,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3787,
                    "end": 3800,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 3787,
                    "end": 3800,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 3787,
                    "end": 3816,
                    "name": "PUSH [tag]",
                    "value": "272"
                  },
                  {
                    "begin": 3787,
                    "end": 3816,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3805,
                    "end": 3815,
                    "name": "DUP4"
                  },
                  {
                    "begin": 3787,
                    "end": 3816,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 3787,
                    "end": 3804,
                    "name": "PUSH [tag]",
                    "value": "260"
                  },
                  {
                    "begin": 3787,
                    "end": 3816,
                    "name": "AND"
                  },
                  {
                    "begin": 3787,
                    "end": 3816,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 3787,
                    "end": 3816,
                    "name": "tag",
                    "value": "272"
                  },
                  {
                    "begin": 3787,
                    "end": 3816,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 3771,
                    "end": 3784,
                    "name": "DUP7"
                  },
                  {
                    "begin": 3771,
                    "end": 3784,
                    "name": "AND"
                  },
                  {
                    "begin": 3771,
                    "end": 3784,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 3771,
                    "end": 3784,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3771,
                    "end": 3784,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3771,
                    "end": 3784,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3771,
                    "end": 3779,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 3771,
                    "end": 3784,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 3771,
                    "end": 3784,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3771,
                    "end": 3784,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 3771,
                    "end": 3784,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3771,
                    "end": 3784,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 3771,
                    "end": 3816,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3771,
                    "end": 3816,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3771,
                    "end": 3816,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3771,
                    "end": 3816,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 3830,
                    "end": 3837,
                    "name": "DUP4"
                  },
                  {
                    "begin": 3830,
                    "end": 3837,
                    "name": "GT"
                  },
                  {
                    "begin": 3826,
                    "end": 3952,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 3826,
                    "end": 3952,
                    "name": "PUSH [tag]",
                    "value": "273"
                  },
                  {
                    "begin": 3826,
                    "end": 3952,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 3871,
                    "end": 3886,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 3880,
                    "end": 3885,
                    "name": "DUP1"
                  },
                  {
                    "begin": 3880,
                    "end": 3885,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 3880,
                    "end": 3885,
                    "name": "AND"
                  },
                  {
                    "begin": 3871,
                    "end": 3886,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3871,
                    "end": 3886,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3871,
                    "end": 3879,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 3871,
                    "end": 3886,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 3871,
                    "end": 3886,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3871,
                    "end": 3886,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 3871,
                    "end": 3886,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3871,
                    "end": 3886,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 3871,
                    "end": 3886,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 3871,
                    "end": 3895,
                    "name": "PUSH [tag]",
                    "value": "274"
                  },
                  {
                    "begin": 3871,
                    "end": 3895,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3891,
                    "end": 3894,
                    "name": "DUP5"
                  },
                  {
                    "begin": 3871,
                    "end": 3895,
                    "name": "PUSH",
                    "value": "FFFFFFFF"
                  },
                  {
                    "begin": 3871,
                    "end": 3890,
                    "name": "PUSH [tag]",
                    "value": "260"
                  },
                  {
                    "begin": 3871,
                    "end": 3895,
                    "name": "AND"
                  },
                  {
                    "begin": 3871,
                    "end": 3895,
                    "name": "JUMP",
                    "value": "[in]"
                  },
                  {
                    "begin": 3871,
                    "end": 3895,
                    "name": "tag",
                    "value": "274"
                  },
                  {
                    "begin": 3871,
                    "end": 3895,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3853,
                    "end": 3868,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 3862,
                    "end": 3867,
                    "name": "DUP1"
                  },
                  {
                    "begin": 3862,
                    "end": 3867,
                    "name": "SLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 3862,
                    "end": 3867,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3862,
                    "end": 3867,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3862,
                    "end": 3867,
                    "name": "AND"
                  },
                  {
                    "begin": 3853,
                    "end": 3868,
                    "name": "DUP3"
                  },
                  {
                    "begin": 3853,
                    "end": 3868,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3853,
                    "end": 3861,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": 3853,
                    "end": 3868,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 3853,
                    "end": 3868,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3853,
                    "end": 3868,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3853,
                    "end": 3868,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3853,
                    "end": 3868,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 3853,
                    "end": 3868,
                    "name": "DUP1"
                  },
                  {
                    "begin": 3853,
                    "end": 3868,
                    "name": "DUP5"
                  },
                  {
                    "begin": 3853,
                    "end": 3868,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 3853,
                    "end": 3895,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 3853,
                    "end": 3895,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3853,
                    "end": 3895,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 3853,
                    "end": 3895,
                    "name": "SSTORE"
                  },
                  {
                    "begin": 3930,
                    "end": 3935,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3930,
                    "end": 3935,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 3909,
                    "end": 3941,
                    "name": "DUP4"
                  },
                  {
                    "begin": 3909,
                    "end": 3941,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 3909,
                    "end": 3941,
                    "name": "DUP8"
                  },
                  {
                    "begin": 3909,
                    "end": 3941,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3909,
                    "end": 3941,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3909,
                    "end": 3941,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 3909,
                    "end": 3941,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 3930,
                    "end": 3935,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3930,
                    "end": 3935,
                    "name": "AND"
                  },
                  {
                    "begin": 3930,
                    "end": 3935,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 3918,
                    "end": 3928,
                    "name": "CALLER"
                  },
                  {
                    "begin": 3918,
                    "end": 3928,
                    "name": "SWAP3"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "DUP1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "MLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH data",
                    "value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "DUP4"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "CODECOPY"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "DUP2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "MLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SWAP2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3909,
                    "end": 3941,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 3909,
                    "end": 3941,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3909,
                    "end": 3941,
                    "name": "DUP3"
                  },
                  {
                    "begin": 3909,
                    "end": 3941,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3909,
                    "end": 3941,
                    "name": "SUB"
                  },
                  {
                    "begin": 3909,
                    "end": 3941,
                    "name": "ADD"
                  },
                  {
                    "begin": 3909,
                    "end": 3941,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3909,
                    "end": 3941,
                    "name": "LOG3"
                  },
                  {
                    "begin": 3826,
                    "end": 3952,
                    "name": "tag",
                    "value": "273"
                  },
                  {
                    "begin": 3826,
                    "end": 3952,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 3961,
                    "end": 3998,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 3961,
                    "end": 3998,
                    "name": "DUP1"
                  },
                  {
                    "begin": 3961,
                    "end": 3998,
                    "name": "MLOAD"
                  },
                  {
                    "begin": 3961,
                    "end": 3998,
                    "name": "DUP4"
                  },
                  {
                    "begin": 3961,
                    "end": 3998,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3961,
                    "end": 3998,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3961,
                    "end": 3998,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3961,
                    "end": 3998,
                    "name": "MLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 3961,
                    "end": 3998,
                    "name": "DUP8"
                  },
                  {
                    "begin": 3961,
                    "end": 3998,
                    "name": "AND"
                  },
                  {
                    "begin": 3961,
                    "end": 3998,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3970,
                    "end": 3980,
                    "name": "CALLER"
                  },
                  {
                    "begin": 3970,
                    "end": 3980,
                    "name": "SWAP2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "DUP1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "MLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH data",
                    "value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "DUP4"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "CODECOPY"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "DUP2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "MLOAD"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SWAP2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 3961,
                    "end": 3998,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 3961,
                    "end": 3998,
                    "name": "DUP2"
                  },
                  {
                    "begin": 3961,
                    "end": 3998,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3961,
                    "end": 3998,
                    "name": "SUB"
                  },
                  {
                    "begin": 3961,
                    "end": 3998,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 3961,
                    "end": 3998,
                    "name": "ADD"
                  },
                  {
                    "begin": 3961,
                    "end": 3998,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 3961,
                    "end": 3998,
                    "name": "LOG3"
                  },
                  {
                    "begin": 3445,
                    "end": 4005,
                    "name": "POP"
                  },
                  {
                    "begin": 3445,
                    "end": 4005,
                    "name": "POP"
                  },
                  {
                    "begin": 3445,
                    "end": 4005,
                    "name": "POP"
                  },
                  {
                    "begin": 3445,
                    "end": 4005,
                    "name": "POP"
                  },
                  {
                    "begin": 3445,
                    "end": 4005,
                    "name": "POP"
                  },
                  {
                    "begin": 3445,
                    "end": 4005,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 206,
                    "end": 407,
                    "name": "tag",
                    "value": "211"
                  },
                  {
                    "begin": 206,
                    "end": 407,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 264,
                    "end": 271,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 264,
                    "end": 271,
                    "name": "DUP1"
                  },
                  {
                    "begin": 287,
                    "end": 293,
                    "name": "DUP4"
                  },
                  {
                    "begin": 287,
                    "end": 293,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 283,
                    "end": 328,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 283,
                    "end": 328,
                    "name": "PUSH [tag]",
                    "value": "276"
                  },
                  {
                    "begin": 283,
                    "end": 328,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 316,
                    "end": 317,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 309,
                    "end": 317,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 309,
                    "end": 317,
                    "name": "POP"
                  },
                  {
                    "begin": 309,
                    "end": 317,
                    "name": "PUSH [tag]",
                    "value": "275"
                  },
                  {
                    "begin": 309,
                    "end": 317,
                    "name": "JUMP"
                  },
                  {
                    "begin": 283,
                    "end": 328,
                    "name": "tag",
                    "value": "276"
                  },
                  {
                    "begin": 283,
                    "end": 328,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 349,
                    "end": 354,
                    "name": "DUP3"
                  },
                  {
                    "begin": 349,
                    "end": 354,
                    "name": "DUP3"
                  },
                  {
                    "begin": 349,
                    "end": 354,
                    "name": "MUL"
                  },
                  {
                    "begin": 353,
                    "end": 354,
                    "name": "DUP3"
                  },
                  {
                    "begin": 349,
                    "end": 350,
                    "name": "DUP5"
                  },
                  {
                    "begin": 349,
                    "end": 354,
                    "name": "DUP3"
                  },
                  {
                    "begin": 371,
                    "end": 376,
                    "name": "DUP2"
                  },
                  {
                    "begin": 371,
                    "end": 376,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 371,
                    "end": 376,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 371,
                    "end": 376,
                    "name": "PUSH [tag]",
                    "value": "277"
                  },
                  {
                    "begin": 371,
                    "end": 376,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 371,
                    "end": 376,
                    "name": "INVALID"
                  },
                  {
                    "begin": 371,
                    "end": 376,
                    "name": "tag",
                    "value": "277"
                  },
                  {
                    "begin": 371,
                    "end": 376,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 371,
                    "end": 376,
                    "name": "DIV"
                  },
                  {
                    "begin": 371,
                    "end": 381,
                    "name": "EQ"
                  },
                  {
                    "begin": 364,
                    "end": 382,
                    "name": "PUSH [tag]",
                    "value": "278"
                  },
                  {
                    "begin": 364,
                    "end": 382,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 364,
                    "end": 382,
                    "name": "INVALID"
                  },
                  {
                    "begin": 364,
                    "end": 382,
                    "name": "tag",
                    "value": "278"
                  },
                  {
                    "begin": 364,
                    "end": 382,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 399,
                    "end": 400,
                    "name": "DUP1"
                  },
                  {
                    "begin": 392,
                    "end": 400,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 392,
                    "end": 400,
                    "name": "POP"
                  },
                  {
                    "begin": 206,
                    "end": 407,
                    "name": "tag",
                    "value": "275"
                  },
                  {
                    "begin": 206,
                    "end": 407,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 206,
                    "end": 407,
                    "name": "POP"
                  },
                  {
                    "begin": 206,
                    "end": 407,
                    "name": "SWAP3"
                  },
                  {
                    "begin": 206,
                    "end": 407,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 206,
                    "end": 407,
                    "name": "POP"
                  },
                  {
                    "begin": 206,
                    "end": 407,
                    "name": "POP"
                  },
                  {
                    "begin": 206,
                    "end": 407,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 7052,
                    "end": 7195,
                    "name": "tag",
                    "value": "229"
                  },
                  {
                    "begin": 7052,
                    "end": 7195,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "1"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "A0"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "PUSH",
                    "value": "2"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "EXP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "SUB"
                  },
                  {
                    "begin": 7163,
                    "end": 7178,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 7163,
                    "end": 7178,
                    "name": "DUP3"
                  },
                  {
                    "begin": 7163,
                    "end": 7178,
                    "name": "AND"
                  },
                  {
                    "begin": 7130,
                    "end": 7144,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 7163,
                    "end": 7178,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7163,
                    "end": 7178,
                    "name": "DUP2"
                  },
                  {
                    "begin": 7163,
                    "end": 7178,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 7163,
                    "end": 7170,
                    "name": "PUSH",
                    "value": "5"
                  },
                  {
                    "begin": 7163,
                    "end": 7178,
                    "name": "PUSH",
                    "value": "20"
                  },
                  {
                    "begin": 7163,
                    "end": 7178,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7163,
                    "end": 7178,
                    "name": "DUP2"
                  },
                  {
                    "begin": 7163,
                    "end": 7178,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 7163,
                    "end": 7178,
                    "name": "PUSH",
                    "value": "40"
                  },
                  {
                    "begin": 7163,
                    "end": 7178,
                    "name": "DUP1"
                  },
                  {
                    "begin": 7163,
                    "end": 7178,
                    "name": "DUP4"
                  },
                  {
                    "begin": 7163,
                    "end": 7178,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 7163,
                    "end": 7188,
                    "name": "SWAP4"
                  },
                  {
                    "begin": 7163,
                    "end": 7188,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7163,
                    "end": 7188,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 7163,
                    "end": 7188,
                    "name": "AND"
                  },
                  {
                    "begin": 7163,
                    "end": 7188,
                    "name": "DUP3"
                  },
                  {
                    "begin": 7163,
                    "end": 7188,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 7163,
                    "end": 7188,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 7163,
                    "end": 7188,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7163,
                    "end": 7188,
                    "name": "SWAP2"
                  },
                  {
                    "begin": 7163,
                    "end": 7188,
                    "name": "MSTORE"
                  },
                  {
                    "begin": 7163,
                    "end": 7188,
                    "name": "KECCAK256"
                  },
                  {
                    "begin": 7163,
                    "end": 7188,
                    "name": "SLOAD"
                  },
                  {
                    "begin": 7163,
                    "end": 7188,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 7052,
                    "end": 7195,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 413,
                    "end": 696,
                    "name": "tag",
                    "value": "252"
                  },
                  {
                    "begin": 413,
                    "end": 696,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 471,
                    "end": 478,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 568,
                    "end": 577,
                    "name": "DUP1"
                  },
                  {
                    "begin": 584,
                    "end": 585,
                    "name": "DUP3"
                  },
                  {
                    "begin": 580,
                    "end": 581,
                    "name": "DUP5"
                  },
                  {
                    "begin": 580,
                    "end": 585,
                    "name": "DUP2"
                  },
                  {
                    "begin": 580,
                    "end": 585,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 580,
                    "end": 585,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 580,
                    "end": 585,
                    "name": "PUSH [tag]",
                    "value": "281"
                  },
                  {
                    "begin": 580,
                    "end": 585,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 580,
                    "end": 585,
                    "name": "INVALID"
                  },
                  {
                    "begin": 580,
                    "end": 585,
                    "name": "tag",
                    "value": "281"
                  },
                  {
                    "begin": 580,
                    "end": 585,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 580,
                    "end": 585,
                    "name": "DIV"
                  },
                  {
                    "begin": 580,
                    "end": 585,
                    "name": "SWAP5"
                  },
                  {
                    "begin": 413,
                    "end": 696,
                    "name": "SWAP4"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 413,
                    "end": 696,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 702,
                    "end": 822,
                    "name": "tag",
                    "value": "256"
                  },
                  {
                    "begin": 702,
                    "end": 822,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 760,
                    "end": 767,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 786,
                    "end": 792,
                    "name": "DUP3"
                  },
                  {
                    "begin": 786,
                    "end": 792,
                    "name": "DUP3"
                  },
                  {
                    "begin": 786,
                    "end": 792,
                    "name": "GT"
                  },
                  {
                    "begin": 786,
                    "end": 792,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 779,
                    "end": 793,
                    "name": "PUSH [tag]",
                    "value": "283"
                  },
                  {
                    "begin": 779,
                    "end": 793,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 779,
                    "end": 793,
                    "name": "INVALID"
                  },
                  {
                    "begin": 779,
                    "end": 793,
                    "name": "tag",
                    "value": "283"
                  },
                  {
                    "begin": 779,
                    "end": 793,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": -1,
                    "end": -1,
                    "name": "POP"
                  },
                  {
                    "begin": 810,
                    "end": 815,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 810,
                    "end": 815,
                    "name": "SUB"
                  },
                  {
                    "begin": 810,
                    "end": 815,
                    "name": "SWAP1"
                  },
                  {
                    "begin": 702,
                    "end": 822,
                    "name": "JUMP",
                    "value": "[out]"
                  },
                  {
                    "begin": 828,
                    "end": 971,
                    "name": "tag",
                    "value": "260"
                  },
                  {
                    "begin": 828,
                    "end": 971,
                    "name": "JUMPDEST"
                  },
                  {
                    "begin": 886,
                    "end": 893,
                    "name": "PUSH",
                    "value": "0"
                  },
                  {
                    "begin": 917,
                    "end": 922,
                    "name": "DUP3"
                  },
                  {
                    "begin": 917,
                    "end": 922,
                    "name": "DUP3"
                  },
                  {
                    "begin": 917,
                    "end": 922,
                    "name": "ADD"
                  },
                  {
                    "begin": 939,
                    "end": 945,
                    "name": "DUP4"
                  },
                  {
                    "begin": 939,
                    "end": 945,
                    "name": "DUP2"
                  },
                  {
                    "begin": 939,
                    "end": 945,
                    "name": "LT"
                  },
                  {
                    "begin": 939,
                    "end": 945,
                    "name": "ISZERO"
                  },
                  {
                    "begin": 932,
                    "end": 946,
                    "name": "PUSH [tag]",
                    "value": "278"
                  },
                  {
                    "begin": 932,
                    "end": 946,
                    "name": "JUMPI"
                  },
                  {
                    "begin": 932,
                    "end": 946,
                    "name": "INVALID"
                  }
                ],
                ".data": {
                  "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
                }
              }
            }
          },
          "methodIdentifiers": {
            "MAX_UINT()": "e5b5019a",
            "_totalSupply()": "3eaaf86b",
            "addBlackList(address)": "0ecb93c0",
            "allowance(address,address)": "dd62ed3e",
            "allowed(address,address)": "5c658165",
            "approve(address,uint256)": "095ea7b3",
            "balanceOf(address)": "70a08231",
            "balances(address)": "27e235e3",
            "basisPointsRate()": "dd644f72",
            "decimals()": "313ce567",
            "deprecate(address)": "0753c30c",
            "deprecated()": "0e136b19",
            "destroyBlackFunds(address)": "f3bdc228",
            "getBlackListStatus(address)": "59bf1abe",
            "getOwner()": "893d20e8",
            "isBlackListed(address)": "e47d6060",
            "issue(uint256)": "cc872b66",
            "maximumFee()": "35390714",
            "name()": "06fdde03",
            "owner()": "8da5cb5b",
            "pause()": "8456cb59",
            "paused()": "5c975abb",
            "redeem(uint256)": "db006a75",
            "removeBlackList(address)": "e4997dc5",
            "setParams(uint256,uint256)": "c0324c77",
            "symbol()": "95d89b41",
            "totalSupply()": "18160ddd",
            "transfer(address,uint256)": "a9059cbb",
            "transferFrom(address,address,uint256)": "23b872dd",
            "transferOwnership(address)": "f2fde38b",
            "unpause()": "3f4ba83a",
            "upgradedAddress()": "26976e3f"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_upgradedAddress\",\"type\":\"address\"}],\"name\":\"deprecate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deprecated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_evilUser\",\"type\":\"address\"}],\"name\":\"addBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upgradedAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_maker\",\"type\":\"address\"}],\"name\":\"getBlackListStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBasisPoints\",\"type\":\"uint256\"},{\"name\":\"newMaxFee\",\"type\":\"uint256\"}],\"name\":\"setParams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basisPointsRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlackListed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_clearedUser\",\"type\":\"address\"}],\"name\":\"removeBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_UINT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blackListedUser\",\"type\":\"address\"}],\"name\":\"destroyBlackFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_initialSupply\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Issue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"Deprecate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"feeBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"maxFee\",\"type\":\"uint256\"}],\"name\":\"Params\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_blackListedUser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"DestroyedBlackFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"AddedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"RemovedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}}},\"userdoc\":{\"methods\":{\"getBlackListStatus(address)\":{\"notice\":\"//// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\"}}}},\"settings\":{\"compilationTarget\":{\"TetherToken.sol\":\"TetherToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"TetherToken.sol\":{\"content\":\"/**\\n *Submitted for verification at Etherscan.io on 2017-11-28\\n*/\\n\\npragma solidity ^0.4.17;\\n\\n/**\\n * @title SafeMath\\n * @dev Math operations with safety checks that throw on error\\n */\\nlibrary SafeMath {\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n        uint256 c = a * b;\\n        assert(c / a == b);\\n        return c;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n        return c;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        assert(b <= a);\\n        return a - b;\\n    }\\n\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        assert(c >= a);\\n        return c;\\n    }\\n}\\n\\n/**\\n * @title Ownable\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\n * functions, this simplifies the implementation of \\\"user permissions\\\".\\n */\\ncontract Ownable {\\n    address public owner;\\n\\n    /**\\n      * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\n      * account.\\n      */\\n    function Ownable() public {\\n        owner = msg.sender;\\n    }\\n\\n    /**\\n      * @dev Throws if called by any account other than the owner.\\n      */\\n    modifier onlyOwner() {\\n        require(msg.sender == owner);\\n        _;\\n    }\\n\\n    /**\\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\\n    * @param newOwner The address to transfer ownership to.\\n    */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        if (newOwner != address(0)) {\\n            owner = newOwner;\\n        }\\n    }\\n\\n}\\n\\n/**\\n * @title ERC20Basic\\n * @dev Simpler version of ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20Basic {\\n    uint public _totalSupply;\\n    function totalSupply() public constant returns (uint);\\n    function balanceOf(address who) public constant returns (uint);\\n    function transfer(address to, uint value) public;\\n    event Transfer(address indexed from, address indexed to, uint value);\\n}\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20 is ERC20Basic {\\n    function allowance(address owner, address spender) public constant returns (uint);\\n    function transferFrom(address from, address to, uint value) public;\\n    function approve(address spender, uint value) public;\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n}\\n\\n/**\\n * @title Basic token\\n * @dev Basic version of StandardToken, with no allowances.\\n */\\ncontract BasicToken is Ownable, ERC20Basic {\\n    using SafeMath for uint;\\n\\n    mapping(address => uint) public balances;\\n\\n    // additional variables for use if transaction fees ever became necessary\\n    uint public basisPointsRate = 0;\\n    uint public maximumFee = 0;\\n\\n    /**\\n    * @dev Fix for the ERC20 short address attack.\\n    */\\n    modifier onlyPayloadSize(uint size) {\\n        require(!(msg.data.length < size + 4));\\n        _;\\n    }\\n\\n    /**\\n    * @dev transfer token for a specified address\\n    * @param _to The address to transfer to.\\n    * @param _value The amount to be transferred.\\n    */\\n    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[msg.sender] = balances[msg.sender].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(msg.sender, owner, fee);\\n        }\\n        Transfer(msg.sender, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Gets the balance of the specified address.\\n    * @param _owner The address to query the the balance of.\\n    * @return An uint representing the amount owned by the passed address.\\n    */\\n    function balanceOf(address _owner) public constant returns (uint balance) {\\n        return balances[_owner];\\n    }\\n\\n}\\n\\n/**\\n * @title Standard ERC20 token\\n *\\n * @dev Implementation of the basic standard token.\\n * @dev https://github.com/ethereum/EIPs/issues/20\\n * @dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\n */\\ncontract StandardToken is BasicToken, ERC20 {\\n\\n    mapping (address => mapping (address => uint)) public allowed;\\n\\n    uint public constant MAX_UINT = 2**256 - 1;\\n\\n    /**\\n    * @dev Transfer tokens from one address to another\\n    * @param _from address The address which you want to send tokens from\\n    * @param _to address The address which you want to transfer to\\n    * @param _value uint the amount of tokens to be transferred\\n    */\\n    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\\n        var _allowance = allowed[_from][msg.sender];\\n\\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\\n        // if (_value > _allowance) throw;\\n\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        if (_allowance < MAX_UINT) {\\n            allowed[_from][msg.sender] = _allowance.sub(_value);\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[_from] = balances[_from].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(_from, owner, fee);\\n        }\\n        Transfer(_from, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\n    * @param _spender The address which will spend the funds.\\n    * @param _value The amount of tokens to be spent.\\n    */\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n\\n        // To change the approve amount you first have to reduce the addresses`\\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\\n        //  already 0 to mitigate the race condition described here:\\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));\\n\\n        allowed[msg.sender][_spender] = _value;\\n        Approval(msg.sender, _spender, _value);\\n    }\\n\\n    /**\\n    * @dev Function to check the amount of tokens than an owner allowed to a spender.\\n    * @param _owner address The address which owns the funds.\\n    * @param _spender address The address which will spend the funds.\\n    * @return A uint specifying the amount of tokens still available for the spender.\\n    */\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        return allowed[_owner][_spender];\\n    }\\n\\n}\\n\\n\\n/**\\n * @title Pausable\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\n */\\ncontract Pausable is Ownable {\\n  event Pause();\\n  event Unpause();\\n\\n  bool public paused = false;\\n\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\n   */\\n  modifier whenNotPaused() {\\n    require(!paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is paused.\\n   */\\n  modifier whenPaused() {\\n    require(paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev called by the owner to pause, triggers stopped state\\n   */\\n  function pause() onlyOwner whenNotPaused public {\\n    paused = true;\\n    Pause();\\n  }\\n\\n  /**\\n   * @dev called by the owner to unpause, returns to normal state\\n   */\\n  function unpause() onlyOwner whenPaused public {\\n    paused = false;\\n    Unpause();\\n  }\\n}\\n\\ncontract BlackList is Ownable, BasicToken {\\n\\n    /////// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\\n    function getBlackListStatus(address _maker) external constant returns (bool) {\\n        return isBlackListed[_maker];\\n    }\\n\\n    function getOwner() external constant returns (address) {\\n        return owner;\\n    }\\n\\n    mapping (address => bool) public isBlackListed;\\n\\n    function addBlackList (address _evilUser) public onlyOwner {\\n        isBlackListed[_evilUser] = true;\\n        AddedBlackList(_evilUser);\\n    }\\n\\n    function removeBlackList (address _clearedUser) public onlyOwner {\\n        isBlackListed[_clearedUser] = false;\\n        RemovedBlackList(_clearedUser);\\n    }\\n\\n    function destroyBlackFunds (address _blackListedUser) public onlyOwner {\\n        require(isBlackListed[_blackListedUser]);\\n        uint dirtyFunds = balanceOf(_blackListedUser);\\n        balances[_blackListedUser] = 0;\\n        _totalSupply -= dirtyFunds;\\n        DestroyedBlackFunds(_blackListedUser, dirtyFunds);\\n    }\\n\\n    event DestroyedBlackFunds(address _blackListedUser, uint _balance);\\n\\n    event AddedBlackList(address _user);\\n\\n    event RemovedBlackList(address _user);\\n\\n}\\n\\ncontract UpgradedStandardToken is StandardToken{\\n    // those methods are called by the legacy contract\\n    // and they must ensure msg.sender to be the contract address\\n    function transferByLegacy(address from, address to, uint value) public;\\n    function transferFromByLegacy(address sender, address from, address spender, uint value) public;\\n    function approveByLegacy(address from, address spender, uint value) public;\\n}\\n\\ncontract TetherToken is Pausable, StandardToken, BlackList {\\n\\n    string public name;\\n    string public symbol;\\n    uint public decimals;\\n    address public upgradedAddress;\\n    bool public deprecated;\\n\\n    //  The contract can be initialized with a number of tokens\\n    //  All the tokens are deposited to the owner address\\n    //\\n    // @param _balance Initial supply of the contract\\n    // @param _name Token Name\\n    // @param _symbol Token symbol\\n    // @param _decimals Token decimals\\n    function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\\n        _totalSupply = _initialSupply;\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n        balances[owner] = _initialSupply;\\n        deprecated = false;\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transfer(address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[msg.sender]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);\\n        } else {\\n            return super.transfer(_to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[_from]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);\\n        } else {\\n            return super.transferFrom(_from, _to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function balanceOf(address who) public constant returns (uint) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).balanceOf(who);\\n        } else {\\n            return super.balanceOf(who);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);\\n        } else {\\n            return super.approve(_spender, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).allowance(_owner, _spender);\\n        } else {\\n            return super.allowance(_owner, _spender);\\n        }\\n    }\\n\\n    // deprecate current contract in favour of a new one\\n    function deprecate(address _upgradedAddress) public onlyOwner {\\n        deprecated = true;\\n        upgradedAddress = _upgradedAddress;\\n        Deprecate(_upgradedAddress);\\n    }\\n\\n    // deprecate current contract if favour of a new one\\n    function totalSupply() public constant returns (uint) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).totalSupply();\\n        } else {\\n            return _totalSupply;\\n        }\\n    }\\n\\n    // Issue a new amount of tokens\\n    // these tokens are deposited into the owner address\\n    //\\n    // @param _amount Number of tokens to be issued\\n    function issue(uint amount) public onlyOwner {\\n        require(_totalSupply + amount > _totalSupply);\\n        require(balances[owner] + amount > balances[owner]);\\n\\n        balances[owner] += amount;\\n        _totalSupply += amount;\\n        Issue(amount);\\n    }\\n\\n    // Redeem tokens.\\n    // These tokens are withdrawn from the owner address\\n    // if the balance must be enough to cover the redeem\\n    // or the call will fail.\\n    // @param _amount Number of tokens to be issued\\n    function redeem(uint amount) public onlyOwner {\\n        require(_totalSupply >= amount);\\n        require(balances[owner] >= amount);\\n\\n        _totalSupply -= amount;\\n        balances[owner] -= amount;\\n        Redeem(amount);\\n    }\\n\\n    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\\n        // Ensure transparency by hardcoding limit beyond which fees can never be added\\n        require(newBasisPoints < 20);\\n        require(newMaxFee < 50);\\n\\n        basisPointsRate = newBasisPoints;\\n        maximumFee = newMaxFee.mul(10**decimals);\\n\\n        Params(basisPointsRate, maximumFee);\\n    }\\n\\n    // Called when new token are issued\\n    event Issue(uint amount);\\n\\n    // Called when tokens are redeemed\\n    event Redeem(uint amount);\\n\\n    // Called when contract is deprecated\\n    event Deprecate(address newAddress);\\n\\n    // Called if contract ever adds fees\\n    event Params(uint feeBasisPoints, uint maxFee);\\n}\",\"keccak256\":\"0x51e9740650f230941b166a080db3f1b5fbe6872aea0d29ae883f230b1a20bb1c\"}},\"version\":1}",
        "userdoc": {
          "methods": {
            "getBlackListStatus(address)": {
              "notice": "//// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////"
            }
          }
        }
      },
      "UpgradedStandardToken": {
        "abi": [
          {
            "constant": false,
            "inputs": [
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_from",
                "type": "address"
              },
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "name": "balances",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "maximumFee",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "_totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "",
                "type": "address"
              },
              {
                "name": "",
                "type": "address"
              }
            ],
            "name": "allowed",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "from",
                "type": "address"
              },
              {
                "name": "to",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "transferByLegacy",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "name": "balance",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "sender",
                "type": "address"
              },
              {
                "name": "from",
                "type": "address"
              },
              {
                "name": "spender",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "transferFromByLegacy",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "from",
                "type": "address"
              },
              {
                "name": "spender",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "approveByLegacy",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "name": "remaining",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "basisPointsRate",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "MAX_UINT",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          }
        ],
        "devdoc": {
          "methods": {
            "allowance(address,address)": {
              "details": "Function to check the amount of tokens than an owner allowed to a spender.",
              "params": {
                "_owner": "address The address which owns the funds.",
                "_spender": "address The address which will spend the funds."
              },
              "return": "A uint specifying the amount of tokens still available for the spender."
            },
            "approve(address,uint256)": {
              "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.",
              "params": {
                "_spender": "The address which will spend the funds.",
                "_value": "The amount of tokens to be spent."
              }
            },
            "balanceOf(address)": {
              "details": "Gets the balance of the specified address.",
              "params": {
                "_owner": "The address to query the the balance of."
              },
              "return": "An uint representing the amount owned by the passed address."
            },
            "transfer(address,uint256)": {
              "details": "transfer token for a specified address",
              "params": {
                "_to": "The address to transfer to.",
                "_value": "The amount to be transferred."
              }
            },
            "transferFrom(address,address,uint256)": {
              "details": "Transfer tokens from one address to another",
              "params": {
                "_from": "address The address which you want to send tokens from",
                "_to": "address The address which you want to transfer to",
                "_value": "uint the amount of tokens to be transferred"
              }
            },
            "transferOwnership(address)": {
              "details": "Allows the current owner to transfer control of the contract to a newOwner.",
              "params": {
                "newOwner": "The address to transfer ownership to."
              }
            }
          }
        },
        "evm": {
          "assembly": "",
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "gasEstimates": null,
          "legacyAssembly": null,
          "methodIdentifiers": {
            "MAX_UINT()": "e5b5019a",
            "_totalSupply()": "3eaaf86b",
            "allowance(address,address)": "dd62ed3e",
            "allowed(address,address)": "5c658165",
            "approve(address,uint256)": "095ea7b3",
            "approveByLegacy(address,address,uint256)": "aee92d33",
            "balanceOf(address)": "70a08231",
            "balances(address)": "27e235e3",
            "basisPointsRate()": "dd644f72",
            "maximumFee()": "35390714",
            "owner()": "8da5cb5b",
            "totalSupply()": "18160ddd",
            "transfer(address,uint256)": "a9059cbb",
            "transferByLegacy(address,address,uint256)": "6e18980a",
            "transferFrom(address,address,uint256)": "23b872dd",
            "transferFromByLegacy(address,address,address,uint256)": "8b477adb",
            "transferOwnership(address)": "f2fde38b"
          }
        },
        "metadata": "",
        "userdoc": {
          "methods": {}
        }
      }
    }
  },
  "errors": [
    {
      "component": "general",
      "formattedMessage": "TetherToken.sol:52:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function Ownable() public {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
      "message": "Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.",
      "severity": "warning",
      "sourceLocation": {
        "end": 1403,
        "file": "TetherToken.sol",
        "start": 1342
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "TetherToken.sol:172:9: Warning: Use of the \"var\" keyword is deprecated.\n        var _allowance = allowed[_from][msg.sender];\n        ^------------^\n",
      "message": "Use of the \"var\" keyword is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 5162,
        "file": "TetherToken.sol",
        "start": 5148
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "TetherToken.sol:330:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
      "message": "Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.",
      "severity": "warning",
      "sourceLocation": {
        "end": 10508,
        "file": "TetherToken.sol",
        "start": 10219
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "TetherToken.sol:136:13: Warning: Invoking events without \"emit\" prefix is deprecated.\n            Transfer(msg.sender, owner, fee);\n            ^------------------------------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 3941,
        "file": "TetherToken.sol",
        "start": 3909
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "TetherToken.sol:138:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Transfer(msg.sender, _to, sendAmount);\n        ^-----------------------------------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 3998,
        "file": "TetherToken.sol",
        "start": 3961
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "TetherToken.sol:189:13: Warning: Invoking events without \"emit\" prefix is deprecated.\n            Transfer(_from, owner, fee);\n            ^-------------------------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 5865,
        "file": "TetherToken.sol",
        "start": 5838
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "TetherToken.sol:191:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Transfer(_from, _to, sendAmount);\n        ^------------------------------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 5917,
        "file": "TetherToken.sol",
        "start": 5885
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "TetherToken.sol:208:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Approval(msg.sender, _spender, _value);\n        ^------------------------------------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 6720,
        "file": "TetherToken.sol",
        "start": 6682
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "TetherToken.sol:256:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    Pause();\n    ^-----^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 7883,
        "file": "TetherToken.sol",
        "start": 7876
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "TetherToken.sol:264:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    Unpause();\n    ^-------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 8052,
        "file": "TetherToken.sol",
        "start": 8043
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "TetherToken.sol:283:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        AddedBlackList(_evilUser);\n        ^-----------------------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 8636,
        "file": "TetherToken.sol",
        "start": 8611
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "TetherToken.sol:288:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        RemovedBlackList(_clearedUser);\n        ^----------------------------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 8799,
        "file": "TetherToken.sol",
        "start": 8769
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "TetherToken.sol:296:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        DestroyedBlackFunds(_blackListedUser, dirtyFunds);\n        ^-----------------------------------------------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 9123,
        "file": "TetherToken.sol",
        "start": 9074
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "TetherToken.sol:390:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Deprecate(_upgradedAddress);\n        ^-------------------------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 12646,
        "file": "TetherToken.sol",
        "start": 12619
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "TetherToken.sol:412:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Issue(amount);\n        ^-----------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 13338,
        "file": "TetherToken.sol",
        "start": 13325
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "TetherToken.sol:426:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Redeem(amount);\n        ^------------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 13792,
        "file": "TetherToken.sol",
        "start": 13778
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "TetherToken.sol:437:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Params(basisPointsRate, maximumFee);\n        ^---------------------------------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 14176,
        "file": "TetherToken.sol",
        "start": 14141
      },
      "type": "Warning"
    }
  ],
  "sources": {
    "TetherToken.sol": {
      "ast": {
        "absolutePath": "TetherToken.sol",
        "exportedSymbols": {
          "BasicToken": [
            347
          ],
          "BlackList": [
            717
          ],
          "ERC20": [
            205
          ],
          "ERC20Basic": [
            169
          ],
          "Ownable": [
            139
          ],
          "Pausable": [
            603
          ],
          "SafeMath": [
            97
          ],
          "StandardToken": [
            546
          ],
          "TetherToken": [
            1142
          ],
          "UpgradedStandardToken": [
            749
          ]
        },
        "id": 1143,
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1,
            "literals": [
              "solidity",
              "^",
              "0.4",
              ".17"
            ],
            "nodeType": "PragmaDirective",
            "src": "67:24:0"
          },
          {
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "library",
            "documentation": "@title SafeMath\n@dev Math operations with safety checks that throw on error",
            "fullyImplemented": true,
            "id": 97,
            "linearizedBaseContracts": [
              97
            ],
            "name": "SafeMath",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 33,
                  "nodeType": "Block",
                  "src": "273:134:0",
                  "statements": [
                    {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 10,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "287:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 11,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "292:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "287:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 16,
                      "nodeType": "IfStatement",
                      "src": "283:45:0",
                      "trueBody": {
                        "id": 15,
                        "nodeType": "Block",
                        "src": "295:33:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 13,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "316:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "functionReturnParameters": 9,
                            "id": 14,
                            "nodeType": "Return",
                            "src": "309:8:0"
                          }
                        ]
                      }
                    },
                    {
                      "assignments": [
                        18
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 18,
                          "name": "c",
                          "nodeType": "VariableDeclaration",
                          "scope": 34,
                          "src": "337:9:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 17,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "337:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 22,
                      "initialValue": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 21,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 19,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "349:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 20,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5,
                          "src": "353:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "349:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "337:17:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 28,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 26,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 24,
                                "name": "c",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18,
                                "src": "371:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 25,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3,
                                "src": "375:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "371:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 27,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5,
                              "src": "380:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "371:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 23,
                          "name": "assert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1146,
                          "src": "364:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 29,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "364:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 30,
                      "nodeType": "ExpressionStatement",
                      "src": "364:18:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 31,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "399:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 9,
                      "id": 32,
                      "nodeType": "Return",
                      "src": "392:8:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 34,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "mul",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 6,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 3,
                      "name": "a",
                      "nodeType": "VariableDeclaration",
                      "scope": 34,
                      "src": "219:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "219:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 5,
                      "name": "b",
                      "nodeType": "VariableDeclaration",
                      "scope": 34,
                      "src": "230:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "230:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "218:22:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 9,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 8,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 34,
                      "src": "264:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "264:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "263:9:0"
                },
                "scope": 97,
                "src": "206:201:0",
                "stateMutability": "pure",
                "superFunction": null,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 51,
                  "nodeType": "Block",
                  "src": "480:216:0",
                  "statements": [
                    {
                      "assignments": [
                        44
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 44,
                          "name": "c",
                          "nodeType": "VariableDeclaration",
                          "scope": 52,
                          "src": "568:9:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 43,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "568:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 48,
                      "initialValue": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 45,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "580:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 46,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "584:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "580:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "568:17:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 49,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "688:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 42,
                      "id": 50,
                      "nodeType": "Return",
                      "src": "681:8:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 52,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "div",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 39,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 36,
                      "name": "a",
                      "nodeType": "VariableDeclaration",
                      "scope": 52,
                      "src": "426:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 35,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "426:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 38,
                      "name": "b",
                      "nodeType": "VariableDeclaration",
                      "scope": 52,
                      "src": "437:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 37,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "437:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "425:22:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 42,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 41,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 52,
                      "src": "471:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 40,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "471:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "470:9:0"
                },
                "scope": 97,
                "src": "413:283:0",
                "stateMutability": "pure",
                "superFunction": null,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 71,
                  "nodeType": "Block",
                  "src": "769:53:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 64,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 62,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56,
                              "src": "786:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 63,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "791:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "786:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 61,
                          "name": "assert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1146,
                          "src": "779:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "779:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 66,
                      "nodeType": "ExpressionStatement",
                      "src": "779:14:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 69,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 67,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "810:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 68,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "814:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "810:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 60,
                      "id": 70,
                      "nodeType": "Return",
                      "src": "803:12:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 72,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "sub",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 57,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 54,
                      "name": "a",
                      "nodeType": "VariableDeclaration",
                      "scope": 72,
                      "src": "715:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "715:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 56,
                      "name": "b",
                      "nodeType": "VariableDeclaration",
                      "scope": 72,
                      "src": "726:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 55,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "726:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "714:22:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 60,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 59,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 72,
                      "src": "760:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 58,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "760:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "759:9:0"
                },
                "scope": 97,
                "src": "702:120:0",
                "stateMutability": "pure",
                "superFunction": null,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 95,
                  "nodeType": "Block",
                  "src": "895:76:0",
                  "statements": [
                    {
                      "assignments": [
                        82
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 82,
                          "name": "c",
                          "nodeType": "VariableDeclaration",
                          "scope": 96,
                          "src": "905:9:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 81,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "905:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 86,
                      "initialValue": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 83,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "917:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 84,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "921:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "917:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "905:17:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 90,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 88,
                              "name": "c",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82,
                              "src": "939:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 89,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74,
                              "src": "944:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "939:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 87,
                          "name": "assert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1146,
                          "src": "932:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "932:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 92,
                      "nodeType": "ExpressionStatement",
                      "src": "932:14:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 93,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "963:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 80,
                      "id": 94,
                      "nodeType": "Return",
                      "src": "956:8:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 96,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "add",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 77,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 74,
                      "name": "a",
                      "nodeType": "VariableDeclaration",
                      "scope": 96,
                      "src": "841:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 73,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "841:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 76,
                      "name": "b",
                      "nodeType": "VariableDeclaration",
                      "scope": 96,
                      "src": "852:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 75,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "852:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "840:22:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 80,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 79,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 96,
                      "src": "886:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "886:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "885:9:0"
                },
                "scope": 97,
                "src": "828:143:0",
                "stateMutability": "pure",
                "superFunction": null,
                "visibility": "internal"
              }
            ],
            "scope": 1143,
            "src": "183:790:0"
          },
          {
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": "@title Ownable\n@dev The Ownable contract has an owner address, and provides basic authorization control\nfunctions, this simplifies the implementation of \"user permissions\".",
            "fullyImplemented": true,
            "id": 139,
            "linearizedBaseContracts": [
              139
            ],
            "name": "Ownable",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "id": 99,
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "scope": 139,
                "src": "1188:20:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 98,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1188:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 107,
                  "nodeType": "Block",
                  "src": "1368:35:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 102,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99,
                          "src": "1378:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 103,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1157,
                            "src": "1386:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1386:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1378:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 106,
                      "nodeType": "ExpressionStatement",
                      "src": "1378:18:0"
                    }
                  ]
                },
                "documentation": "@dev The Ownable constructor sets the original `owner` of the contract to the sender\naccount.",
                "id": 108,
                "implemented": true,
                "isConstructor": true,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "Ownable",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 100,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1358:2:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 101,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1368:0:0"
                },
                "scope": 139,
                "src": "1342:61:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 118,
                  "nodeType": "Block",
                  "src": "1514:56:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 111,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1157,
                                "src": "1532:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1532:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 113,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "1546:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "1532:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 110,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1160,
                            1161
                          ],
                          "referencedDeclaration": 1160,
                          "src": "1524:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1524:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 116,
                      "nodeType": "ExpressionStatement",
                      "src": "1524:28:0"
                    },
                    {
                      "id": 117,
                      "nodeType": "PlaceholderStatement",
                      "src": "1562:1:0"
                    }
                  ]
                },
                "documentation": "@dev Throws if called by any account other than the owner.",
                "id": 119,
                "name": "onlyOwner",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 109,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1511:2:0"
                },
                "src": "1493:77:0",
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 137,
                  "nodeType": "Block",
                  "src": "1800:85:0",
                  "statements": [
                    {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 126,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 121,
                          "src": "1814:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1834:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 127,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1826:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1826:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1814:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 136,
                      "nodeType": "IfStatement",
                      "src": "1810:69:0",
                      "trueBody": {
                        "id": 135,
                        "nodeType": "Block",
                        "src": "1838:41:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "id": 131,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99,
                                "src": "1852:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "id": 132,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 121,
                                "src": "1860:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1852:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 134,
                            "nodeType": "ExpressionStatement",
                            "src": "1852:16:0"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": "@dev Allows the current owner to transfer control of the contract to a newOwner.\n@param newOwner The address to transfer ownership to.",
                "id": 138,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 124,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 123,
                      "name": "onlyOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "1790:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "1790:9:0"
                  }
                ],
                "name": "transferOwnership",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 122,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 121,
                      "name": "newOwner",
                      "nodeType": "VariableDeclaration",
                      "scope": 138,
                      "src": "1765:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 120,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1765:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1764:18:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 125,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1800:0:0"
                },
                "scope": 139,
                "src": "1738:147:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              }
            ],
            "scope": 1143,
            "src": "1165:723:0"
          },
          {
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": "@title ERC20Basic\n@dev Simpler version of ERC20 interface\n@dev see https://github.com/ethereum/EIPs/issues/20",
            "fullyImplemented": false,
            "id": 169,
            "linearizedBaseContracts": [
              169
            ],
            "name": "ERC20Basic",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "id": 141,
                "name": "_totalSupply",
                "nodeType": "VariableDeclaration",
                "scope": 169,
                "src": "2043:24:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 140,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2043:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "body": null,
                "documentation": null,
                "id": 146,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "totalSupply",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 142,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2093:2:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 145,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 144,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 146,
                      "src": "2121:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 143,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2121:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2120:6:0"
                },
                "scope": 169,
                "src": "2073:54:0",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": null,
                "documentation": null,
                "id": 153,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "balanceOf",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 149,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 148,
                      "name": "who",
                      "nodeType": "VariableDeclaration",
                      "scope": 153,
                      "src": "2151:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 147,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2151:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2150:13:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 152,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 151,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 153,
                      "src": "2189:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 150,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2189:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2188:6:0"
                },
                "scope": 169,
                "src": "2132:63:0",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": null,
                "documentation": null,
                "id": 160,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "transfer",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 158,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 155,
                      "name": "to",
                      "nodeType": "VariableDeclaration",
                      "scope": 160,
                      "src": "2218:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 154,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2218:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 157,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 160,
                      "src": "2230:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 156,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2230:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2217:24:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 159,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2248:0:0"
                },
                "scope": 169,
                "src": "2200:49:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 168,
                "name": "Transfer",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 167,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 162,
                      "indexed": true,
                      "name": "from",
                      "nodeType": "VariableDeclaration",
                      "scope": 168,
                      "src": "2269:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 161,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2269:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 164,
                      "indexed": true,
                      "name": "to",
                      "nodeType": "VariableDeclaration",
                      "scope": 168,
                      "src": "2291:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 163,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2291:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 166,
                      "indexed": false,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 168,
                      "src": "2311:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 165,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2311:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2268:54:0"
                },
                "src": "2254:69:0"
              }
            ],
            "scope": 1143,
            "src": "2017:308:0"
          },
          {
            "baseContracts": [
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 170,
                  "name": "ERC20Basic",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 169,
                  "src": "2434:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Basic_$169",
                    "typeString": "contract ERC20Basic"
                  }
                },
                "id": 171,
                "nodeType": "InheritanceSpecifier",
                "src": "2434:10:0"
              }
            ],
            "contractDependencies": [
              169
            ],
            "contractKind": "contract",
            "documentation": "@title ERC20 interface\n@dev see https://github.com/ethereum/EIPs/issues/20",
            "fullyImplemented": false,
            "id": 205,
            "linearizedBaseContracts": [
              205,
              169
            ],
            "name": "ERC20",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": null,
                "documentation": null,
                "id": 180,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "allowance",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 176,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 173,
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 180,
                      "src": "2470:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 172,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2470:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 175,
                      "name": "spender",
                      "nodeType": "VariableDeclaration",
                      "scope": 180,
                      "src": "2485:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 174,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2485:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2469:32:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 179,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 178,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 180,
                      "src": "2527:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 177,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2527:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2526:6:0"
                },
                "scope": 205,
                "src": "2451:82:0",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": null,
                "documentation": null,
                "id": 189,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "transferFrom",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 187,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 182,
                      "name": "from",
                      "nodeType": "VariableDeclaration",
                      "scope": 189,
                      "src": "2560:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 181,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2560:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 184,
                      "name": "to",
                      "nodeType": "VariableDeclaration",
                      "scope": 189,
                      "src": "2574:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 183,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2574:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 186,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 189,
                      "src": "2586:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 185,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2586:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2559:38:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 188,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2604:0:0"
                },
                "scope": 205,
                "src": "2538:67:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": null,
                "documentation": null,
                "id": 196,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "approve",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 194,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 191,
                      "name": "spender",
                      "nodeType": "VariableDeclaration",
                      "scope": 196,
                      "src": "2627:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 190,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2627:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 193,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 196,
                      "src": "2644:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 192,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2644:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2626:29:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 195,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2662:0:0"
                },
                "scope": 205,
                "src": "2610:53:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 204,
                "name": "Approval",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 203,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 198,
                      "indexed": true,
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 204,
                      "src": "2683:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 197,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2683:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 200,
                      "indexed": true,
                      "name": "spender",
                      "nodeType": "VariableDeclaration",
                      "scope": 204,
                      "src": "2706:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 199,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2706:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 202,
                      "indexed": false,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 204,
                      "src": "2731:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 201,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2731:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2682:60:0"
                },
                "src": "2668:75:0"
              }
            ],
            "scope": 1143,
            "src": "2416:329:0"
          },
          {
            "baseContracts": [
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 206,
                  "name": "Ownable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 139,
                  "src": "2860:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Ownable_$139",
                    "typeString": "contract Ownable"
                  }
                },
                "id": 207,
                "nodeType": "InheritanceSpecifier",
                "src": "2860:7:0"
              },
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 208,
                  "name": "ERC20Basic",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 169,
                  "src": "2869:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Basic_$169",
                    "typeString": "contract ERC20Basic"
                  }
                },
                "id": 209,
                "nodeType": "InheritanceSpecifier",
                "src": "2869:10:0"
              }
            ],
            "contractDependencies": [
              139,
              169
            ],
            "contractKind": "contract",
            "documentation": "@title Basic token\n@dev Basic version of StandardToken, with no allowances.",
            "fullyImplemented": false,
            "id": 347,
            "linearizedBaseContracts": [
              347,
              169,
              139
            ],
            "name": "BasicToken",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "id": 212,
                "libraryName": {
                  "contractScope": null,
                  "id": 210,
                  "name": "SafeMath",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 97,
                  "src": "2892:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SafeMath_$97",
                    "typeString": "library SafeMath"
                  }
                },
                "nodeType": "UsingForDirective",
                "src": "2886:24:0",
                "typeName": {
                  "id": 211,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2905:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              },
              {
                "constant": false,
                "id": 216,
                "name": "balances",
                "nodeType": "VariableDeclaration",
                "scope": 347,
                "src": "2916:40:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "typeName": {
                  "id": 215,
                  "keyType": {
                    "id": 213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2924:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "2916:24:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "valueType": {
                    "id": 214,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2935:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 219,
                "name": "basisPointsRate",
                "nodeType": "VariableDeclaration",
                "scope": 347,
                "src": "3041:31:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 217,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "3041:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "argumentTypes": null,
                  "hexValue": "30",
                  "id": 218,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3071:1:0",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                },
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 222,
                "name": "maximumFee",
                "nodeType": "VariableDeclaration",
                "scope": 347,
                "src": "3078:26:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 220,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "3078:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "argumentTypes": null,
                  "hexValue": "30",
                  "id": 221,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3103:1:0",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                },
                "visibility": "public"
              },
              {
                "body": {
                  "id": 239,
                  "nodeType": "Block",
                  "src": "3213:66:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "3231:29:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 233,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 227,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1157,
                                        "src": "3233:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 228,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "data",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "3233:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_calldata_ptr",
                                        "typeString": "bytes calldata"
                                      }
                                    },
                                    "id": 229,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "3233:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 232,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 230,
                                      "name": "size",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 224,
                                      "src": "3251:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "34",
                                      "id": 231,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3258:1:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_4_by_1",
                                        "typeString": "int_const 4"
                                      },
                                      "value": "4"
                                    },
                                    "src": "3251:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3233:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 234,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3232:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 226,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1160,
                            1161
                          ],
                          "referencedDeclaration": 1160,
                          "src": "3223:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3223:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 237,
                      "nodeType": "ExpressionStatement",
                      "src": "3223:38:0"
                    },
                    {
                      "id": 238,
                      "nodeType": "PlaceholderStatement",
                      "src": "3271:1:0"
                    }
                  ]
                },
                "documentation": "@dev Fix for the ERC20 short address attack.",
                "id": 240,
                "name": "onlyPayloadSize",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 225,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 224,
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 240,
                      "src": "3202:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 223,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3202:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "3201:11:0"
                },
                "src": "3177:102:0",
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 333,
                  "nodeType": "Block",
                  "src": "3520:485:0",
                  "statements": [
                    {
                      "assignments": [
                        253
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 253,
                          "name": "fee",
                          "nodeType": "VariableDeclaration",
                          "scope": 334,
                          "src": "3530:8:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 252,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "3530:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 262,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "3130303030",
                            "id": 260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3575:5:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "10000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 256,
                                    "name": "basisPointsRate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 219,
                                    "src": "3553:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 254,
                                    "name": "_value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 244,
                                    "src": "3542:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 255,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 34,
                                  "src": "3542:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 257,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3542:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 258,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3541:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52,
                          "src": "3541:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3541:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "3530:51:0"
                    },
                    {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 263,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 253,
                          "src": "3595:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 264,
                          "name": "maximumFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 222,
                          "src": "3601:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3595:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 271,
                      "nodeType": "IfStatement",
                      "src": "3591:63:0",
                      "trueBody": {
                        "id": 270,
                        "nodeType": "Block",
                        "src": "3613:41:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "id": 266,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 253,
                                "src": "3627:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "id": 267,
                                "name": "maximumFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 222,
                                "src": "3633:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3627:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 269,
                            "nodeType": "ExpressionStatement",
                            "src": "3627:16:0"
                          }
                        ]
                      }
                    },
                    {
                      "assignments": [
                        273
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 273,
                          "name": "sendAmount",
                          "nodeType": "VariableDeclaration",
                          "scope": 334,
                          "src": "3663:15:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 272,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "3663:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 278,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 276,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 253,
                            "src": "3692:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 274,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 244,
                            "src": "3681:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 72,
                          "src": "3681:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3681:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "3663:33:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 279,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 216,
                            "src": "3706:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 282,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 280,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1157,
                              "src": "3715:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3715:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "3706:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 288,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 244,
                              "src": "3754:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 283,
                                "name": "balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 216,
                                "src": "3729:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 286,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 284,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1157,
                                  "src": "3738:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 285,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3738:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3729:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 72,
                            "src": "3729:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3729:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3706:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 291,
                      "nodeType": "ExpressionStatement",
                      "src": "3706:55:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 292,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 216,
                            "src": "3771:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 294,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 293,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 242,
                            "src": "3780:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "3771:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 299,
                              "name": "sendAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 273,
                              "src": "3805:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 295,
                                "name": "balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 216,
                                "src": "3787:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 297,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 296,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 242,
                                "src": "3796:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3787:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 96,
                            "src": "3787:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3787:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3771:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 302,
                      "nodeType": "ExpressionStatement",
                      "src": "3771:45:0"
                    },
                    {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 303,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 253,
                          "src": "3830:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3836:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3830:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 325,
                      "nodeType": "IfStatement",
                      "src": "3826:126:0",
                      "trueBody": {
                        "id": 324,
                        "nodeType": "Block",
                        "src": "3839:113:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 306,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 216,
                                  "src": "3853:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 308,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 307,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99,
                                  "src": "3862:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "3853:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 313,
                                    "name": "fee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 253,
                                    "src": "3891:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 309,
                                      "name": "balances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 216,
                                      "src": "3871:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 311,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 310,
                                      "name": "owner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 99,
                                      "src": "3880:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3871:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 312,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "add",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 96,
                                  "src": "3871:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 314,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3871:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3853:42:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 316,
                            "nodeType": "ExpressionStatement",
                            "src": "3853:42:0"
                          },
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 318,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1157,
                                    "src": "3918:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 319,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "3918:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 320,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99,
                                  "src": "3930:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 321,
                                  "name": "fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 253,
                                  "src": "3937:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 317,
                                "name": "Transfer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 168,
                                "src": "3909:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256)"
                                }
                              },
                              "id": 322,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3909:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 323,
                            "nodeType": "ExpressionStatement",
                            "src": "3909:32:0"
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 327,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1157,
                              "src": "3970:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3970:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 329,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 242,
                            "src": "3982:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 330,
                            "name": "sendAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 273,
                            "src": "3987:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 326,
                          "name": "Transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 168,
                          "src": "3961:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3961:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 332,
                      "nodeType": "ExpressionStatement",
                      "src": "3961:37:0"
                    }
                  ]
                },
                "documentation": "@dev transfer token for a specified address\n@param _to The address to transfer to.\n@param _value The amount to be transferred.",
                "id": 334,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [
                  {
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_64_by_1",
                          "typeString": "int_const 64"
                        },
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3512:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3332",
                          "id": 248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3516:2:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32_by_1",
                            "typeString": "int_const 32"
                          },
                          "value": "32"
                        },
                        "src": "3512:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_64_by_1",
                          "typeString": "int_const 64"
                        }
                      }
                    ],
                    "id": 250,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 246,
                      "name": "onlyPayloadSize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 240,
                      "src": "3496:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$_t_uint256_$",
                        "typeString": "modifier (uint256)"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "3496:23:0"
                  }
                ],
                "name": "transfer",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 245,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 242,
                      "name": "_to",
                      "nodeType": "VariableDeclaration",
                      "scope": 334,
                      "src": "3463:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 241,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3463:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 244,
                      "name": "_value",
                      "nodeType": "VariableDeclaration",
                      "scope": 334,
                      "src": "3476:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 243,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3476:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "3462:26:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 251,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3520:0:0"
                },
                "scope": 347,
                "src": "3445:560:0",
                "stateMutability": "nonpayable",
                "superFunction": 160,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 345,
                  "nodeType": "Block",
                  "src": "4290:40:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 341,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 216,
                          "src": "4307:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 343,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 342,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 336,
                          "src": "4316:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4307:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 340,
                      "id": 344,
                      "nodeType": "Return",
                      "src": "4300:23:0"
                    }
                  ]
                },
                "documentation": "@dev Gets the balance of the specified address.\n@param _owner The address to query the the balance of.\n@return An uint representing the amount owned by the passed address.",
                "id": 346,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "balanceOf",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 337,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 336,
                      "name": "_owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 346,
                      "src": "4235:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 335,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4235:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "4234:16:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 340,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 339,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 346,
                      "src": "4276:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 338,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4276:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "4275:14:0"
                },
                "scope": 347,
                "src": "4216:114:0",
                "stateMutability": "view",
                "superFunction": 153,
                "visibility": "public"
              }
            ],
            "scope": 1143,
            "src": "2837:1496:0"
          },
          {
            "baseContracts": [
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 348,
                  "name": "BasicToken",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 347,
                  "src": "4627:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BasicToken_$347",
                    "typeString": "contract BasicToken"
                  }
                },
                "id": 349,
                "nodeType": "InheritanceSpecifier",
                "src": "4627:10:0"
              },
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 350,
                  "name": "ERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 205,
                  "src": "4639:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$205",
                    "typeString": "contract ERC20"
                  }
                },
                "id": 351,
                "nodeType": "InheritanceSpecifier",
                "src": "4639:5:0"
              }
            ],
            "contractDependencies": [
              205,
              139,
              169,
              347
            ],
            "contractKind": "contract",
            "documentation": "@title Standard ERC20 token\n * @dev Implementation of the basic standard token.\n@dev https://github.com/ethereum/EIPs/issues/20\n@dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol",
            "fullyImplemented": false,
            "id": 546,
            "linearizedBaseContracts": [
              546,
              205,
              347,
              169,
              139
            ],
            "name": "StandardToken",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "id": 357,
                "name": "allowed",
                "nodeType": "VariableDeclaration",
                "scope": 546,
                "src": "4652:61:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                  "typeString": "mapping(address => mapping(address => uint256))"
                },
                "typeName": {
                  "id": 356,
                  "keyType": {
                    "id": 352,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4661:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "4652:46:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "valueType": {
                    "id": 355,
                    "keyType": {
                      "id": 353,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4681:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "4672:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 354,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "4692:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "constant": true,
                "id": 364,
                "name": "MAX_UINT",
                "nodeType": "VariableDeclaration",
                "scope": 546,
                "src": "4720:42:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 358,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "4720:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "argumentTypes": null,
                  "commonType": {
                    "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                    "typeString": "int_const 1157...(70 digits omitted)...9935"
                  },
                  "id": 363,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                      "typeString": "int_const 1157...(70 digits omitted)...9936"
                    },
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4752:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "323536",
                      "id": 360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4755:3:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "src": "4752:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                      "typeString": "int_const 1157...(70 digits omitted)...9936"
                    }
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "-",
                  "rightExpression": {
                    "argumentTypes": null,
                    "hexValue": "31",
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4761:1:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "src": "4752:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                    "typeString": "int_const 1157...(70 digits omitted)...9935"
                  }
                },
                "visibility": "public"
              },
              {
                "body": {
                  "id": 480,
                  "nodeType": "Block",
                  "src": "5138:786:0",
                  "statements": [
                    {
                      "assignments": [
                        378
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 378,
                          "name": "_allowance",
                          "nodeType": "VariableDeclaration",
                          "scope": 481,
                          "src": "5148:14:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": null,
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 385,
                      "initialValue": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 379,
                            "name": "allowed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 357,
                            "src": "5165:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 381,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 380,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "5173:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5165:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 384,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 382,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1157,
                            "src": "5180:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5180:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5165:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "5148:43:0"
                    },
                    {
                      "assignments": [
                        387
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 387,
                          "name": "fee",
                          "nodeType": "VariableDeclaration",
                          "scope": 481,
                          "src": "5357:8:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 386,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "5357:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 396,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "3130303030",
                            "id": 394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5402:5:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "10000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 390,
                                    "name": "basisPointsRate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 219,
                                    "src": "5380:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 388,
                                    "name": "_value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 370,
                                    "src": "5369:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 389,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 34,
                                  "src": "5369:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 391,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5369:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 392,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5368:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52,
                          "src": "5368:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5368:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "5357:51:0"
                    },
                    {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 397,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 387,
                          "src": "5422:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 398,
                          "name": "maximumFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 222,
                          "src": "5428:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5422:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 405,
                      "nodeType": "IfStatement",
                      "src": "5418:63:0",
                      "trueBody": {
                        "id": 404,
                        "nodeType": "Block",
                        "src": "5440:41:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "id": 400,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 387,
                                "src": "5454:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "id": 401,
                                "name": "maximumFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 222,
                                "src": "5460:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5454:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 403,
                            "nodeType": "ExpressionStatement",
                            "src": "5454:16:0"
                          }
                        ]
                      }
                    },
                    {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 406,
                          "name": "_allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 378,
                          "src": "5494:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 407,
                          "name": "MAX_UINT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 364,
                          "src": "5507:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5494:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 422,
                      "nodeType": "IfStatement",
                      "src": "5490:103:0",
                      "trueBody": {
                        "id": 421,
                        "nodeType": "Block",
                        "src": "5517:76:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 409,
                                    "name": "allowed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 357,
                                    "src": "5531:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 413,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 410,
                                    "name": "_from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 366,
                                    "src": "5539:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5531:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 414,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 411,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1157,
                                    "src": "5546:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 412,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "5546:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "5531:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 417,
                                    "name": "_value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 370,
                                    "src": "5575:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 415,
                                    "name": "_allowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 378,
                                    "src": "5560:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 416,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 72,
                                  "src": "5560:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 418,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5560:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5531:51:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 420,
                            "nodeType": "ExpressionStatement",
                            "src": "5531:51:0"
                          }
                        ]
                      }
                    },
                    {
                      "assignments": [
                        424
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 424,
                          "name": "sendAmount",
                          "nodeType": "VariableDeclaration",
                          "scope": 481,
                          "src": "5602:15:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 423,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "5602:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 429,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 427,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 387,
                            "src": "5631:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 425,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 370,
                            "src": "5620:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 72,
                          "src": "5620:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5620:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "5602:33:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 430,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 216,
                            "src": "5645:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 432,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 431,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "5654:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "5645:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 437,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 370,
                              "src": "5683:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 433,
                                "name": "balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 216,
                                "src": "5663:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 435,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 434,
                                "name": "_from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 366,
                                "src": "5672:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5663:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 72,
                            "src": "5663:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5663:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5645:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 440,
                      "nodeType": "ExpressionStatement",
                      "src": "5645:45:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 441,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 216,
                            "src": "5700:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 443,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 442,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 368,
                            "src": "5709:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "5700:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 448,
                              "name": "sendAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 424,
                              "src": "5734:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 444,
                                "name": "balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 216,
                                "src": "5716:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 446,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 445,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 368,
                                "src": "5725:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5716:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 96,
                            "src": "5716:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5716:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5700:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 451,
                      "nodeType": "ExpressionStatement",
                      "src": "5700:45:0"
                    },
                    {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 452,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 387,
                          "src": "5759:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5765:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5759:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 473,
                      "nodeType": "IfStatement",
                      "src": "5755:121:0",
                      "trueBody": {
                        "id": 472,
                        "nodeType": "Block",
                        "src": "5768:108:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 455,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 216,
                                  "src": "5782:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 457,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 456,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99,
                                  "src": "5791:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "5782:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 462,
                                    "name": "fee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 387,
                                    "src": "5820:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 458,
                                      "name": "balances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 216,
                                      "src": "5800:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 460,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 459,
                                      "name": "owner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 99,
                                      "src": "5809:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5800:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 461,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "add",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 96,
                                  "src": "5800:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 463,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5800:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5782:42:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 465,
                            "nodeType": "ExpressionStatement",
                            "src": "5782:42:0"
                          },
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 467,
                                  "name": "_from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 366,
                                  "src": "5847:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 468,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99,
                                  "src": "5854:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 469,
                                  "name": "fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 387,
                                  "src": "5861:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 466,
                                "name": "Transfer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 168,
                                "src": "5838:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256)"
                                }
                              },
                              "id": 470,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5838:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 471,
                            "nodeType": "ExpressionStatement",
                            "src": "5838:27:0"
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 475,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "5894:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 476,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 368,
                            "src": "5901:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 477,
                            "name": "sendAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 424,
                            "src": "5906:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 474,
                          "name": "Transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 168,
                          "src": "5885:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5885:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 479,
                      "nodeType": "ExpressionStatement",
                      "src": "5885:32:0"
                    }
                  ]
                },
                "documentation": "@dev Transfer tokens from one address to another\n@param _from address The address which you want to send tokens from\n@param _to address The address which you want to transfer to\n@param _value uint the amount of tokens to be transferred",
                "id": 481,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [
                  {
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_96_by_1",
                          "typeString": "int_const 96"
                        },
                        "id": 375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "33",
                          "id": 373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5130:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3332",
                          "id": 374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5134:2:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32_by_1",
                            "typeString": "int_const 32"
                          },
                          "value": "32"
                        },
                        "src": "5130:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_96_by_1",
                          "typeString": "int_const 96"
                        }
                      }
                    ],
                    "id": 376,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 372,
                      "name": "onlyPayloadSize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 240,
                      "src": "5114:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$_t_uint256_$",
                        "typeString": "modifier (uint256)"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "5114:23:0"
                  }
                ],
                "name": "transferFrom",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 371,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 366,
                      "name": "_from",
                      "nodeType": "VariableDeclaration",
                      "scope": 481,
                      "src": "5066:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 365,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5066:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 368,
                      "name": "_to",
                      "nodeType": "VariableDeclaration",
                      "scope": 481,
                      "src": "5081:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 367,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5081:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 370,
                      "name": "_value",
                      "nodeType": "VariableDeclaration",
                      "scope": 481,
                      "src": "5094:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 369,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5094:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "5065:41:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 377,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "5138:0:0"
                },
                "scope": 546,
                "src": "5044:880:0",
                "stateMutability": "nonpayable",
                "superFunction": 189,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 528,
                  "nodeType": "Block",
                  "src": "6243:484:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 509,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "6566:56:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 507,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "components": [
                                      {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 496,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "id": 494,
                                          "name": "_value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 485,
                                          "src": "6569:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "!=",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "30",
                                          "id": 495,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "6579:1:0",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "6569:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      }
                                    ],
                                    "id": 497,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "6568:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "components": [
                                      {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 505,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "id": 498,
                                              "name": "allowed",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 357,
                                              "src": "6586:7:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                                "typeString": "mapping(address => mapping(address => uint256))"
                                              }
                                            },
                                            "id": 501,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 499,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1157,
                                                "src": "6594:3:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 500,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": null,
                                              "src": "6594:10:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "6586:19:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                              "typeString": "mapping(address => uint256)"
                                            }
                                          },
                                          "id": 503,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 502,
                                            "name": "_spender",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 483,
                                            "src": "6606:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "6586:29:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "!=",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "30",
                                          "id": 504,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "6619:1:0",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "6586:34:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      }
                                    ],
                                    "id": 506,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "6585:36:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "6568:53:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 508,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6567:55:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 493,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1160,
                            1161
                          ],
                          "referencedDeclaration": 1160,
                          "src": "6558:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6558:65:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 511,
                      "nodeType": "ExpressionStatement",
                      "src": "6558:65:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 512,
                              "name": "allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 357,
                              "src": "6634:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 516,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 513,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1157,
                                "src": "6642:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 514,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6642:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6634:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 517,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 515,
                            "name": "_spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 483,
                            "src": "6654:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "6634:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 518,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 485,
                          "src": "6666:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6634:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 520,
                      "nodeType": "ExpressionStatement",
                      "src": "6634:38:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 522,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1157,
                              "src": "6691:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6691:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 524,
                            "name": "_spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 483,
                            "src": "6703:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 525,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 485,
                            "src": "6713:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 521,
                          "name": "Approval",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 204,
                          "src": "6682:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6682:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 527,
                      "nodeType": "ExpressionStatement",
                      "src": "6682:38:0"
                    }
                  ]
                },
                "documentation": "@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n@param _spender The address which will spend the funds.\n@param _value The amount of tokens to be spent.",
                "id": 529,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [
                  {
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_64_by_1",
                          "typeString": "int_const 64"
                        },
                        "id": 490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6235:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3332",
                          "id": 489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6239:2:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32_by_1",
                            "typeString": "int_const 32"
                          },
                          "value": "32"
                        },
                        "src": "6235:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_64_by_1",
                          "typeString": "int_const 64"
                        }
                      }
                    ],
                    "id": 491,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 487,
                      "name": "onlyPayloadSize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 240,
                      "src": "6219:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$_t_uint256_$",
                        "typeString": "modifier (uint256)"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "6219:23:0"
                  }
                ],
                "name": "approve",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 486,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 483,
                      "name": "_spender",
                      "nodeType": "VariableDeclaration",
                      "scope": 529,
                      "src": "6181:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 482,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6181:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 485,
                      "name": "_value",
                      "nodeType": "VariableDeclaration",
                      "scope": 529,
                      "src": "6199:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 484,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6199:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "6180:31:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 492,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "6243:0:0"
                },
                "scope": 546,
                "src": "6164:563:0",
                "stateMutability": "nonpayable",
                "superFunction": 196,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 544,
                  "nodeType": "Block",
                  "src": "7146:49:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 538,
                            "name": "allowed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 357,
                            "src": "7163:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 540,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 539,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 531,
                            "src": "7171:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7163:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 542,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 541,
                          "name": "_spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 533,
                          "src": "7179:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7163:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 537,
                      "id": 543,
                      "nodeType": "Return",
                      "src": "7156:32:0"
                    }
                  ]
                },
                "documentation": "@dev Function to check the amount of tokens than an owner allowed to a spender.\n@param _owner address The address which owns the funds.\n@param _spender address The address which will spend the funds.\n@return A uint specifying the amount of tokens still available for the spender.",
                "id": 545,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "allowance",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 534,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 531,
                      "name": "_owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 545,
                      "src": "7071:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 530,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7071:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 533,
                      "name": "_spender",
                      "nodeType": "VariableDeclaration",
                      "scope": 545,
                      "src": "7087:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 532,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7087:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "7070:34:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 537,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 536,
                      "name": "remaining",
                      "nodeType": "VariableDeclaration",
                      "scope": 545,
                      "src": "7130:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 535,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7130:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "7129:16:0"
                },
                "scope": 546,
                "src": "7052:143:0",
                "stateMutability": "view",
                "superFunction": 180,
                "visibility": "public"
              }
            ],
            "scope": 1143,
            "src": "4601:2597:0"
          },
          {
            "baseContracts": [
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 547,
                  "name": "Ownable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 139,
                  "src": "7335:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Ownable_$139",
                    "typeString": "contract Ownable"
                  }
                },
                "id": 548,
                "nodeType": "InheritanceSpecifier",
                "src": "7335:7:0"
              }
            ],
            "contractDependencies": [
              139
            ],
            "contractKind": "contract",
            "documentation": "@title Pausable\n@dev Base contract which allows children to implement an emergency stop mechanism.",
            "fullyImplemented": true,
            "id": 603,
            "linearizedBaseContracts": [
              603,
              139
            ],
            "name": "Pausable",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "anonymous": false,
                "documentation": null,
                "id": 550,
                "name": "Pause",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 549,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "7358:2:0"
                },
                "src": "7347:14:0"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 552,
                "name": "Unpause",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 551,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "7377:2:0"
                },
                "src": "7364:16:0"
              },
              {
                "constant": false,
                "id": 555,
                "name": "paused",
                "nodeType": "VariableDeclaration",
                "scope": 603,
                "src": "7384:26:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 553,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "7384:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": {
                  "argumentTypes": null,
                  "hexValue": "66616c7365",
                  "id": 554,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "bool",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "7405:5:0",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "value": "false"
                },
                "visibility": "public"
              },
              {
                "body": {
                  "id": 563,
                  "nodeType": "Block",
                  "src": "7538:34:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "7552:7:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 558,
                              "name": "paused",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 555,
                              "src": "7553:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 557,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1160,
                            1161
                          ],
                          "referencedDeclaration": 1160,
                          "src": "7544:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7544:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 561,
                      "nodeType": "ExpressionStatement",
                      "src": "7544:16:0"
                    },
                    {
                      "id": 562,
                      "nodeType": "PlaceholderStatement",
                      "src": "7566:1:0"
                    }
                  ]
                },
                "documentation": "@dev Modifier to make a function callable only when the contract is not paused.",
                "id": 564,
                "name": "whenNotPaused",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 556,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "7535:2:0"
                },
                "src": "7513:59:0",
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 571,
                  "nodeType": "Block",
                  "src": "7691:33:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 567,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 555,
                            "src": "7705:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 566,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1160,
                            1161
                          ],
                          "referencedDeclaration": 1160,
                          "src": "7697:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7697:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 569,
                      "nodeType": "ExpressionStatement",
                      "src": "7697:15:0"
                    },
                    {
                      "id": 570,
                      "nodeType": "PlaceholderStatement",
                      "src": "7718:1:0"
                    }
                  ]
                },
                "documentation": "@dev Modifier to make a function callable only when the contract is paused.",
                "id": 572,
                "name": "whenPaused",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 565,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "7688:2:0"
                },
                "src": "7669:55:0",
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 586,
                  "nodeType": "Block",
                  "src": "7851:37:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 579,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 555,
                          "src": "7857:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7866:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "7857:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 582,
                      "nodeType": "ExpressionStatement",
                      "src": "7857:13:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 583,
                          "name": "Pause",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 550,
                          "src": "7876:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                            "typeString": "function ()"
                          }
                        },
                        "id": 584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7876:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 585,
                      "nodeType": "ExpressionStatement",
                      "src": "7876:7:0"
                    }
                  ]
                },
                "documentation": "@dev called by the owner to pause, triggers stopped state",
                "id": 587,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 575,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 574,
                      "name": "onlyOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "7820:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "7820:9:0"
                  },
                  {
                    "arguments": null,
                    "id": 577,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 576,
                      "name": "whenNotPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 564,
                      "src": "7830:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "7830:13:0"
                  }
                ],
                "name": "pause",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 573,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "7817:2:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 578,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "7851:0:0"
                },
                "scope": 603,
                "src": "7803:85:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 601,
                  "nodeType": "Block",
                  "src": "8017:40:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 594,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 555,
                          "src": "8023:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8032:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "8023:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 597,
                      "nodeType": "ExpressionStatement",
                      "src": "8023:14:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 598,
                          "name": "Unpause",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 552,
                          "src": "8043:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                            "typeString": "function ()"
                          }
                        },
                        "id": 599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8043:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 600,
                      "nodeType": "ExpressionStatement",
                      "src": "8043:9:0"
                    }
                  ]
                },
                "documentation": "@dev called by the owner to unpause, returns to normal state",
                "id": 602,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 590,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 589,
                      "name": "onlyOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "7989:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "7989:9:0"
                  },
                  {
                    "arguments": null,
                    "id": 592,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 591,
                      "name": "whenPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 572,
                      "src": "7999:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "7999:10:0"
                  }
                ],
                "name": "unpause",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 588,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "7986:2:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 593,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "8017:0:0"
                },
                "scope": 603,
                "src": "7970:87:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              }
            ],
            "scope": 1143,
            "src": "7314:745:0"
          },
          {
            "baseContracts": [
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 604,
                  "name": "Ownable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 139,
                  "src": "8083:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Ownable_$139",
                    "typeString": "contract Ownable"
                  }
                },
                "id": 605,
                "nodeType": "InheritanceSpecifier",
                "src": "8083:7:0"
              },
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 606,
                  "name": "BasicToken",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 347,
                  "src": "8092:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BasicToken_$347",
                    "typeString": "contract BasicToken"
                  }
                },
                "id": 607,
                "nodeType": "InheritanceSpecifier",
                "src": "8092:10:0"
              }
            ],
            "contractDependencies": [
              139,
              169,
              347
            ],
            "contractKind": "contract",
            "documentation": null,
            "fullyImplemented": false,
            "id": 717,
            "linearizedBaseContracts": [
              717,
              347,
              169,
              139
            ],
            "name": "BlackList",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 618,
                  "nodeType": "Block",
                  "src": "8306:45:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 614,
                          "name": "isBlackListed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 631,
                          "src": "8323:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 616,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 615,
                          "name": "_maker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 609,
                          "src": "8337:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8323:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 613,
                      "id": 617,
                      "nodeType": "Return",
                      "src": "8316:28:0"
                    }
                  ]
                },
                "documentation": "//// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////",
                "id": 619,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "getBlackListStatus",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 610,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 609,
                      "name": "_maker",
                      "nodeType": "VariableDeclaration",
                      "scope": 619,
                      "src": "8257:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 608,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8257:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "8256:16:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 613,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 612,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 619,
                      "src": "8300:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 611,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8300:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "8299:6:0"
                },
                "scope": 717,
                "src": "8229:122:0",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 626,
                  "nodeType": "Block",
                  "src": "8413:29:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 624,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "8430:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 623,
                      "id": 625,
                      "nodeType": "Return",
                      "src": "8423:12:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 627,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "getOwner",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 620,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "8374:2:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 623,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 622,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 627,
                      "src": "8404:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 621,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8404:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "8403:9:0"
                },
                "scope": 717,
                "src": "8357:85:0",
                "stateMutability": "view",
                "superFunction": null,
                "visibility": "external"
              },
              {
                "constant": false,
                "id": 631,
                "name": "isBlackListed",
                "nodeType": "VariableDeclaration",
                "scope": 717,
                "src": "8448:46:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "typeName": {
                  "id": 630,
                  "keyType": {
                    "id": 628,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8457:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "8448:25:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "valueType": {
                    "id": 629,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8468:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 648,
                  "nodeType": "Block",
                  "src": "8560:83:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 638,
                            "name": "isBlackListed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 631,
                            "src": "8570:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 640,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 639,
                            "name": "_evilUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 633,
                            "src": "8584:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "8570:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8597:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "8570:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 643,
                      "nodeType": "ExpressionStatement",
                      "src": "8570:31:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 645,
                            "name": "_evilUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 633,
                            "src": "8626:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 644,
                          "name": "AddedBlackList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 712,
                          "src": "8611:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8611:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 647,
                      "nodeType": "ExpressionStatement",
                      "src": "8611:25:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 649,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 636,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 635,
                      "name": "onlyOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "8550:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "8550:9:0"
                  }
                ],
                "name": "addBlackList",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 634,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 633,
                      "name": "_evilUser",
                      "nodeType": "VariableDeclaration",
                      "scope": 649,
                      "src": "8524:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 632,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8524:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "8523:19:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 637,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "8560:0:0"
                },
                "scope": 717,
                "src": "8501:142:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 666,
                  "nodeType": "Block",
                  "src": "8714:92:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 656,
                            "name": "isBlackListed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 631,
                            "src": "8724:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 658,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 657,
                            "name": "_clearedUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 651,
                            "src": "8738:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "8724:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8754:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "8724:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 661,
                      "nodeType": "ExpressionStatement",
                      "src": "8724:35:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 663,
                            "name": "_clearedUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 651,
                            "src": "8786:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 662,
                          "name": "RemovedBlackList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 716,
                          "src": "8769:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8769:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 665,
                      "nodeType": "ExpressionStatement",
                      "src": "8769:30:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 667,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 654,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 653,
                      "name": "onlyOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "8704:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "8704:9:0"
                  }
                ],
                "name": "removeBlackList",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 652,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 651,
                      "name": "_clearedUser",
                      "nodeType": "VariableDeclaration",
                      "scope": 667,
                      "src": "8675:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 650,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8675:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "8674:22:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 655,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "8714:0:0"
                },
                "scope": 717,
                "src": "8649:157:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 701,
                  "nodeType": "Block",
                  "src": "8883:247:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 675,
                              "name": "isBlackListed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 631,
                              "src": "8901:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 677,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 676,
                              "name": "_blackListedUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 669,
                              "src": "8915:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8901:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 674,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1160,
                            1161
                          ],
                          "referencedDeclaration": 1160,
                          "src": "8893:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8893:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 679,
                      "nodeType": "ExpressionStatement",
                      "src": "8893:40:0"
                    },
                    {
                      "assignments": [
                        681
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 681,
                          "name": "dirtyFunds",
                          "nodeType": "VariableDeclaration",
                          "scope": 702,
                          "src": "8943:15:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 680,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "8943:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 685,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 683,
                            "name": "_blackListedUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 669,
                            "src": "8971:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 682,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            346
                          ],
                          "referencedDeclaration": 346,
                          "src": "8961:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8961:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "8943:45:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 686,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 216,
                            "src": "8998:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 688,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 687,
                            "name": "_blackListedUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 669,
                            "src": "9007:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "8998:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9027:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8998:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 691,
                      "nodeType": "ExpressionStatement",
                      "src": "8998:30:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 692,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 141,
                          "src": "9038:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "-=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 693,
                          "name": "dirtyFunds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 681,
                          "src": "9054:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9038:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 695,
                      "nodeType": "ExpressionStatement",
                      "src": "9038:26:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 697,
                            "name": "_blackListedUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 669,
                            "src": "9094:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 698,
                            "name": "dirtyFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 681,
                            "src": "9112:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 696,
                          "name": "DestroyedBlackFunds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 708,
                          "src": "9074:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256)"
                          }
                        },
                        "id": 699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9074:49:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 700,
                      "nodeType": "ExpressionStatement",
                      "src": "9074:49:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 702,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 672,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 671,
                      "name": "onlyOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "8873:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "8873:9:0"
                  }
                ],
                "name": "destroyBlackFunds",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 670,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 669,
                      "name": "_blackListedUser",
                      "nodeType": "VariableDeclaration",
                      "scope": 702,
                      "src": "8840:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 668,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8840:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "8839:26:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 673,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "8883:0:0"
                },
                "scope": 717,
                "src": "8812:318:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 708,
                "name": "DestroyedBlackFunds",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 707,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 704,
                      "indexed": false,
                      "name": "_blackListedUser",
                      "nodeType": "VariableDeclaration",
                      "scope": 708,
                      "src": "9162:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 703,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9162:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 706,
                      "indexed": false,
                      "name": "_balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 708,
                      "src": "9188:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 705,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9188:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "9161:41:0"
                },
                "src": "9136:67:0"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 712,
                "name": "AddedBlackList",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 711,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 710,
                      "indexed": false,
                      "name": "_user",
                      "nodeType": "VariableDeclaration",
                      "scope": 712,
                      "src": "9230:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 709,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9230:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "9229:15:0"
                },
                "src": "9209:36:0"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 716,
                "name": "RemovedBlackList",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 715,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 714,
                      "indexed": false,
                      "name": "_user",
                      "nodeType": "VariableDeclaration",
                      "scope": 716,
                      "src": "9274:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 713,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9274:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "9273:15:0"
                },
                "src": "9251:38:0"
              }
            ],
            "scope": 1143,
            "src": "8061:1231:0"
          },
          {
            "baseContracts": [
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 718,
                  "name": "StandardToken",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 546,
                  "src": "9328:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_StandardToken_$546",
                    "typeString": "contract StandardToken"
                  }
                },
                "id": 719,
                "nodeType": "InheritanceSpecifier",
                "src": "9328:13:0"
              }
            ],
            "contractDependencies": [
              205,
              139,
              169,
              347,
              546
            ],
            "contractKind": "contract",
            "documentation": null,
            "fullyImplemented": false,
            "id": 749,
            "linearizedBaseContracts": [
              749,
              546,
              205,
              347,
              169,
              139
            ],
            "name": "UpgradedStandardToken",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": null,
                "documentation": null,
                "id": 728,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "transferByLegacy",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 726,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 721,
                      "name": "from",
                      "nodeType": "VariableDeclaration",
                      "scope": 728,
                      "src": "9494:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 720,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9494:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 723,
                      "name": "to",
                      "nodeType": "VariableDeclaration",
                      "scope": 728,
                      "src": "9508:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 722,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9508:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 725,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 728,
                      "src": "9520:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 724,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9520:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "9493:38:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 727,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "9538:0:0"
                },
                "scope": 749,
                "src": "9468:71:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": null,
                "documentation": null,
                "id": 739,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "transferFromByLegacy",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 737,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 730,
                      "name": "sender",
                      "nodeType": "VariableDeclaration",
                      "scope": 739,
                      "src": "9574:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 729,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9574:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 732,
                      "name": "from",
                      "nodeType": "VariableDeclaration",
                      "scope": 739,
                      "src": "9590:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 731,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9590:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 734,
                      "name": "spender",
                      "nodeType": "VariableDeclaration",
                      "scope": 739,
                      "src": "9604:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 733,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9604:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 736,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 739,
                      "src": "9621:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 735,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9621:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "9573:59:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 738,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "9639:0:0"
                },
                "scope": 749,
                "src": "9544:96:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": null,
                "documentation": null,
                "id": 748,
                "implemented": false,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "approveByLegacy",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 746,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 741,
                      "name": "from",
                      "nodeType": "VariableDeclaration",
                      "scope": 748,
                      "src": "9670:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 740,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9670:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 743,
                      "name": "spender",
                      "nodeType": "VariableDeclaration",
                      "scope": 748,
                      "src": "9684:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 742,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9684:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 745,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 748,
                      "src": "9701:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 744,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9701:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "9669:43:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 747,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "9719:0:0"
                },
                "scope": 749,
                "src": "9645:75:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              }
            ],
            "scope": 1143,
            "src": "9294:428:0"
          },
          {
            "baseContracts": [
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 750,
                  "name": "Pausable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 603,
                  "src": "9748:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Pausable_$603",
                    "typeString": "contract Pausable"
                  }
                },
                "id": 751,
                "nodeType": "InheritanceSpecifier",
                "src": "9748:8:0"
              },
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 752,
                  "name": "StandardToken",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 546,
                  "src": "9758:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_StandardToken_$546",
                    "typeString": "contract StandardToken"
                  }
                },
                "id": 753,
                "nodeType": "InheritanceSpecifier",
                "src": "9758:13:0"
              },
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 754,
                  "name": "BlackList",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 717,
                  "src": "9773:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BlackList_$717",
                    "typeString": "contract BlackList"
                  }
                },
                "id": 755,
                "nodeType": "InheritanceSpecifier",
                "src": "9773:9:0"
              }
            ],
            "contractDependencies": [
              205,
              139,
              169,
              347,
              546,
              603,
              717
            ],
            "contractKind": "contract",
            "documentation": null,
            "fullyImplemented": true,
            "id": 1142,
            "linearizedBaseContracts": [
              1142,
              717,
              546,
              205,
              347,
              169,
              603,
              139
            ],
            "name": "TetherToken",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "id": 757,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 1142,
                "src": "9790:18:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 756,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "9790:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 759,
                "name": "symbol",
                "nodeType": "VariableDeclaration",
                "scope": 1142,
                "src": "9814:20:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 758,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "9814:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 761,
                "name": "decimals",
                "nodeType": "VariableDeclaration",
                "scope": 1142,
                "src": "9840:20:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 760,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "9840:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 763,
                "name": "upgradedAddress",
                "nodeType": "VariableDeclaration",
                "scope": 1142,
                "src": "9866:30:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 762,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "9866:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 765,
                "name": "deprecated",
                "nodeType": "VariableDeclaration",
                "scope": 1142,
                "src": "9902:22:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 764,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "9902:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 802,
                  "nodeType": "Block",
                  "src": "10314:194:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 776,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 141,
                          "src": "10324:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 777,
                          "name": "_initialSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 767,
                          "src": "10339:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10324:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 779,
                      "nodeType": "ExpressionStatement",
                      "src": "10324:29:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 780,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 757,
                          "src": "10363:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 781,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 769,
                          "src": "10370:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "src": "10363:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "id": 783,
                      "nodeType": "ExpressionStatement",
                      "src": "10363:12:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 784,
                          "name": "symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 759,
                          "src": "10385:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 785,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 771,
                          "src": "10394:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "src": "10385:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "id": 787,
                      "nodeType": "ExpressionStatement",
                      "src": "10385:16:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 788,
                          "name": "decimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 761,
                          "src": "10411:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 789,
                          "name": "_decimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 773,
                          "src": "10422:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10411:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 791,
                      "nodeType": "ExpressionStatement",
                      "src": "10411:20:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 792,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 216,
                            "src": "10441:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 794,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 793,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99,
                            "src": "10450:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "10441:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 795,
                          "name": "_initialSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 767,
                          "src": "10459:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10441:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 797,
                      "nodeType": "ExpressionStatement",
                      "src": "10441:32:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 798,
                          "name": "deprecated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 765,
                          "src": "10483:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10496:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "10483:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 801,
                      "nodeType": "ExpressionStatement",
                      "src": "10483:18:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 803,
                "implemented": true,
                "isConstructor": true,
                "isDeclaredConst": false,
                "modifiers": [],
                "name": "TetherToken",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 774,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 767,
                      "name": "_initialSupply",
                      "nodeType": "VariableDeclaration",
                      "scope": 803,
                      "src": "10240:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 766,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10240:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 769,
                      "name": "_name",
                      "nodeType": "VariableDeclaration",
                      "scope": 803,
                      "src": "10261:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 768,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "10261:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 771,
                      "name": "_symbol",
                      "nodeType": "VariableDeclaration",
                      "scope": 803,
                      "src": "10275:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 770,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "10275:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 773,
                      "name": "_decimals",
                      "nodeType": "VariableDeclaration",
                      "scope": 803,
                      "src": "10291:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 772,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10291:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "10239:67:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 775,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "10314:0:0"
                },
                "scope": 1142,
                "src": "10219:289:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 840,
                  "nodeType": "Block",
                  "src": "10655:254:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "10673:26:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 813,
                                "name": "isBlackListed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 631,
                                "src": "10674:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 816,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 814,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1157,
                                  "src": "10688:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 815,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "10688:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10674:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 812,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1160,
                            1161
                          ],
                          "referencedDeclaration": 1160,
                          "src": "10665:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10665:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 819,
                      "nodeType": "ExpressionStatement",
                      "src": "10665:35:0"
                    },
                    {
                      "condition": {
                        "argumentTypes": null,
                        "id": 820,
                        "name": "deprecated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "10714:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 838,
                        "nodeType": "Block",
                        "src": "10844:59:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 834,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 805,
                                  "src": "10880:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 835,
                                  "name": "_value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 807,
                                  "src": "10885:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 832,
                                  "name": "super",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1189,
                                  "src": "10865:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_super$_TetherToken_$1142",
                                    "typeString": "contract super TetherToken"
                                  }
                                },
                                "id": 833,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 334,
                                "src": "10865:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,uint256)"
                                }
                              },
                              "id": 836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10865:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "functionReturnParameters": 811,
                            "id": 837,
                            "nodeType": "Return",
                            "src": "10858:34:0"
                          }
                        ]
                      },
                      "id": 839,
                      "nodeType": "IfStatement",
                      "src": "10710:193:0",
                      "trueBody": {
                        "id": 831,
                        "nodeType": "Block",
                        "src": "10726:112:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 825,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1157,
                                    "src": "10803:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 826,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "10803:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 827,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 805,
                                  "src": "10815:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 828,
                                  "name": "_value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 807,
                                  "src": "10820:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 822,
                                      "name": "upgradedAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 763,
                                      "src": "10769:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 821,
                                    "name": "UpgradedStandardToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 749,
                                    "src": "10747:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$749_$",
                                      "typeString": "type(contract UpgradedStandardToken)"
                                    }
                                  },
                                  "id": 823,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10747:38:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_UpgradedStandardToken_$749",
                                    "typeString": "contract UpgradedStandardToken"
                                  }
                                },
                                "id": 824,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transferByLegacy",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 728,
                                "src": "10747:55:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256) external"
                                }
                              },
                              "id": 829,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10747:80:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "functionReturnParameters": 811,
                            "id": 830,
                            "nodeType": "Return",
                            "src": "10740:87:0"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": null,
                "id": 841,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 810,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 809,
                      "name": "whenNotPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 564,
                      "src": "10641:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "10641:13:0"
                  }
                ],
                "name": "transfer",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 808,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 805,
                      "name": "_to",
                      "nodeType": "VariableDeclaration",
                      "scope": 841,
                      "src": "10608:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 804,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10608:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 807,
                      "name": "_value",
                      "nodeType": "VariableDeclaration",
                      "scope": 841,
                      "src": "10621:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 806,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10621:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "10607:26:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 811,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "10655:0:0"
                },
                "scope": 1142,
                "src": "10590:319:0",
                "stateMutability": "nonpayable",
                "superFunction": 334,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 881,
                  "nodeType": "Block",
                  "src": "11075:271:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 856,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "11093:21:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 853,
                                "name": "isBlackListed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 631,
                                "src": "11094:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 855,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 854,
                                "name": "_from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 843,
                                "src": "11108:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11094:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 852,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1160,
                            1161
                          ],
                          "referencedDeclaration": 1160,
                          "src": "11085:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11085:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 858,
                      "nodeType": "ExpressionStatement",
                      "src": "11085:30:0"
                    },
                    {
                      "condition": {
                        "argumentTypes": null,
                        "id": 859,
                        "name": "deprecated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "11129:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 879,
                        "nodeType": "Block",
                        "src": "11270:70:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 874,
                                  "name": "_from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 843,
                                  "src": "11310:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 875,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 845,
                                  "src": "11317:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 876,
                                  "name": "_value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 847,
                                  "src": "11322:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 872,
                                  "name": "super",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1189,
                                  "src": "11291:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_super$_TetherToken_$1142",
                                    "typeString": "contract super TetherToken"
                                  }
                                },
                                "id": 873,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 481,
                                "src": "11291:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256)"
                                }
                              },
                              "id": 877,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11291:38:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "functionReturnParameters": 851,
                            "id": 878,
                            "nodeType": "Return",
                            "src": "11284:45:0"
                          }
                        ]
                      },
                      "id": 880,
                      "nodeType": "IfStatement",
                      "src": "11125:215:0",
                      "trueBody": {
                        "id": 871,
                        "nodeType": "Block",
                        "src": "11141:123:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 864,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1157,
                                    "src": "11222:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 865,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "11222:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 866,
                                  "name": "_from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 843,
                                  "src": "11234:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 867,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 845,
                                  "src": "11241:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 868,
                                  "name": "_value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 847,
                                  "src": "11246:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 861,
                                      "name": "upgradedAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 763,
                                      "src": "11184:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 860,
                                    "name": "UpgradedStandardToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 749,
                                    "src": "11162:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$749_$",
                                      "typeString": "type(contract UpgradedStandardToken)"
                                    }
                                  },
                                  "id": 862,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11162:38:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_UpgradedStandardToken_$749",
                                    "typeString": "contract UpgradedStandardToken"
                                  }
                                },
                                "id": 863,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transferFromByLegacy",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 739,
                                "src": "11162:59:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,address,uint256) external"
                                }
                              },
                              "id": 869,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11162:91:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "functionReturnParameters": 851,
                            "id": 870,
                            "nodeType": "Return",
                            "src": "11155:98:0"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": null,
                "id": 882,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 850,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 849,
                      "name": "whenNotPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 564,
                      "src": "11061:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "11061:13:0"
                  }
                ],
                "name": "transferFrom",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 848,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 843,
                      "name": "_from",
                      "nodeType": "VariableDeclaration",
                      "scope": 882,
                      "src": "11013:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 842,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11013:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 845,
                      "name": "_to",
                      "nodeType": "VariableDeclaration",
                      "scope": 882,
                      "src": "11028:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 844,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11028:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 847,
                      "name": "_value",
                      "nodeType": "VariableDeclaration",
                      "scope": 882,
                      "src": "11041:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 846,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11041:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "11012:41:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 851,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "11075:0:0"
                },
                "scope": 1142,
                "src": "10991:355:0",
                "stateMutability": "nonpayable",
                "superFunction": 481,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 905,
                  "nodeType": "Block",
                  "src": "11491:175:0",
                  "statements": [
                    {
                      "condition": {
                        "argumentTypes": null,
                        "id": 889,
                        "name": "deprecated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "11505:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 903,
                        "nodeType": "Block",
                        "src": "11608:52:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 900,
                                  "name": "who",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 884,
                                  "src": "11645:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 898,
                                  "name": "super",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1189,
                                  "src": "11629:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_super$_TetherToken_$1142",
                                    "typeString": "contract super TetherToken"
                                  }
                                },
                                "id": 899,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 346,
                                "src": "11629:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 901,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11629:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 888,
                            "id": 902,
                            "nodeType": "Return",
                            "src": "11622:27:0"
                          }
                        ]
                      },
                      "id": 904,
                      "nodeType": "IfStatement",
                      "src": "11501:159:0",
                      "trueBody": {
                        "id": 897,
                        "nodeType": "Block",
                        "src": "11517:85:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 894,
                                  "name": "who",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 884,
                                  "src": "11587:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 891,
                                      "name": "upgradedAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 763,
                                      "src": "11560:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 890,
                                    "name": "UpgradedStandardToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 749,
                                    "src": "11538:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$749_$",
                                      "typeString": "type(contract UpgradedStandardToken)"
                                    }
                                  },
                                  "id": 892,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11538:38:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_UpgradedStandardToken_$749",
                                    "typeString": "contract UpgradedStandardToken"
                                  }
                                },
                                "id": 893,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 346,
                                "src": "11538:48:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 895,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11538:53:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 888,
                            "id": 896,
                            "nodeType": "Return",
                            "src": "11531:60:0"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": null,
                "id": 906,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "balanceOf",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 885,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 884,
                      "name": "who",
                      "nodeType": "VariableDeclaration",
                      "scope": 906,
                      "src": "11447:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 883,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11447:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "11446:13:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 888,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 887,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 906,
                      "src": "11485:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 886,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11485:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "11484:6:0"
                },
                "scope": 1142,
                "src": "11428:238:0",
                "stateMutability": "view",
                "superFunction": 346,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 938,
                  "nodeType": "Block",
                  "src": "11827:217:0",
                  "statements": [
                    {
                      "condition": {
                        "argumentTypes": null,
                        "id": 918,
                        "name": "deprecated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "11841:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 936,
                        "nodeType": "Block",
                        "src": "11975:63:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 932,
                                  "name": "_spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 908,
                                  "src": "12010:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 933,
                                  "name": "_value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 910,
                                  "src": "12020:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 930,
                                  "name": "super",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1189,
                                  "src": "11996:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_super$_TetherToken_$1142",
                                    "typeString": "contract super TetherToken"
                                  }
                                },
                                "id": 931,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "approve",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 529,
                                "src": "11996:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,uint256)"
                                }
                              },
                              "id": 934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11996:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "functionReturnParameters": 917,
                            "id": 935,
                            "nodeType": "Return",
                            "src": "11989:38:0"
                          }
                        ]
                      },
                      "id": 937,
                      "nodeType": "IfStatement",
                      "src": "11837:201:0",
                      "trueBody": {
                        "id": 929,
                        "nodeType": "Block",
                        "src": "11853:116:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 923,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1157,
                                    "src": "11929:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 924,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "11929:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 925,
                                  "name": "_spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 908,
                                  "src": "11941:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 926,
                                  "name": "_value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 910,
                                  "src": "11951:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 920,
                                      "name": "upgradedAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 763,
                                      "src": "11896:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 919,
                                    "name": "UpgradedStandardToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 749,
                                    "src": "11874:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$749_$",
                                      "typeString": "type(contract UpgradedStandardToken)"
                                    }
                                  },
                                  "id": 921,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11874:38:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_UpgradedStandardToken_$749",
                                    "typeString": "contract UpgradedStandardToken"
                                  }
                                },
                                "id": 922,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "approveByLegacy",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 748,
                                "src": "11874:54:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256) external"
                                }
                              },
                              "id": 927,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11874:84:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "functionReturnParameters": 917,
                            "id": 928,
                            "nodeType": "Return",
                            "src": "11867:91:0"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": null,
                "id": 939,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [
                  {
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_64_by_1",
                          "typeString": "int_const 64"
                        },
                        "id": 915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11819:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3332",
                          "id": 914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11823:2:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32_by_1",
                            "typeString": "int_const 32"
                          },
                          "value": "32"
                        },
                        "src": "11819:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_64_by_1",
                          "typeString": "int_const 64"
                        }
                      }
                    ],
                    "id": 916,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 912,
                      "name": "onlyPayloadSize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 240,
                      "src": "11803:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$_t_uint256_$",
                        "typeString": "modifier (uint256)"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "11803:23:0"
                  }
                ],
                "name": "approve",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 911,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 908,
                      "name": "_spender",
                      "nodeType": "VariableDeclaration",
                      "scope": 939,
                      "src": "11765:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 907,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11765:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 910,
                      "name": "_value",
                      "nodeType": "VariableDeclaration",
                      "scope": 939,
                      "src": "11783:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 909,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11783:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "11764:31:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 917,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "11827:0:0"
                },
                "scope": 1142,
                "src": "11748:296:0",
                "stateMutability": "nonpayable",
                "superFunction": 529,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 966,
                  "nodeType": "Block",
                  "src": "12220:193:0",
                  "statements": [
                    {
                      "condition": {
                        "argumentTypes": null,
                        "id": 948,
                        "name": "deprecated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "12234:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 964,
                        "nodeType": "Block",
                        "src": "12342:65:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 960,
                                  "name": "_owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 941,
                                  "src": "12379:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 961,
                                  "name": "_spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 943,
                                  "src": "12387:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 958,
                                  "name": "super",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1189,
                                  "src": "12363:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_super$_TetherToken_$1142",
                                    "typeString": "contract super TetherToken"
                                  }
                                },
                                "id": 959,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "allowance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 545,
                                "src": "12363:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address,address) view returns (uint256)"
                                }
                              },
                              "id": 962,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12363:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 947,
                            "id": 963,
                            "nodeType": "Return",
                            "src": "12356:40:0"
                          }
                        ]
                      },
                      "id": 965,
                      "nodeType": "IfStatement",
                      "src": "12230:177:0",
                      "trueBody": {
                        "id": 957,
                        "nodeType": "Block",
                        "src": "12246:90:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 953,
                                  "name": "_owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 941,
                                  "src": "12308:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 954,
                                  "name": "_spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 943,
                                  "src": "12316:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 950,
                                      "name": "upgradedAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 763,
                                      "src": "12281:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 949,
                                    "name": "StandardToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 546,
                                    "src": "12267:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_StandardToken_$546_$",
                                      "typeString": "type(contract StandardToken)"
                                    }
                                  },
                                  "id": 951,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "12267:30:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StandardToken_$546",
                                    "typeString": "contract StandardToken"
                                  }
                                },
                                "id": 952,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "allowance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 545,
                                "src": "12267:40:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address,address) view external returns (uint256)"
                                }
                              },
                              "id": 955,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12267:58:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 947,
                            "id": 956,
                            "nodeType": "Return",
                            "src": "12260:65:0"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": null,
                "id": 967,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "allowance",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 944,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 941,
                      "name": "_owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 967,
                      "src": "12145:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 940,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12145:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 943,
                      "name": "_spender",
                      "nodeType": "VariableDeclaration",
                      "scope": 967,
                      "src": "12161:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 942,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12161:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "12144:34:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 947,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 946,
                      "name": "remaining",
                      "nodeType": "VariableDeclaration",
                      "scope": 967,
                      "src": "12204:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 945,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12204:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "12203:16:0"
                },
                "scope": 1142,
                "src": "12126:287:0",
                "stateMutability": "view",
                "superFunction": 545,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 986,
                  "nodeType": "Block",
                  "src": "12538:115:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 974,
                          "name": "deprecated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 765,
                          "src": "12548:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12561:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "12548:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 977,
                      "nodeType": "ExpressionStatement",
                      "src": "12548:17:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 978,
                          "name": "upgradedAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 763,
                          "src": "12575:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 979,
                          "name": "_upgradedAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 969,
                          "src": "12593:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12575:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 981,
                      "nodeType": "ExpressionStatement",
                      "src": "12575:34:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 983,
                            "name": "_upgradedAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 969,
                            "src": "12629:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 982,
                          "name": "Deprecate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1135,
                          "src": "12619:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12619:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 985,
                      "nodeType": "ExpressionStatement",
                      "src": "12619:27:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 987,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 972,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 971,
                      "name": "onlyOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "12528:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "12528:9:0"
                  }
                ],
                "name": "deprecate",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 970,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 969,
                      "name": "_upgradedAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 987,
                      "src": "12495:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 968,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12495:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "12494:26:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 973,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "12538:0:0"
                },
                "scope": 1142,
                "src": "12476:177:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1004,
                  "nodeType": "Block",
                  "src": "12770:158:0",
                  "statements": [
                    {
                      "condition": {
                        "argumentTypes": null,
                        "id": 992,
                        "name": "deprecated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "12784:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 1002,
                        "nodeType": "Block",
                        "src": "12878:44:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 1000,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 141,
                              "src": "12899:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 991,
                            "id": 1001,
                            "nodeType": "Return",
                            "src": "12892:19:0"
                          }
                        ]
                      },
                      "id": 1003,
                      "nodeType": "IfStatement",
                      "src": "12780:142:0",
                      "trueBody": {
                        "id": 999,
                        "nodeType": "Block",
                        "src": "12796:76:0",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 994,
                                      "name": "upgradedAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 763,
                                      "src": "12831:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 993,
                                    "name": "StandardToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 546,
                                    "src": "12817:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_StandardToken_$546_$",
                                      "typeString": "type(contract StandardToken)"
                                    }
                                  },
                                  "id": 995,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "12817:30:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StandardToken_$546",
                                    "typeString": "contract StandardToken"
                                  }
                                },
                                "id": 996,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "totalSupply",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 146,
                                "src": "12817:42:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view external returns (uint256)"
                                }
                              },
                              "id": 997,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12817:44:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 991,
                            "id": 998,
                            "nodeType": "Return",
                            "src": "12810:51:0"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": null,
                "id": 1005,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": true,
                "modifiers": [],
                "name": "totalSupply",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 988,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "12736:2:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 991,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 990,
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "scope": 1005,
                      "src": "12764:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 989,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12764:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "12763:6:0"
                },
                "scope": 1142,
                "src": "12716:212:0",
                "stateMutability": "view",
                "superFunction": 146,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1046,
                  "nodeType": "Block",
                  "src": "13131:214:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1017,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1015,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1013,
                                "name": "_totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 141,
                                "src": "13149:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1014,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1007,
                                "src": "13164:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13149:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1016,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 141,
                              "src": "13173:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13149:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1012,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1160,
                            1161
                          ],
                          "referencedDeclaration": 1160,
                          "src": "13141:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13141:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1019,
                      "nodeType": "ExpressionStatement",
                      "src": "13141:45:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1029,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1025,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1021,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 216,
                                  "src": "13204:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1023,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1022,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99,
                                  "src": "13213:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13204:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1024,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1007,
                                "src": "13222:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13204:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1026,
                                "name": "balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 216,
                                "src": "13231:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1028,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1027,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99,
                                "src": "13240:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13231:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13204:42:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1020,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1160,
                            1161
                          ],
                          "referencedDeclaration": 1160,
                          "src": "13196:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13196:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1031,
                      "nodeType": "ExpressionStatement",
                      "src": "13196:51:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1032,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 216,
                            "src": "13258:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1034,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1033,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99,
                            "src": "13267:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "13258:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 1035,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1007,
                          "src": "13277:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13258:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1037,
                      "nodeType": "ExpressionStatement",
                      "src": "13258:25:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 1038,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 141,
                          "src": "13293:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 1039,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1007,
                          "src": "13309:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13293:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1041,
                      "nodeType": "ExpressionStatement",
                      "src": "13293:22:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1043,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1007,
                            "src": "13331:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1042,
                          "name": "Issue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1127,
                          "src": "13325:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256)"
                          }
                        },
                        "id": 1044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13325:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1045,
                      "nodeType": "ExpressionStatement",
                      "src": "13325:13:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 1047,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 1010,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 1009,
                      "name": "onlyOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "13121:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "13121:9:0"
                  }
                ],
                "name": "issue",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1008,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1007,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 1047,
                      "src": "13101:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1006,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13101:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "13100:13:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 1011,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "13131:0:0"
                },
                "scope": 1142,
                "src": "13086:259:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1082,
                  "nodeType": "Block",
                  "src": "13615:184:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1057,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 1055,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 141,
                              "src": "13633:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1056,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1049,
                              "src": "13649:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13633:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1054,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1160,
                            1161
                          ],
                          "referencedDeclaration": 1160,
                          "src": "13625:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13625:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1059,
                      "nodeType": "ExpressionStatement",
                      "src": "13625:31:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1061,
                                "name": "balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 216,
                                "src": "13674:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1063,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1062,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99,
                                "src": "13683:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13674:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1064,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1049,
                              "src": "13693:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13674:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1060,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1160,
                            1161
                          ],
                          "referencedDeclaration": 1160,
                          "src": "13666:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13666:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1067,
                      "nodeType": "ExpressionStatement",
                      "src": "13666:34:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 1068,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 141,
                          "src": "13711:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "-=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 1069,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1049,
                          "src": "13727:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13711:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1071,
                      "nodeType": "ExpressionStatement",
                      "src": "13711:22:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1072,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 216,
                            "src": "13743:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1074,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1073,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99,
                            "src": "13752:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "13743:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "-=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 1075,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1049,
                          "src": "13762:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13743:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1077,
                      "nodeType": "ExpressionStatement",
                      "src": "13743:25:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1079,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1049,
                            "src": "13785:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1078,
                          "name": "Redeem",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1131,
                          "src": "13778:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256)"
                          }
                        },
                        "id": 1080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13778:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1081,
                      "nodeType": "ExpressionStatement",
                      "src": "13778:14:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 1083,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 1052,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 1051,
                      "name": "onlyOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "13605:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "13605:9:0"
                  }
                ],
                "name": "redeem",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1050,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1049,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 1083,
                      "src": "13585:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1048,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13585:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "13584:13:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 1053,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "13615:0:0"
                },
                "scope": 1142,
                "src": "13569:230:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1122,
                  "nodeType": "Block",
                  "src": "13878:305:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 1093,
                              "name": "newBasisPoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1085,
                              "src": "13984:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "3230",
                              "id": 1094,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14001:2:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_20_by_1",
                                "typeString": "int_const 20"
                              },
                              "value": "20"
                            },
                            "src": "13984:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1092,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1160,
                            1161
                          ],
                          "referencedDeclaration": 1160,
                          "src": "13976:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13976:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1097,
                      "nodeType": "ExpressionStatement",
                      "src": "13976:28:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 1099,
                              "name": "newMaxFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1087,
                              "src": "14022:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "3530",
                              "id": 1100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14034:2:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50_by_1",
                                "typeString": "int_const 50"
                              },
                              "value": "50"
                            },
                            "src": "14022:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1098,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1160,
                            1161
                          ],
                          "referencedDeclaration": 1160,
                          "src": "14014:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14014:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1103,
                      "nodeType": "ExpressionStatement",
                      "src": "14014:23:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 1104,
                          "name": "basisPointsRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 219,
                          "src": "14048:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 1105,
                          "name": "newBasisPoints",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1085,
                          "src": "14066:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14048:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1107,
                      "nodeType": "ExpressionStatement",
                      "src": "14048:32:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 1108,
                          "name": "maximumFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 222,
                          "src": "14090:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3130",
                                "id": 1111,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14117:2:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1112,
                                "name": "decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 761,
                                "src": "14121:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "14117:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1109,
                              "name": "newMaxFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1087,
                              "src": "14103:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34,
                            "src": "14103:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14103:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14090:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1116,
                      "nodeType": "ExpressionStatement",
                      "src": "14090:40:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1118,
                            "name": "basisPointsRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 219,
                            "src": "14148:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1119,
                            "name": "maximumFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 222,
                            "src": "14165:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1117,
                          "name": "Params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1141,
                          "src": "14141:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                            "typeString": "function (uint256,uint256)"
                          }
                        },
                        "id": 1120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14141:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1121,
                      "nodeType": "ExpressionStatement",
                      "src": "14141:35:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 1123,
                "implemented": true,
                "isConstructor": false,
                "isDeclaredConst": false,
                "modifiers": [
                  {
                    "arguments": null,
                    "id": 1090,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 1089,
                      "name": "onlyOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "13868:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$__$",
                        "typeString": "modifier ()"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "13868:9:0"
                  }
                ],
                "name": "setParams",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1088,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1085,
                      "name": "newBasisPoints",
                      "nodeType": "VariableDeclaration",
                      "scope": 1123,
                      "src": "13824:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1084,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13824:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1087,
                      "name": "newMaxFee",
                      "nodeType": "VariableDeclaration",
                      "scope": 1123,
                      "src": "13845:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1086,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13845:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "13823:37:0"
                },
                "payable": false,
                "returnParameters": {
                  "id": 1091,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "13878:0:0"
                },
                "scope": 1142,
                "src": "13805:378:0",
                "stateMutability": "nonpayable",
                "superFunction": null,
                "visibility": "public"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 1127,
                "name": "Issue",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 1126,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1125,
                      "indexed": false,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 1127,
                      "src": "14241:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1124,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14241:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "14240:13:0"
                },
                "src": "14229:25:0"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 1131,
                "name": "Redeem",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 1130,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1129,
                      "indexed": false,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 1131,
                      "src": "14312:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1128,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14312:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "14311:13:0"
                },
                "src": "14299:26:0"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 1135,
                "name": "Deprecate",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 1134,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1133,
                      "indexed": false,
                      "name": "newAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 1135,
                      "src": "14389:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1132,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "14389:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "14388:20:0"
                },
                "src": "14373:36:0"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 1141,
                "name": "Params",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 1140,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1137,
                      "indexed": false,
                      "name": "feeBasisPoints",
                      "nodeType": "VariableDeclaration",
                      "scope": 1141,
                      "src": "14469:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1136,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14469:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1139,
                      "indexed": false,
                      "name": "maxFee",
                      "nodeType": "VariableDeclaration",
                      "scope": 1141,
                      "src": "14490:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1138,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14490:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "14468:34:0"
                },
                "src": "14456:47:0"
              }
            ],
            "scope": 1143,
            "src": "9724:4781:0"
          }
        ],
        "src": "67:14438:0"
      },
      "id": 0
    }
  }
}
